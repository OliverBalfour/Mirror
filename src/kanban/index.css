
:root {
  --cardWidth: 300px;
  --grid: 8px;
}

.root {
  height: 100%;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  padding: var(--grid);
  font-size: 14px;
}
.root * {
  flex-shrink: 0;
}
.column {
  background: #DFEEEE;
  padding: var(--grid);
  padding-bottom: 24px;
  width: var(--cardWidth);
  border: 1px solid #CCDCDC;
  border-radius: 4px;
  margin: var(--grid);
  transition: border 0.2s;
  height: calc(100vh - 160px);
  overflow: hidden;
}
.addColumnContainer {
  width: calc(var(--cardWidth) + 5*var(--grid));
}
.addColumn {
  /* we also apply a margin conditionally in the JSX when dragging columns */
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100px;
  background: #DFEEEE;
  padding: var(--grid);
  padding-bottom: 24px;
  width: var(--cardWidth);
  border: 1px solid #CCDCDC;
  border-radius: 5px;
  margin: var(--grid);
}
.columnHeaderContainer {
  padding: 0;
  display: flex;
  justify-content: space-between;
}
.columnHeaderText {
  padding-left: 8px;
  padding-bottom: 0;
  font-size: 1.4em;
  font-weight: 500;
}
.columnHeaderRule {
  overflow: hidden;
  border: none;
  color: #CCDCDC;
  background-color: #CCDCDC;
  height: 1px;
  /* +1 is border */
  width: calc(var(--cardWidth) + var(--grid) * 2 + 1);
  margin-left: calc(-1 * var(--grid) - 1);
}
.card {
  user-select: none;
  padding: 10px 13px;
  margin: 0 0 var(--grid) 0;
  background: white;
  border-radius: 3px;
  transition: opacity 0.2s, box-shadow 0.2s;
  overflow: hidden;
}
.card > p { margin: 0 }
.card:hover, .card:focus {
  box-shadow: 0 1px 3px rgba(100, 100, 100, 0.3);
}
.draggingCard {
  opacity: 0.7;
  box-shadow: 0 1px 3px rgba(100, 100, 100, 0.3);
}
.columnContainer {
  transition: opacity 0.6s;
}
.draggingColumn {
  opacity: 0.7;
}
