
@import "../common/variables";

.boardview-root {
  width: 100vw;
  overflow-x: auto;
  height: 100%; // this is twice the height of the screen when dragging a column

  // This element is inserted when dragging a column to add spacing at the
  // end to drop the column on. Because we can't get it before add column block
  // we simply hide it
  & > div[data-rbd-placeholder-context-id] {
    display: none !important;
  }
}
.column-droppable {
  flex-grow: 1;
  height: 100%;
}
.card-droppable {
  flex-grow: 1;
  height: 100%;
}
.column-internals-container {
  flex: 1 0;
  width: 100%;
  height: 100%;
  overflow-y: auto;
  overflow-x: hidden;
  padding: 0;
  padding-top: $gridSpacing;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
}
.column-internals {
  width: 100%;
  flex: 1;
}
.root {
  height: 100%;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  padding: $gridSpacing;
  font-size: 14px;
  box-sizing: border-box;
  overflow: hidden;
  overflow-x: auto;
  &::-webkit-scrollbar {
    height: 10px;
  }
  &::-webkit-scrollbar-track {
    border-radius: 0;
  }
}
.root * {
  flex-shrink: 0;
}
.column {
  display: flex;
  flex-direction: column;
  background: $columnBackground;
  padding: $gridSpacing;
  padding-right: 0;
  padding-bottom: 0;
  width: $cardWidth + $gridSpacing * 2 + 2; // add padding and border
  max-width: calc(100vw - #{4*$gridSpacing});
  border: 1px solid #CCDCDC;
  border-radius: 4px;
  transition: border 0.2s;
  box-sizing: border-box;
  height: 100%;
  overflow: hidden;
}
.columnContainer {
  transition: opacity 0.6s;
  height: 100%;
  padding: $gridSpacing;
}
.addColumnContainer {
  padding-right: 2*$gridSpacing - 2px;
  box-sizing: content-box;
}
.addColumnContainer.hidden {
  margin-left: $cardWidth + 4*$gridSpacing + 2;
}
.addColumn {
  /* we also apply a margin conditionally in the JSX when dragging columns */
  display: flex;
  justify-content: center;
  align-items: center;
  padding-bottom: $gridSpacing;
  height: 100px;
}
.columnHeaderContainer {
  padding: 0;
  padding-right: $gridSpacing;
  display: flex;
}
.columnHeaderText {
  padding-left: 8px;
  padding-bottom: 0;
  font-size: 1.4em;
  font-weight: 500;
  user-select: none;
}
.columnHeaderRule {
  overflow: hidden;
  border: none !important;
  color: #CCDCDC;
  background-color: #CCDCDC;
  height: 1px;
  /* +2px is border */
  width: $cardWidth + $gridSpacing * 2 + 2px;
  margin-left: -$gridSpacing - 1px;
  margin-bottom: 0;
}
.card {
  user-select: none;
  padding: 10px 13px;
  margin: 0;
  margin-bottom: $gridSpacing;
  margin-right: $gridSpacing;
  background: white;
  border-radius: 3px;
  transition: opacity 0.2s, box-shadow 0.2s;
  overflow: hidden;
  & > p {
    margin: 0;
  }
  &:hover, &:focus {
    box-shadow: 0 1px 3px rgba(100, 100, 100, 0.3);
  }
}
.theme-dark {
  .card:hover, .card:focus {
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
  }
}
.new-card-sheet {
  margin-right: $gridSpacing / 2;
}
.draggingCard {
  opacity: 0.7;
  box-shadow: 0 1px 3px rgba(100, 100, 100, 0.3);
}
.draggingColumn {
  opacity: 0.7;
}
.editingCardButtons {
  margin-bottom: $gridSpacing;
  box-shadow: 0px 4px 2px -2px rgba(0,0,0,0.15);
  width: 100%;
  * {
    border-top-left-radius: 0 !important;
    border-top-right-radius: 0 !important;
  }
}

.MuiChip-labelSmall.attribute-label {
  padding: 3px;
}
.attribute-header {
  margin-bottom: 6px;
  margin-top: 6px;
}
.MuiChip-root.attribute-indicator {
  margin-right: 4px;
  margin-top: 4px;
}

@mixin chip-urgency($colour) {
  background-color: $colour !important;
  border-color: darken($colour, 13%) !important;
}
@mixin chip-urgency-dark($colour) {
  background-color: $colour !important;
  border-color: desaturate(lighten($colour, 30%), 38%) !important;
}
.urgency-overdue {
  @include chip-urgency($colourOverdue);
}
.theme-dark .urgency-overdue {
  @include chip-urgency-dark($darkColourOverdue);
}
.urgency-two-hours {
  @include chip-urgency($colourDue);
}
.theme-dark .urgency-two-hours {
  @include chip-urgency-dark($darkColourDue);
}
.urgency-day {
  @include chip-urgency(mix($colourDue, $colourNotDueSoon, 75%));
}
.theme-dark .urgency-day {
  @include chip-urgency-dark(mix($darkColourDue, $darkColourNotDueSoon, 75%));
}
.urgency-week {
  @include chip-urgency(mix($colourDue, $colourNotDueSoon, 33%));
}
.theme-dark .urgency-week {
  @include chip-urgency-dark(mix($darkColourDue, $darkColourNotDueSoon, 33%));
}
.urgency-fortnight {
  @include chip-urgency($colourNotDueSoon);
}
.theme-dark .urgency-fortnight {
  @include chip-urgency-dark($darkColourNotDueSoon);
}

.markdown-selectable {
  display: block;
  border-radius: 4px;
  padding: 4px;
  &:focus {
    outline: none;
    border: 1px solid #3f51b5;
    padding: 3px;
  }
}

@media only screen and (max-height: 800px) {
  .descriptionEditor {
    height: 120px;
  }
}
.descriptionEditor {
  min-height: 120px;
}

.theme-dark {
  .column {
    background: $darkSecondary;
  }
  .card {
    background: $darkMain;
  }
  .columnHeaderRule {
    background: $darkBorder;
  }
  .editingCardButtons button {
    background: $darkMain;
    color: white;
  }
}
del {
  color: #808080 !important;
}