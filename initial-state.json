{"mirror.cards.20200921-112205-19":{"id":"20200921-112205-19","type":0,"content":"Cook pizza for dinner","created":1600651325987,"edited":1600651325987,"moved":1611382682323},"mirror.cards.20200921-112205-20":{"id":"20200921-112205-20","type":0,"content":"Random emojis ðŸ™‚","created":1600651325987,"edited":1613888123796,"moved":1611382696154,"description":"hello there\n\nhello again"},"mirror.cards.20200921-112205-21":{"id":"20200921-112205-21","type":0,"content":"Make a cool app","created":1600651325987,"edited":1613888014239,"moved":1613888017467,"time":null},"mirror.cards.20200921-112205-22":{"id":"20200921-112205-22","type":0,"content":"Learn Common Lisp","created":1600651325987,"edited":1600651325987,"moved":1613634366800},"mirror.cards.20200921-112205-23":{"id":"20200921-112205-23","type":0,"content":"Sign up for market day","created":1600651325987,"edited":1613634263893,"moved":1611382693605},"mirror.cards.20200921-112205-26":{"id":"20200921-112205-26","type":0,"content":"Finish your chemistry homework","created":1600651325987,"edited":1600651325987,"moved":1611140790619},"mirror.cards.20200921-112831":{"id":"20200921-112831","type":1,"created":1600651711983,"edited":1611220380100,"moved":1600651711983,"content":"Linking to Other Notes","description":"To link to other notes, you can use wiki-link syntax. This is the ID of a note (up there in the URL) surrounded in double square brackets like this:\n\n`[[20200921-112831]]`\n\nTo help you out, when you start typing `[[a search term` some autocomplete options will pop up, searching the titles, descriptions and IDs of each note.\n\nIf you want to try it out, click the pencil icon to edit, and type `[[` and type 'zettelkasten' and you should see the homepage note come up.\n\n<!-- Type the `[[` without backticks, which tell Markdown to ignore the format -->\n\n[[20200921-095821]]\n\nYou can still use markdown style links like `[link text](http://example.com)` to link to other websites."},"mirror.cards.20200921-113337":{"id":"20200921-113337","type":1,"created":1600652017723,"edited":1602489978887,"moved":1600652017723,"content":"Formatting Notes","description":"All of your notes are written in [Github Flavoured Markdown](https://docs.github.com/en/github/writing-on-github/basic-writing-and-formatting-syntax).\n\nMarkdown is basically a simple extension to plain text that formats things like this:\n\n```\n* this\n* list\n```\n\ninto this:\n\n* this\n* list\n\namong many other functions.\n\nThere are several extensions to Markdown which you can use:\n\n* Wikilink syntax for linking between notes ([[20200921-112831]]).\n* [[20201012-121348]] (LaTeX syntax)\n* [[20201012-070239]]"},"mirror.cards.20200921-113652":{"id":"20200921-113652","type":1,"created":1600652212048,"edited":1602465156298,"moved":1600652212048,"content":"Why Zettelkasten?","description":"* [[20200921-114704]]\n* [[20200921-114801]]"},"mirror.cards.20200921-114704":{"id":"20200921-114704","type":1,"created":1600652824930,"edited":1600652858305,"moved":1600652824930,"content":"Heterarchy over Hierarchy","description":"In a hierarchical note taking program like [Cherrytree](https://www.giuspen.com/cherrytree/), you have to impose a pre-planned hierarchy on your notes before writing them. Often times, the structure you plan tends to lead to some sections being a thousand words long while others are tiny. Restructuring your notes is difficult and tedious, and it's hard to judge when you need to do so.\n\nIn Zettelkasten, you can reorganise your notes frictionlessly by just changing a link or splitting one note into two. As each note is small to begin with, it's easy to see when to split them (principle of atomicity), and having more notes does not decrease ease of use."},"mirror.cards.20200921-114801":{"id":"20200921-114801","type":1,"created":1600652881728,"edited":1600652906300,"moved":1600652881728,"content":"Emphasises Links Between Ideas","description":"When you write in a notebook, often ideas connect in complex ways which the medium of a notebook cannot easily express. For instance, you may have an idea on page 47 that builds on another on page 22. To benefit from this link you would need to reread your notebook to find it, and then write a page number as a reference, which is quite clunky.\n\nIn a hierarchical note taking program, often times ideas in different sections are linked, which is not easily accounted for.\n\nIn Zettelkasten, the structure naturally arises to suit your needs. You may find yourself writing notes that link to a number of other notes, as portals into a specific topic. You may find you need to link ideas in different domains as well, and this can be accomplished through the one inter-card linking mechanism."},"mirror.cards.20200921-115100":{"id":"20200921-115100","type":1,"created":1600653060746,"edited":1602463940510,"moved":1600653060746,"content":"Ideas for Notes","description":"You can use notes to represent anything. Here is a list of uses I have found for them:\n\n* Crazy ideas. This forces you to fully form your idea and allows you to revisit it or link it to other ideas later.\n* Overviews of concepts. Think Wikipedia articles, but far shorter and only describing what is relevant to your needs. If you use a notebook in classes, you can summarise them into notes here to grow your Zettelkasten.\n* Hub notes. These are a common pattern for organising your notes by creating notes which link to a number of notes on a certain topic.\n* Annotated bibliographical entries. Add a citation and some key points, and when you write a note elsewhere you can cite your bibliographical notes.\n* Blog post ideas\n* Networking. Never tried this though.\n* Tutorials. If you always forget how to install X on Y, dump it here!\n* Personal reflection"},"mirror.cards.20201012-070239":{"id":"20201012-070239","type":1,"created":1602489759425,"edited":1613649014001,"moved":1602489759425,"content":"Syntax highlighting","description":"Syntax highlighting is enabled for a subset of languages:\n\n* JavaScript (with JSX xor TypeScript)\n\n```jsx\nconst c = (a, b) => <div className={b}>{a}</div>;\nwhile (true)\n    console.log(c(1,1));\n```\n\n* Python\n\n```py\ndef f(x):\n  return x**2 - 2*x + 1\ng = lambda x: (x-1)**2\nassert(f(2) == g(2))\n```\n\n* Haskell\n\n```hs\nchainl1 :: Parser a -> Parser (a -> a -> a) -> Parser a\np `chainl1` op = p >>= chain_rest\n    where chain_rest a = ((op <*> pure a <*> p) >>= rest) <|> return a\n```\n\nThe exact list of languages currently supported via [Prism.js](https://prismjs.com/) is: markup (HTML/XML), CSS, JS, C, C++, Haskell, $$\\LaTeX$$, PureScript, Python, JSX, TypeScript.\n\nFeel free to request more languages via the [issue tracker](https://github.com/OliverBalfour/Mirror/issues) as it is trivial to add more."},"mirror.cards.20201012-121348":{"id":"20201012-121348","type":1,"created":1602465228857,"edited":1613887954972,"moved":1602465228857,"content":"Math equations","description":"You can use LaTeX syntax for inline and block level equations. They must be delimited by `$$double dollar signs$$`.\n\nWhen they stand on their own line they are block level like below, otherwise they are inline ($$a = b$$).\n\n$$\\hat{x}=\\frac{1}{n}\\sum_{i=1}^n x_i$$\n\nThe math renderer is dynamically loaded when needed.\n\n$$\\xi = \\sum_{n=0}^\\infty \\frac{e^n}{n!} \\approx 15.1543$$"},"mirror.cards.20201227-095802":{"id":"20201227-095802","content":"Show off the formatting features\n\n> $$E=mc^2$$\n> \n> *~ some scientist*","type":0,"created":1609023482272,"edited":1613888253119,"moved":1613888258376},"mirror.cards.20210122-074823":{"id":"20210122-074823","type":1,"created":1611305303668,"edited":1611305448852,"moved":1611305303668,"content":"New note","description":"> this is a blockquote\n> \n> $$a=b$$\n> ```js\n> const x = 5;\n> ```\n\nthis is a p\n\n> this is a blockquote\n\nthis is a p\n\n> this is a blockquote"},"mirror.cards.20210123-010216":{"id":"20210123-010216","content":"A very important occasion","type":0,"created":1611367336231,"edited":1613887849751,"moved":1613638336208,"time":1611579600000},"mirror.cards.20210123-053046":{"id":"20210123-053046","content":"Haircut appointment","type":0,"created":1611383446641,"edited":1613888232709,"moved":1613638340557,"time":1614776400000},"mirror.cards.20210123-102928":{"id":"20210123-102928","content":"* Print off concert tickets\n* Put them in the glovebox","type":0,"created":1611401368895,"edited":1613888085541,"moved":1613888087781},"mirror.cards.20210218-063917":{"id":"20210218-063917","content":"Somebody's birthday (todo: buy gift)","type":0,"created":1613633957047,"edited":1613887904794,"moved":1613638337590,"time":1615381200000},"mirror.cards.20210218-073503":{"id":"20210218-073503","content":"Maths exam","type":0,"created":1613637303239,"edited":1613888213057,"moved":1613888201962,"time":1613707200000},"mirror.cards.20210218-103937":{"id":"20210218-103937","content":"Write a witty comment","type":0,"created":1613648377178,"edited":1613887993157,"moved":1613888109915},"mirror.cards.20210218-105401":{"id":"20210218-105401","content":"Parser combinators tutorial (draft [here](https://oliverbalfour.github.io/haskell/2020/08/09/parsing-arithmetic-with-monads.html))\n\n---\n\n```hs\nchainl1 :: Parser a -> Parser (a -> a -> a) -> Parser a\np `chainl1` op = p >>= chain_rest\n    where chain_rest a = ((op <*> pure a <*> p) >>= rest) <|> return a\n```","type":0,"created":1613649241907,"edited":1613888283759,"moved":1613887317879,"description":"Parser combinators\n\n```hs\nchainl1 :: Parser a -> Parser (a -> a -> a) -> Parser a\np `chainl1` op = p >>= chain_rest\n    where chain_rest a = ((op <*> pure a <*> p) >>= rest) <|> return a\n```","duration":10800},"mirror.cards.20210221-050803":{"id":"20210221-050803","content":"Differentiate the quadratic cost function\n\n$$C_x (\\hat{y}, y) = \\frac{1}{2} \\sum_{i=1}^{|y|} (\\hat{y}_i - y_i)^2$$","type":0,"created":1613887683602,"edited":1613887716156,"moved":1613887722279},"mirror.cards.20210221-050955":{"id":"20210221-050955","content":"Write a tutorial explaining how monads are isomorphic to burritos in the category of food","type":0,"created":1613887795634,"edited":1613887832076,"moved":1613887795634,"description":"Damn, somebody beat me to it! [Paper](https://emorehouse.wescreates.wesleyan.edu/silliness/burrito_monads.pdf)"},"mirror.cards.20210221-051254":{"id":"20210221-051254","content":"Learn Common Lisp","type":0,"created":1613887974090,"edited":1613887974090,"moved":1613887974090},"mirror.cards.20210221-051301":{"id":"20210221-051301","content":"Prove P=NP for N=1","type":0,"created":1613887981135,"edited":1613887981135,"moved":1613887981135},"mirror.cards.20210221-051403":{"id":"20210221-051403","content":"Go to the bank","type":0,"created":1613888043326,"edited":1613888043326,"moved":1613888043326},"mirror.cards.20210221-051600":{"id":"20210221-051600","content":"Everything","type":0,"created":1613888160336,"edited":1613888160336,"moved":1613888160336},"mirror.cards.20210221-051603":{"id":"20210221-051603","content":"Nothing","type":0,"created":1613888163393,"edited":1613888163393,"moved":1613888163393},"mirror.cards.main":{"id":"main","content":"Welcome","type":1,"created":1600651325983,"edited":1613807299753,"description":"Welcome to your Zettelkasten!\n\nZettelkasten is German for 'note box'. It is a note-taking technique where you write short notes containing one idea, and then link them to connected ideas.\n\nFor a great discussion of why Zettelkasten is more powerful than linear (notebook) or hierarchical notetaking, see David Clear's introductory [article](https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125) on the subject.\n\nThis is the 'homepage' of your Zettelkasten, and you can edit this note or add other notes with the toolbar above.\n\n---\n\nDocumentation\n\n* [[20200921-113652]]\n* [[20200921-113337]]\n* [[20200921-112831]]\n* [[20200921-115100]]\n* [[20210122-074823]]"},"mirror.columns.20200921-112205-31":{"id":"20200921-112205-31","items":["20210221-051403","20210221-050803","20201227-095802","20210123-102928","20200921-112205-22","20200921-112205-26","20200921-112205-19"],"name":"To Do","created":1600651325987,"edited":1613888258376},"mirror.columns.20200921-112205-32":{"id":"20200921-112205-32","items":["20210123-010216","20210123-053046","20210218-063917"],"name":"Timeline","created":1600651325987,"edited":1613888201962},"mirror.columns.20201227-084838":{"id":"20201227-084838","items":["20200921-112205-21","20210221-051301","20210218-105401"],"name":"Work in progress","created":1609062518060,"edited":1613888109915},"mirror.columns.20210120-100729":{"id":"20210120-100729","items":["20210218-073503","20210218-103937","20200921-112205-23","20200921-112205-20"],"name":"Archive","created":1611140849053,"edited":1613888201962},"mirror.columns.20210121-091243":{"id":"20210121-091243","items":["20210221-051254","20210221-050955"],"name":"Backlog","created":1611223963355,"edited":1613887974090},"mirror.columns.20210221-051542":{"id":"20210221-051542","items":["20210221-051600"],"name":"To Do","created":1613888142642,"edited":1613888160336},"mirror.columns.20210221-051546":{"id":"20210221-051546","items":["20210221-051603"],"name":"Doing","created":1613888146710,"edited":1613888163393},"mirror.columns.20210221-051550":{"id":"20210221-051550","items":[],"name":"Done","created":1613888150058,"edited":1613888150058},"mirror.starredZettels":[],"mirror.tabOrder":["20200921-112205-1","20210122-113005"],"mirror.tabs.20200921-112205-1":{"name":"Main","id":"20200921-112205-1","created":1600651325983,"edited":1613888134461,"columns":["20210121-091243","20200921-112205-32","20200921-112205-31","20201227-084838","20210120-100729"]},"mirror.tabs.20210122-113005":{"name":"Work","id":"20210122-113005","columns":["20210221-051542","20210221-051546","20210221-051550"],"created":1611318605659,"edited":1613888150058}}