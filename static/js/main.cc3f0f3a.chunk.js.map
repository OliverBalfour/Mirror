{"version":3,"sources":["common/string.js","common/react.js","common/time.js","common/initial-state.js","backends/localstorage.js","common/index.js","components/popovermenu.js","components/tabview.js","ducks/kanban.js","store.js","components/markdown.js","components/autocomplete-editor.js","kanban/attributes/description.js","kanban/attributes/datetime.js","kanban/attributes/ebs.js","kanban/attributes/index.js","components/dialogs.js","components/menubar.js","components/undoredo.js","kanban/column-header.js","kanban/card.js","kanban/column.js","kanban/boardview.js","kanban/index.js","zettelkasten/index.js","app.js","serviceWorker.js","index.js"],"names":["linkName","card","firstLine","content","split","length","substring","mergeRefs","refs","filteredRefs","filter","Boolean","inst","ref","current","currentLoc","window","location","hash","replace","useHashLocation","React","loc","setLoc","handler","addEventListener","removeEventListener","navigate","to","ReloadProtect","shouldProtect","onbeforeunload","e","Hidden","children","show","style","display","__lastGeneratedID","generateID","date","timeString","Date","fn","newID","parseInt","prettyPrintDate","epochMilliseconds","now","time","getHours","getMinutes","getTime","diff","weekDiff","weekStartsOn","yearDiff","dayOfWeek","getDay","day","getDate","generateInitialState","initialState","modifyVersion","oldSemver","newSemver","mutation","localStorage","version","state","JSON","parse","kanban","stringify","objectMap","object","mapFn","Object","keys","reduce","result","key","map","anchorEl","setAnchorEl","handleClose","Menu","keepMounted","open","onClose","entries","name","func","MenuItem","onClick","currentTarget","TabPanel","hidden","height","tabs","render","index","setIndex","addTab","renameTab","deleteTab","moveTab","handleChange","event","newValue","Grow","flexGrow","flex","AppBar","position","backgroundColor","zIndex","Tabs","value","onChange","indicatorColor","textColor","tab","Tab","label","IconButton","i","transferCard","createAction","reorderCard","addCard","editCardContent","editCard","deleteCard","addColumn","deleteColumn","renameColumn","moveColumn","archiveCardsInColumn","addZettel","editZettel","deleteZettel","toggleZettelStarred","deleteInList","list","elem","indexOf","splice","selectors","getColumnsInTabs","columns","colID","col","items","cards","tabOrder","archivedCards","values","activeCards","starredZettels","cardsByTab","flatMap","Error","epochms","id","description","created","edited","cardID","numCols","type","hasOwnProperty","loadState","reducer","createReducer","s","a","payload","srcColID","dstColID","srcIndex","dstIndex","srcCol","dstCol","removed","moved","newitems","unshift","tabIdx","forEach","tabID","push","shift","srcIdx","dstIdx","archived","archivedFromColID","zettel","undoable","limit","store","configureStore","boards","middleware","getDefault","concat","thunk","document","activeElement","tagName","toLowerCase","ctrlKey","which","shiftKey","dispatch","UndoActionCreators","undo","redo","globalSelectors","present","boardSelectors","localSelector","localStorageSubscriber","serialised","setItem","saveState","getState","subscribe","parseHtml","require","htmlParser","isValidNode","node","processingInstructions","props","source","m","prefix","regex","exec","lastIndex","parseable","match","before","link","after","parseWikilinks","escapeHtml","astPlugins","setValue","autoFocus","addNote","rows","rowsMax","inputRef","useSelector","editor","TextareaEditor","strategy","context","beforeCursor","search","term","callback","matches","tl","includes","searchCards","cache","template","setTimeout","textcomplete","Textcomplete","dropdown","rotate","maxCount","destroy","TextField","margin","fullWidth","variant","multiline","target","inputProps","Edit","setCard","editingDescription","setEditingDescription","InputLabel","className","ClickAwayListener","onClickAway","width","undefined","marginTop","Indicator","title","text","join","abbreviatedDescription","icon","enAU","weekStart","setDateTime","utils","DateFnsUtils","locale","DateTimePicker","newDate","showTodayButton","format","Button","color","float","startOfToday","setEBS","ebsFields","ebs","prettySeconds","estimate","estStr","setEstStr","elapsed","elapStr","setElapStr","historical","sel","setEBSEstimate","str","unprettySeconds","computed","computeEstimate","invalid","marginRight","error","helperText","setEBSElapsed","FormControlLabel","control","Checkbox","checked","exact","size","ratio","acc","seconds","Math","abs","round","hours","floor","minutes","groups","slice","x","pf","k","parseFloat","useStyles","makeStyles","padding","header","marginBottom","IndicatorBuilder","Chip","classes","borderRadius","background","AttributeHeader","ConfirmDialog","respond","subtitle","labels","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","PromptDialog","inputType","placeholder","buttons","done","CardEditDialog","useDispatch","currentColID","setColID","newCard","setContent","maxWidth","disableBackdropClick","Select","labelId","ListSubheader","duck","AboutDialog","href","active","setActive","useState","aboutOpen","setAboutOpen","Fragment","top","bottom","Toolbar","minHeight","edge","console","log","val","TabIndicatorProps","verticalAlign","prompt","clear","filename","createElement","blob","Blob","URL","createObjectURL","download","click","downloadData","ActionCreators","add","menu","confirmOpen","setConfirmOpen","promptOpen","setPromptOpen","res","setEditingCard","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","isDragging","editingNew","setEditingNew","editingValue","setEditingValue","addButton","scrollContainerRef","scrollTop","menuButton","internals","droppableId","ignoreContainerClipping","isDraggingOver","cancel","EditingCard","cb","ButtonGroup","AddColumn","hide","tabInfo","tabObj","colIDs","editingCard","tabIDfromCardID","onDragEnd","destination","direction","draggingFromThisWith","currentTab","setCurrentTab","num","addPromptOpen","setAddPromptOpen","renamePromptOpen","setRenamePromptOpen","alert","data","max","setLocNoHist","starred","currentCardID","setNewCard","part","editing","setEditing","yes","starZettel","baseTabNames","screenNames","getScreenNames","tabURLs","setTabURLs","setTabURL","newURL","move","newTabURLs","n","getScreen","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.cc3f0f3a.chunk.js","sourcesContent":["\nexport const linkName = card => {\n  if (!card) return 'unknown';\n  const firstLine = card.content.split('\\n')[0];\n  if (firstLine.length > 40) return firstLine.substring(0,37) + '...';\n  return firstLine;\n};\n\nexport const abbreviatedDescription = card => {\n  if (!card) return '';\n  // If it's a string, use it. If it's a card, use description with fallback on title. Otherwise, unknown.\n  const text = card ? (typeof card === 'string' ? card : (card.description || card.content)) : 'unknown';\n  const limit = 500; // crop after this with ellisis\n  const title = text.split(\"\\n\\n\").join(\"\\n\").substring(0, limit)\n    + (text.length > limit ? \"...\" : \"\");\n  return title;\n};\n\nexport const parseWikilinks = (source, cards, prefix = '#/notes/') => {\n  const regex = /(\\[\\[[A-Za-z0-9_-]+\\]\\])/gm; // assumes card IDs are alphanumeric + dash + underscore\n  let m;\n  while ((m = regex.exec(source)) !== null) {\n    if (m.index === regex.lastIndex) regex.lastIndex++;\n    // m.index is the index in 'source'\n    const parseable = (source.substring(0, m.index).match(/`/gm) || []).length % 2 === 0;\n    if (!parseable) continue;\n\n    // m[1] is the actual match\n    let cardID = m[1].substring(2, m[1].length - 2);\n\n    // replace [[CARD_ID]] with [CARD_NAME](#/notes/CARD_ID)\n    let before = source.substring(0, m.index),\n        name = linkName(cards[cardID]),\n        link = prefix + cardID,\n        after = source.substring(m.index + m[1].length, source.length);\n    source = before + `[${name}](${link})` + after;\n  }\n  return source;\n};\n","\nimport * as React from 'react';\n\n// Source: https://www.davedrinks.coffee/how-do-i-use-two-react-refs/\nexport const mergeRefs = (...refs) => {\n  const filteredRefs = refs.filter(Boolean);\n  if (!filteredRefs.length) return null;\n  if (filteredRefs.length === 0) return filteredRefs[0];\n  return inst => {\n    for (const ref of filteredRefs) {\n      if (typeof ref === 'function') {\n        ref(inst);\n      } else if (ref) {\n        ref.current = inst;\n      }\n    }\n  };\n};\n\n// Web: returns the current hash location (excluding the '#' symbol)\n// Based on https://codesandbox.io/s/wouter-hash-based-hook-5fp9g\nconst currentLoc = () => window.location.hash.replace(\"#\", \"\") || \"/\";\nexport const useHashLocation = () => {\n  const [loc, setLoc] = React.useState(currentLoc());\n  React.useEffect(() => {\n    const handler = () => setLoc(currentLoc());\n    window.addEventListener(\"hashchange\", handler);\n    return () => window.removeEventListener(\"hashchange\", handler);\n  }, []);\n  const navigate = React.useCallback(to => window.location.hash = to, []);\n  // const navigateNoHistory = React.useCallback(to => {\n  //   window.history.replaceState(undefined, undefined, \"#\"+to);\n  //   setLoc(to); // because handler does not detect replaceState\n  // }, []);\n  // Disable no history navigation\n  return [loc, navigate, navigate/*NoHistory*/];\n};\n\n// Note: ReloadProtect does not prevent hash changes. Be warned!\nexport const ReloadProtect = ({ shouldProtect = true }) => {\n  React.useEffect(() => {\n    // componentDidMount\n    if (shouldProtect)\n      window.onbeforeunload = e => \"Are you sure you want to quit?\";\n    // componentWillUnmount\n    return () => window.onbeforeunload = null;\n  });\n  return null;\n}\n\n// Assumes display: block (CSS's display: revert property has poor support)\nexport const Hidden = ({ children, show }) =>\n  <div style={{ display: show ? \"block\" : \"none\" }}>\n    {children}\n  </div>;\n","\nimport * as fn from 'date-fns';\n\nexport const simpleDate = date => fn.format(date, \"yyyyMMdd-hhmmss\");\n\nlet __lastGeneratedID = null;\nexport const generateID = () => {\n  const timeString = simpleDate(new Date());\n  let newID = timeString;\n  // if we generate multiple IDs in one second, we add \"-n\" where n is 1,2,...\n  // the only time this causes collisions is if you add a card, refresh, add a card within 1s\n  if (__lastGeneratedID !== null && __lastGeneratedID.substring(0, timeString.length) === newID) {\n    if (__lastGeneratedID.length === timeString.length) newID += \"-1\";\n    else newID += '-' + (parseInt(__lastGeneratedID.substring(timeString.length + 1, __lastGeneratedID.length)) + 1)\n  }\n  __lastGeneratedID = newID;\n  return newID;\n}\n\n/**\n * Returns a heavily abbreviated pretty printed date using date-fns\n * - Only includes time if within a week and not midnight\n * - Only includes minutes if nonzero\n * - Replaces date with \"Tomorrow\", \"Next Fri\" or \"Last Wed\", etc.\n */\nexport const prettyPrintDate = epochMilliseconds => {\n  const date = new Date(epochMilliseconds);\n  const now = new Date();\n\n  const getDate = date => {\n    const diff = fn.differenceInCalendarDays(date, now);\n    const weekDiff = fn.differenceInCalendarWeeks(date, now, { weekStartsOn: 1 });\n    const yearDiff = fn.differenceInCalendarYears(date, now);\n    // 0 is Monday\n    let dayOfWeek = now.getDay() - 1;\n    // JavaScript's modulo is broken for negatives, so we must use an if statement\n    if (dayOfWeek < 0) dayOfWeek += 7;\n\n    // Relative dates are quite ambiguous in English\n    // If today is Wednesday 23 September 2020, then the following mappings are adhered to:\n\n    // 15/9/19: 15 Sep 2019\n    // 15/9/20: 15 Sep\n    // 16/9/20: Last Wed\n    // 21/9/20: Last Mon\n    // 22/9/20: Yesterday\n    // 23/9/20: Today\n    // 24/9/20: Tomorrow\n    // 25/9/20: Fri\n    // 27/9/20: Sun\n    // 28/9/20: Next Mon\n    // 7/10/20: Wed Week\n\n    if (diff ===  0) return \"Today\";\n    if (diff === -1) return \"Yesterday\";\n    if (diff ===  1) return \"Tomorrow\";\n\n    const day = fn.format(date, \"EEE\"); // eg Mon, Thu\n\n    // If it's this calendar week,\n    // or during the weekend it is a weekday the next week\n    if ((weekDiff === 0 && diff >= 0)\n     || (dayOfWeek >= 5 && diff >= 0 && diff < 5)) return day;\n\n    if (diff >= -7 && diff <   0) return `Last ${day}`;\n    if (diff >   0 && diff <=  7) return `Next ${day}`;\n    if (diff >   7 && diff <= 14) return `${day} Week`;\n\n    if (yearDiff === 0)\n      return fn.format(date, \"MMM do\"); // eg: Sep 17th\n    else\n      return fn.format(date, \"MMM do yyyy\"); // eg: Sep 17th 2021 if it's 2020\n  }\n\n  const getTime = date => {\n    // ignore time if midnight\n    if (date.getHours() === 0 && date.getMinutes() === 0) return null;\n    // No minutes; eg 4PM\n    if (date.getMinutes() === 0) return fn.format(date, \"haaa\");\n    return fn.format(date, \"h:mmaaa\");\n  }\n\n  const time = getTime(date);\n  return getDate(date) + (time ? \" \" + time : \"\");\n};\n","\n/*\n * Exports generateInitialState :: () -> state\n */\n\nimport initialState from '../../public/initial-state.json';\n\n// generate initial dummy state\nexport const generateInitialState = () => {\n  return initialState;\n\n  // TODO: async fetch\n  // This is tricky because the Redux store may use it for initialisation\n  // and many parts of the app (foolishly) directly import the store\n\n  // fetch(\"./initial-state.json\")\n  //   .then(res => res.json())\n  //   .catch(e => alert(\"Could not load initial state. Error: \" + e));\n}\n","\nimport { generateInitialState } from '../common/initial-state.js';\n\nconst modifyVersion = (oldSemver, newSemver, mutation) => {\n  if (localStorage.version === oldSemver) {\n    let state = JSON.parse(localStorage.kanban);\n    mutation(state);\n    localStorage.kanban = JSON.stringify(state);\n    localStorage.version = newSemver;\n  }\n};\n\n// load persisted state\nconst currentVersion = \"0.2.1\"; // IMPORTANT\nexport const loadState = () => {\n  try {\n    if (!localStorage.version) throw new Error();\n\n    // avert breaking changes\n    modifyVersion(\"0.1.0\", \"0.2.0\", state => {\n      const epochms = new Date().getTime();\n      state.cards['main'] = { id:'main', content: 'Welcome', description: 'Welcome to your Zettelkasten! You can edit this and use `[[wikilink]]` syntax to link to other nodes.',\n      created: epochms, edited: epochms }\n      return state;\n    });\n    modifyVersion(\"0.2.0\", \"0.2.1\", state => {\n      for (const cardID in state.cards) {\n        const numCols = Object.values(state.columns).filter(col => col.items.indexOf(cardID) !== -1).length;\n        state.cards[cardID].type = numCols ? 0 : 1;\n      }\n      state.cards['main'].type = 1;\n      return state;\n    });\n\n    if (localStorage.hasOwnProperty('kanban'))\n      return JSON.parse(localStorage.kanban) || generateInitialState();\n\n  } catch (e) {}\n  return generateInitialState();\n}\n\nexport const saveState = state => {\n  try {\n    if (localStorage) {\n      const serialised = JSON.stringify(state);\n      localStorage.setItem(\"kanban\", serialised);\n      localStorage.setItem(\"version\", currentVersion);\n    }\n  } catch (e) {}\n}\n","\nexport { linkName, abbreviatedDescription, parseWikilinks } from './string';\nexport { mergeRefs, useHashLocation, ReloadProtect, Hidden } from './react';\nexport { prettyPrintDate, generateID } from './time';\nexport { saveState, loadState } from '../backends';\n\n// Source: https://stackoverflow.com/a/14810722/4642943\n// returns a new object with the values at each key mapped using mapFn(value)\nexport const objectMap = (object, mapFn) =>\n  Object.keys(object).reduce(function(result, key) {\n    result[key] = mapFn(object[key])\n    return result\n  }, {});\n\n// Web: Download content as filename with specificed MIME type\nexport const downloadData = (content, filename, type) => {\n  if(!type) type = 'application/octet-stream';\n  const a = document.createElement('a');\n  const blob = new Blob([content], { type });\n  a.href = window.URL.createObjectURL(blob);\n  a.download = filename;\n  a.click();\n}\n\n// Simple card search; searches titles then descriptions then IDs for case insensitive exact matches\nexport const searchCards = (term, cards, limit=10) => {\n  let matches = [];\n  let tl = term.toLowerCase();\n  for (const cardID in cards) {\n    if (cards[cardID].content.toLowerCase().includes(tl)) {\n      matches.push(cardID);\n      if (matches.length === limit) return matches;\n    }\n  }\n  for (const cardID in cards) {\n    if (cards[cardID].description && cards[cardID].description.toLowerCase().includes(tl)) {\n      matches.push(cardID);\n      if (matches.length === limit) return matches;\n    }\n  }\n  for (const cardID in cards) {\n    if (cardID.toLowerCase().includes(tl)) {\n      matches.push(cardID);\n      if (matches.length === limit) return matches;\n    }\n  }\n  return matches;\n}\n","\n// Popover menu (web)\nimport * as React from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\n\n\nexport default ({ map, children }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => setAnchorEl(null);\n\n  return (\n    <React.Fragment>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}>\n        {Object.entries(map).map(([name, func]) => (\n          <MenuItem key={name}\n            onClick={() => { handleClose(); func() }}>\n            {name}\n          </MenuItem>\n        ))}\n      </Menu>\n      {React.cloneElement(children, {\n        onClick: e => setAnchorEl(e.currentTarget)\n      })}\n    </React.Fragment>\n  );\n}\n","\n/**\n * TabView component\n *\n * <TabView\n *   tabs={[\"one\", \"two\", \"three\"]}\n *   render={i => (<SomeComponent index={i} />)}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { AppBar, Tabs, Tab, IconButton } from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport PopoverMenu from './popovermenu';\n\nconst TabPanel = ({ show, children }) => (\n  <div hidden={!show} style={{ height: 'calc(100% - 48px)' }}>\n    {show && children}\n  </div>\n);\n\nexport default ({\n  tabs, render, index, setIndex,\n  addTab, renameTab, deleteTab, moveTab\n}) => {\n  const handleChange = (event, newValue) => newValue >= 0 && newValue < tabs.length && setIndex(newValue);\n  const Grow = () => <div style={{ flexGrow: 1 }} />;\n\n  return (\n    <div style={{ flex: 1 }}>\n      <AppBar position=\"static\" style={{\n          backgroundColor: \"white\",\n          zIndex: 2, position: 'relative'\n        }}>\n        <Tabs value={index} onChange={handleChange}\n          indicatorColor=\"primary\" textColor=\"primary\">\n          {tabs.map(tab => (\n            <Tab label={tab} key={tab} />\n          ))}\n          <Grow />\n          <PopoverMenu map={{\n            \"Add tab\": () => addTab(),\n            \"Rename tab\": () => renameTab(index),\n            \"Delete tab\": () => deleteTab(index),\n            \"Move tab left\":  () => { moveTab([index, index-1]); handleChange(null, index-1) },\n            \"Move tab right\": () => { moveTab([index, index+1]); handleChange(null, index+1) },\n          }}>\n            <IconButton>\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n        </Tabs>\n      </AppBar>\n      {tabs.map((tab, i) => (\n        <TabPanel show={index === i} key={tab}>\n          {index === i && render(i)}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n","\n/**\n * Kanban boards core Redux logic\n *\n * State is normalised as { tabs, columns, cards }\n *  where each tab has several columns which contain cards\n *  each has a unique ID as a key in the respective object\n */\n\nimport { createReducer, createAction } from '@reduxjs/toolkit';\nimport undoable from 'redux-undo';\nimport { loadState, generateID, objectMap } from '../common';\n\n// Action creators\n\nexport const transferCard = createAction('kanban/TRANSFER_CARD');\nexport const reorderCard = createAction('kanban/REORDER_CARD');\nexport const addCard = createAction('kanban/ADD_CARD'); // takes { content, colID }\nexport const editCardContent = createAction('kanban/EDIT_CARD_CONTENT');//takes {content, cardID}\nexport const editCard = createAction('kanban/EDIT_CARD'); // takes a card object; allows editing all of a card's params\nexport const deleteCard = createAction('kanban/DELETE_CARD');//takes cardID\n\nexport const moveCard = ([srcColID, dstColID, srcIndex, dstIndex]) =>\n  srcColID === dstColID\n    ? reorderCard({ colID: srcColID, srcIndex, dstIndex })\n    : transferCard({ srcColID, dstColID, srcIndex, dstIndex });\n\nexport const addColumn = createAction('kanban/ADD_COLUMN'); // takes { name, tabID }\nexport const deleteColumn = createAction('kanban/DELETE_COLUMN'); // takes string column ID\nexport const renameColumn = createAction('kanban/RENAME_COLUMN'); // takes { colID, name }\nexport const moveColumn = createAction('kanban/MOVE_COLUMN'); // takes [srcIdx, dstIdx, tabIdx]\nexport const archiveCardsInColumn = createAction('kanban/ARCHIVE_ALL_COLUMN'); // takes colID\n\nexport const addTab = createAction('kanban/ADD_TAB'); // takes name\nexport const deleteTab = createAction('kanban/DELETE_TAB'); // takes tabIdx\nexport const renameTab = createAction('kanban/RENAME_TAB'); // takes { tabID, name }\nexport const moveTab = createAction('kanban/MOVE_TAB'); // takes [srcIdx, dstIdx]\n\nexport const addZettel = createAction('zettelkasten/ADD_ZETTEL'); // takes { zettel: {...} }\nexport const editZettel = createAction('zettelkasten/EDIT_ZETTEL'); // takes { zettel }\nexport const deleteZettel = createAction('zettelkasten/DELETE_ZETTEL'); // takes zettelID\nexport const toggleZettelStarred = createAction('zettelkasten/TOGGLE_STARRED'); // takes zettelID\n\n// Helpers\n\n// const indexFromID = (list, id) => list.map(item => item.id === id).indexOf(true);\n// const deleteByID = (list, id) => list.splice(indexFromID(list, id), 1);\nconst deleteInList = (list, elem) => {\n  let index = list.indexOf(elem);\n  if (index !== -1) list.splice(index, 1); // undesired behaviour when splicing at (-1, 1)\n  return index !== -1;\n};\n\n// Selectors\n\nexport const selectors = {\n  // Map[TabID, Column], Column :: { id, items: List[Card] }, not List[CardID]\n  getColumnsInTabs: state =>\n    objectMap(state.tabs, tab =>\n      tab.columns.map(colID => state.columns[colID]).map(col => ({\n        ...col, items: col.items.map(card => state.cards[card])\n      }))),\n  columns: state => state.columns,\n  tabs: state => state.tabs,\n  tabOrder: state => state.tabOrder,\n  cards: state => state.cards,\n  archivedCards: state => Object.values(state.cards).filter(card => Object.keys(card).indexOf(\"archived\") !== -1),\n  activeCards:   state => Object.values(state.cards).filter(card => Object.keys(card).indexOf(\"archived\") === -1),\n  starredZettels: state => state.starredZettels ? state.starredZettels : [],\n  // gets { [tabID]: list_of_cardIDs }\n  cardsByTab: state => objectMap(state.tabs, tab =>\n    tab.columns.flatMap(colID => state.columns[colID].items)),\n};\n\n// Reducers\n\nexport const\n  KANBAN_CARD_TYPE = 0,\n  ZETTEL_NOTE_TYPE = 1;\n\nconst initialState = loadState();\n\nconst reducer = createReducer(initialState, {\n  [transferCard]: (s, a) => {\n    const { srcColID, dstColID, srcIndex, dstIndex } = a.payload;\n    let srcCol = s.columns[srcColID].items;\n    let dstCol = s.columns[dstColID].items;\n    const [removed] = srcCol.splice(srcIndex, 1);\n    const epochms = new Date().getTime();\n    s.cards[removed].moved = epochms;\n    s.columns[srcColID].edited = epochms;\n    s.columns[dstColID].edited = epochms;\n    dstCol.splice(dstIndex, 0, removed);\n  },\n  [reorderCard]: (s, a) => {\n    const { colID, srcIndex, dstIndex } = a.payload;\n    const epochms = new Date().getTime();\n    s.columns[colID].edited = epochms;\n    let newitems = s.columns[colID].items;\n    const [removed] = newitems.splice(srcIndex, 1);\n    s.cards[removed].moved = epochms;\n    newitems.splice(dstIndex, 0, removed);\n    s.columns[colID].items = newitems;\n  },\n  [addCard]: (s, a) => {\n    const { content, colID } = a.payload;\n    const id = generateID();\n    const epochms = new Date().getTime();\n    // add to cards list\n    s.cards[id] = { id, content, type: KANBAN_CARD_TYPE,\n      created: epochms,  edited: epochms, moved: epochms };\n    s.columns[colID].items.unshift(id); // add to top of column\n    s.columns[colID].edited = epochms;\n  },\n  [deleteColumn]: (s, a) => {\n    const colID = a.payload;\n    const tabIdx = Object.values(s.tabs).map(tab => tab.columns.indexOf(a.payload) !== -1).indexOf(true);\n    if (tabIdx >= 0) s.tabs[s.tabOrder[tabIdx]].edited = new Date().getTime();\n    s.columns[colID].items.forEach(cardID => delete s.cards[cardID]);\n    Object.values(s.tabs).forEach(tab => deleteInList(tab.columns, colID));\n    delete s.columns[colID];\n  },\n  [renameColumn]: (s, a) => {\n    const { colID, name } = a.payload;\n    s.columns[colID].name = name;\n    s.columns[colID].edited = new Date().getTime();\n  },\n  [editCardContent]: (s, a) => {\n    const { cardID, content } = a.payload;\n    s.cards[cardID].content = content;\n    s.cards[cardID].edited = new Date().getTime();\n  },\n  [deleteCard]: (s, a) => {\n    Object.values(s.columns).forEach(col => {\n      if (deleteInList(col.items, a.payload))\n        col.edited = new Date().getTime();\n    });\n    delete s.cards[a.payload];\n  },\n  [addColumn]: (s, a) => {\n    const { tabID, name } = a.payload;\n    const id = generateID();\n    const epochms = new Date().getTime();\n    s.columns[id] = { id, items: [], name, created: epochms, edited: epochms };\n    s.tabs[tabID].columns.push(id);\n    s.tabs[tabID].edited = epochms;\n  },\n  [editCard]: (s, a) => {\n    const { card, colID } = a.payload;\n    const epochms = new Date().getTime();\n    s.cards[card.id] = a.payload.card;\n    s.cards[card.id].edited = epochms;\n    const srcColID = Object.keys(s.columns).filter(colID => s.columns[colID].items.indexOf(card.id) !== -1)[0];\n    const dstColID = colID;\n    if (srcColID !== dstColID) {\n      deleteInList(s.columns[srcColID].items, card.id);\n      s.columns[dstColID].items.unshift(card.id);\n      s.columns[srcColID].edited = s.columns[dstColID].edited = epochms;\n    }\n  },\n  [deleteTab]: (s, a) => {\n    const tabIdx = a.payload;\n    const tab = s.tabs[s.tabOrder[tabIdx]];\n    while (tab.columns.length) {\n      const colID = tab.columns[0];\n      s.columns[colID].items.forEach(cardID => delete s.cards[cardID]);\n      delete s.columns[colID];\n      tab.columns.shift();\n    }\n    delete s.tabs[s.tabOrder[tabIdx]];\n    s.tabOrder.splice(tabIdx, 1);\n  },\n  [addTab]: (s, a) => {\n    const id = generateID();\n    const name = a.payload;\n    s.tabs[id] = { name, id, columns: [], created: new Date().getTime() };\n    s.tabOrder.push(id);\n  },\n  [renameTab]: (s, a) => {\n    const { tabID, name } = a.payload;\n    s.tabs[tabID].name = name;\n    s.tabs[tabID].edited = new Date().getTime();\n  },\n  [moveColumn]: (s, a) => {\n    const [srcIdx, dstIdx, tabIdx] = a.payload;\n    const tabID = s.tabOrder[tabIdx];\n    let newitems = s.tabs[tabID].columns;\n    const [removed] = newitems.splice(srcIdx, 1);\n    newitems.splice(dstIdx, 0, removed);\n    s.tabs[tabID].columns = newitems;\n    s.tabs[tabID].edited = new Date().getTime();\n  },\n  [moveTab]: (s, a) => {\n    const [srcIdx, dstIdx] = a.payload;\n    if (dstIdx < 0 || dstIdx >= s.tabs.length) return;\n    let newitems = s.tabOrder;\n    const [removed] = newitems.splice(srcIdx, 1);\n    newitems.splice(dstIdx, 0, removed);\n    s.tabOrder = newitems;\n  },\n  [archiveCardsInColumn]: (s, a) => {\n    // archived cards still exist in memory but are not listed in a column's items\n    const colID = a.payload;\n    const epochms = new Date().getTime();\n    s.columns[colID].items.forEach(cardID => {\n      let card = s.cards[cardID];\n      card.moved = card.edited = card.archived = epochms;\n      card.archivedFromColID = a.payload;\n    });\n    s.columns[colID].items = [];\n    s.columns[colID].edited = epochms;\n  },\n  [addZettel]: (s, a) => {\n    const { zettel } = a.payload;\n    const id = zettel.id || generateID();\n    const epochms = new Date().getTime();\n    s.cards[id] = { id, type: ZETTEL_NOTE_TYPE, created: epochms,  edited: epochms, moved: epochms,\n      ...zettel };\n  },\n  [editZettel]: (s, a) => {\n    const { zettel } = a.payload;\n    const epochms = new Date().getTime();\n    // editZettel does not add new zettels\n    if (Object.keys(s.cards).indexOf(zettel.id) === -1) return;\n    s.cards[zettel.id] = zettel;\n    s.cards[zettel.id].edited = epochms;\n  },\n  [deleteZettel]: (s, a) => {\n    // TODO: clean up links?\n    delete s.cards[a.payload];\n  },\n  [toggleZettelStarred]: (s, a) => {\n    if (!s.starredZettels) s.starredZettels = [];\n    if (s.starredZettels.indexOf(a.payload) === -1)\n      s.starredZettels.push(a.payload);\n    else\n      deleteInList(s.starredZettels, a.payload);\n  },\n});\n\nexport default undoable(reducer, {limit:20});\n","\nimport { configureStore } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport boards, { selectors as boardSelectors } from './ducks/kanban';\nimport { saveState, objectMap } from './common';\n\nconst store = configureStore({\n  reducer: boards,\n  middleware: getDefault => getDefault().concat(thunk),\n});\n\n// Undo/redo keyboard shortcuts if supported\ntry {\n  document.addEventListener('keyup', e => {\n    const ignored = ['input', 'textarea'];\n    if (ignored.indexOf(document.activeElement.tagName.toLowerCase()) !== -1) return;\n    if (e.ctrlKey && e.which === 90 && !e.shiftKey)\n      store.dispatch(UndoActionCreators.undo());\n    else if ((e.ctrlKey && e.shiftKey && e.which === 90) || (e.ctrlKey && e.which === 89))\n      store.dispatch(UndoActionCreators.redo());\n  });\n} catch (e) {}\n\nexport default store;\n\n// produce global selectors\nexport const globalSelectors = {\n  boards: state => state.present\n}\nexport const selectors = {\n  boards: objectMap(boardSelectors, localSelector => state => localSelector(globalSelectors.boards(state)))\n};\n\n// Save board state (excluding history)\n// to save history efficiently we would need to store a state 50 states ago, the 50 actions since,\n// and the current state; this would require a rewrite of redux-undo\nconst localStorageSubscriber = () => saveState(globalSelectors.boards(store.getState()));\nstore.subscribe(localStorageSubscriber);\nlocalStorageSubscriber(); // save data generated on first run\n","\nimport * as React from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport { parseWikilinks } from '../common';\nconst htmlParser = require('react-markdown/plugins/html-parser')\n\n// Markdown renderer component\n// Allows a subset of HTML to be embedded\n\n// XSS protection:\n// 1. <script>, <style>, <iframe> are disallowed\n// 2. javascript links are overwritten with javascript:void(0) by default\n\n// See https://github.com/aknuds1/html-to-react#with-custom-processing-instructions\n// for more info on the processing instructions\nconst parseHtml = htmlParser({\n  isValidNode: node => ['script', 'style', 'iframe'].indexOf(node.type) === -1,\n  // Note that react-markdown is quite flaky; processing should be done externally\n  processingInstructions: [/* ... */],\n});\n\n// Takes either a cards prop or a source prop\n// Parses wikilinks if the cards prop is present\nexport default props => {\n  let source = props.cards ? parseWikilinks(props.source, props.cards) : props.source;\n\n  return (\n    <ReactMarkdown\n      source={source}\n      escapeHtml={false}\n      astPlugins={[parseHtml]}\n    />\n  );\n};\n","\nimport * as React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { Textcomplete } from '@textcomplete/core';\nimport { TextareaEditor } from '@textcomplete/textarea';\nimport { selectors } from '../store';\nimport { useSelector } from 'react-redux';\nimport { searchCards, linkName, generateID } from '../common';\n\n// If addNote is a function an 'Add note' option will appear\n// It inserts a link to a note with a generated ID, and invokes\n// addNote on the generated ID.\nexport default ({ value, setValue, autoFocus = false, addNote, rows, rowsMax }) => {\n\n  const inputRef = React.useRef(null);\n  const cards = useSelector(selectors.boards.cards);\n\n  React.useEffect(() => {\n    const editor = new TextareaEditor(inputRef.current);\n    const strategy = {\n      // String -> Bool -- whether to proceed to matching phase\n      context: beforeCursor => beforeCursor.indexOf('[[') >= 0,\n      match: /\\[\\[([A-Za-z0-9_ -]+)$/, // captures the X in \"abc [[X\"\n      // term is captured substring; can use async (t, cb) => cb(await something(term));\n      search: (term, callback, match) => callback([...searchCards(term, cards), 0]),\n      cache: true,\n      // these take the input to the search callback\n      template: cardID => cardID === 0 ? (addNote ? `<em>Add note</em>` : '') : linkName(cards[cardID]),\n      replace: cardID => {\n        if (cardID === 0 && addNote) {\n          const id = generateID();\n          // run addNote after replacing text\n          setTimeout(() => addNote(id), 0);\n          return `[[${id}]]`;\n        } else {\n          return `[[${cardID}]]`;\n        }\n      },\n    }\n    const options = {\n      dropdown: {\n        rotate: true, // this means vertical wrapping under up/down arrows\n        maxCount: 10,\n      }\n    };\n    const textcomplete = new Textcomplete(editor, [strategy], options);\n    // cleanup\n    return () => {\n      textcomplete.destroy();\n      delete window['__addNote']\n    }\n    // eslint-disable-next-line\n  }, []); // passing dependencies breaks it\n\n  return (\n    <TextField margin=\"dense\" fullWidth variant=\"outlined\" autoFocus={autoFocus}\n      multiline rows={rows} rowsMax={rowsMax} value={value} onChange={e => setValue(e.target.value)}\n      inputProps={{ ref: inputRef }} />\n  );\n};\n","\nimport * as React from 'react';\nimport Markdown from '../../components/markdown';\nimport { ClickAwayListener, InputLabel } from '@material-ui/core';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport { IndicatorBuilder, AttributeHeader } from '.';\nimport { selectors } from '../../store';\nimport AutocompleteEditor from '../../components/autocomplete-editor';\nimport { useSelector } from 'react-redux';\nimport { abbreviatedDescription } from '../../common';\n\nexport const Edit = ({ card, setCard }) => {\n  const [editingDescription, setEditingDescription] = React.useState(false);\n  const setDescription = description => setCard({...card,\n      description: description.length ? description : undefined});\n  const cards = useSelector(selectors.boards.cards);\n\n  if (!editingDescription && typeof card.description !== 'string')\n    return (\n      <AttributeHeader onClick={() => setEditingDescription(true)}>\n        Add description\n      </AttributeHeader>\n    );\n\n  return !editingDescription ? (\n    <div style={{marginTop: 8}}>\n      <div onClick={() => setEditingDescription(true)}>\n        <InputLabel className=\"custom-label\">Description</InputLabel>\n      </div>\n      <Markdown source={card.description} cards={cards} />\n    </div>\n  ) : (\n    <React.Fragment>\n      <InputLabel className=\"custom-label\">Description</InputLabel>\n      <ClickAwayListener onClickAway={() => setEditingDescription(false)}>\n        <div style={{width:'100%',height:'100%'}}>\n          <AutocompleteEditor value={card.description} setValue={setDescription}\n            autoFocus rows={6} rowsMax={24} />\n        </div>\n      </ClickAwayListener>\n    </React.Fragment>\n  );\n};\n\nexport const Indicator = ({ card }) => {\n  if (card.description) {\n    const title = abbreviatedDescription(card);\n    return <IndicatorBuilder label={null} title={title} icon={<NotesIcon />} />;\n  } else return null;\n};\n","\nimport * as React from 'react';\nimport { Button, InputLabel } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { format, startOfToday } from 'date-fns';\nimport { enAU } from 'date-fns/locale';\nimport { prettyPrintDate } from '../../common';\nimport { IndicatorBuilder, AttributeHeader } from '.';\n\nenAU.weekStart = 1;\n\nexport const Edit = ({ card, setCard }) => {\n  const setDateTime = time => setCard({...card, time});\n\n  return card.time ? (\n    <div style={{marginTop: 10}}>\n      <InputLabel className=\"custom-label\">Date &amp; time</InputLabel>\n      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={enAU}>\n        <DateTimePicker\n          value={new Date(card.time)}\n          onChange={newDate => setDateTime(newDate.getTime())}\n          showTodayButton\n          format=\"MMMM do hh:mm aaa\" />\n      </MuiPickersUtilsProvider>\n      <Button color=\"primary\" variant=\"outlined\" style={{float:'right',marginTop:12}}\n        onClick={() => setDateTime(null)}>Reset date</Button>\n    </div>\n  ) : (\n    <AttributeHeader onClick={() => setDateTime(startOfToday())}>\n      Add date &amp; time\n    </AttributeHeader>\n  );\n};\n\nexport const Indicator = ({ card }) => {\n  if (card.time) {\n    return <IndicatorBuilder\n      icon={<AccessTimeIcon />}\n      label={prettyPrintDate(card.time)}\n      title={format(new Date(card.time), \"dd/MM/yyyy hh:mmaaa\")} />\n  } else return null;\n};\n","\n/**\n * Evidence Based Scheduling card attribute\n * See: https://www.joelonsoftware.com/2007/10/26/evidence-based-scheduling/\n */\n\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, TextField, FormControlLabel, Checkbox, InputLabel } from '@material-ui/core';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport HourglassFullIcon from '@material-ui/icons/HourglassFull';\nimport { globalSelectors as sel } from '../../store';\nimport { IndicatorBuilder, AttributeHeader } from '.';\n\nexport const Edit = ({ card, setCard }) => {\n  // edit a subset of the EBS fields\n  const setEBS = ebsFields => setCard({...card, ebs: {...card.ebs, ...ebsFields}});\n  const [estStr, setEstStr] = React.useState(card.ebs ? prettySeconds(card.ebs.estimate) : \"\");\n  const [elapStr, setElapStr] = React.useState(card.ebs ? prettySeconds(card.ebs.elapsed) : \"\");\n\n  // list of EBS objects for all cards\n  const historical = useSelector(s => Object.values(sel.boards(s).cards)\n    .filter(card => card.hasOwnProperty('ebs') && card.ebs !== null)\n    .filter(card => card.ebs.elapsed && card.ebs.estimate)\n    .map(card => card.ebs));\n\n  const setEBSEstimate = str => {\n    setEstStr(str);\n    const estimate = unprettySeconds(str);\n    if (typeof estimate === \"number\")\n      setEBS({estimate, computed: computeEstimate(estimate, historical)});\n  }\n  const setEBSElapsed = str => {\n    setElapStr(str);\n    const elapsed = unprettySeconds(str);\n    if (typeof elapsed === \"number\")\n      setEBS({elapsed});\n  }\n  const resetEBS = () => (setEstStr(\"\"), setElapStr(\"\"), setCard({...card, ebs: null}));\n\n  if (!card.ebs)\n    return (\n      <AttributeHeader onClick={() => setEBSEstimate('1h')}>\n        Add time estimate\n      </AttributeHeader>\n    );\n\n  // ebs :: { estimate :: seconds, computed :: seconds, elapsed :: seconds,\n  //   done :: boolean, exact :: boolean }\n  // estimate is user estimate, computed is a function of historical estimation accuracy\n  // and elapsed is current time spent on the task, and exact is whether the estimate is exact (eg duration)\n  // TODO: add timer feature or column powerup to automatically time\n\n  const getPrettyPredicted = () => prettySeconds(computeEstimate(unprettySeconds(estStr) || 0, historical));\n\n  // returns true iff the string is non-empty but in incorrect format (not HHhMMm like 1h30m)\n  const invalid = str => str !== \"\" && str !== null && unprettySeconds(str) === null;\n\n  return (\n    <div style={{marginTop: 10}}>\n      <InputLabel className=\"custom-label\">Time estimate</InputLabel>\n      <div style={{width: '30%',float:'left',marginRight:16}}>\n        <TextField label={`Estimate (predicted ${getPrettyPredicted()})`}\n          margin=\"dense\" fullWidth\n          value={estStr}\n          error={invalid(estStr)}\n          helperText={invalid(estStr) ? \"Example format: 1h30m\" : null}\n          onChange={e => setEBSEstimate(e.target.value)} />\n      </div>\n      <div style={{width: '30%',float:'left',marginRight:16}}>\n        <TextField label=\"Elapsed\"\n          margin=\"dense\" fullWidth\n          value={elapStr}\n          error={invalid(elapStr)}\n          helperText={invalid(elapStr) ? \"Example format: 1h30m\" : null}\n          onChange={e => setEBSElapsed(e.target.value)} />\n      </div>\n      <div style={{marginTop: 12, float:'left'}}>\n        <FormControlLabel label=\"Exact duration\" control={\n            <Checkbox color=\"primary\"\n              checked={Boolean(card.ebs.exact)} onChange={e => setEBS({ exact: e.target.checked })} />\n          }/>\n      </div>\n      <div style={{flexGrow:1}}></div>\n      <Button color=\"primary\" variant=\"outlined\" size='medium' style={{float:'right',marginTop:12}}\n        onClick={resetEBS}>Reset estimate</Button>\n    </div>\n  )\n};\n\n// historical :: List[{ estimate, computed, elapsed }]\nconst computeEstimate = (s, historical) => {\n  if (typeof s !== 'number') return s;\n\n  // Compute average ratio elapsed / estimated\n  let ratio = historical.reduce(\n    (acc, ebs) => acc + ebs.elapsed / ebs.estimate / historical.length\n    , 0);\n  // if few samples average with 1\n  if (!ratio) ratio = 1;\n  if (historical.length < 10) ratio = (ratio + 1) / 2;\n\n  // computes an estimate of the time given all of the cards' EBS values\n  const computed = s * ratio;\n\n  // round rough estimate to a reasonable level of precision\n  // nearest hr, 15min or 5min interval if that is the same level of precision as the input\n  const precisions = [3600, 60*15, 60*5];\n  for (let seconds of precisions) {\n    if (s % seconds === 0 && Math.abs(computed - s) > seconds / 2)\n      return seconds * Math.round(computed / seconds);\n  }\n  // otherwise nearest minute\n  return 60 * Math.round(computed / 60);\n};\n\n// Pretty print seconds in short form like 3600->1h, 6300->1h45m (no days or seconds)\nconst prettySeconds = s => {\n  if (typeof (s) === 'string') return s;\n  const hours = Math.floor(s / 3600);\n  const minutes = Math.floor((s % 3600) / 60);\n  if (hours === 0 && minutes === 0) return '0';\n  return (hours ? hours + 'h' : '') + (minutes ? minutes + 'm' : '');\n};\n\n// Inverse of prettySeconds; used so the input field can be edited in pretty form\nlet unprettySeconds = s => {\n  if (s === '0') return 0;\n\n  // this parses it to [x,'1h', '30m'] if possible, or [x,'1h',undefined] or [x,undefined,'30m']\n  // if only one is present, where x is irrelevant\n  let groups = (/^(\\d+h|\\d*\\.\\d+h)?(\\d+m|\\d*\\.\\d+m)?$/m).exec(s);\n\n  // check there are 3 matches where at least one of the latter two are defined\n  if (!groups || groups.length !== 3 || !groups.slice(1).filter(x=>x).length)\n    return null;\n  else groups = groups.slice(1);\n\n  const pf = k => parseFloat(k.substring(0, k.length-1)); // \"1.5h\" -> 1.5\n  return 3600*pf(groups[0] || '00') + 60*pf(groups[1] || '00');\n};\n\nexport const Indicator = ({ card }) => {\n  if (card.ebs) {\n    // display 'elapsed/computed' where the 'elapsed/' is only present if nonzero\n    // displays estimate instead of computed iff card.ebs.exact (checkbox ticked)\n    const label = (card.ebs.elapsed ? prettySeconds(card.ebs.elapsed) + '/' : \"\")\n      + prettySeconds(card.ebs.exact ? card.ebs.estimate : card.ebs.computed);\n    const elapsed = card.ebs.elapsed ? `Elapsed: ${prettySeconds(card.ebs.elapsed)}` : \"\";\n    const title = card.ebs.exact ?\n      `Duration: ${prettySeconds(card.ebs.estimate)}\\n${elapsed}` :\n      `Estimate: ${prettySeconds(card.ebs.estimate)}\\nComputed: ${prettySeconds(card.ebs.computed)}\\n${elapsed}`;\n    // const icon = card.ebs.done ? <HourglassEmptyIcon /> : <HourglassFullIcon />\n    const icon = <HourglassEmptyIcon />;\n    return <IndicatorBuilder label={label} title={title} icon={icon} />;\n  } else return null;\n};\n","\nimport * as React from 'react';\nimport { Chip, makeStyles, Button } from '@material-ui/core';\n\nimport * as Description from './description';\nimport * as DateTime from './datetime';\nimport * as EBS from './ebs';\nexport { Description, DateTime, EBS };\n\nconst useStyles = makeStyles({\n  label: { padding: 3 },\n  header: { marginBottom: 6, marginTop: 6 },\n});\n\nexport const IndicatorBuilder = ({ icon, label, title }) =>\n  <Chip size='small' icon={icon}\n    label={label}\n    title={title}\n    classes={label && label.length ? null : { label: useStyles().label }}\n    style={{ borderRadius: 3, background: 'white', marginRight: 2 }}\n    variant='outlined' />;\n\nexport const AttributeHeader = props =>\n  <div className={useStyles().header}>\n    <Button variant='outlined' color='primary' size='small' {...props} />\n  </div>;\n","\nimport * as React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n         TextField, InputLabel, Select, MenuItem,\n         ListSubheader } from '@material-ui/core';\nimport * as duck from '../ducks/kanban';\nimport { globalSelectors as sel, selectors } from '../store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Description, DateTime, EBS } from '../kanban/attributes';\nimport { ReloadProtect } from '../common';\n\nexport const ConfirmDialog = ({ open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"] }) => {\n  return (\n    <Dialog open={open} onClose={() => respond(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {subtitle}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => respond(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => respond(true)} color=\"primary\" variant=\"contained\" autoFocus>\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const PromptDialog = ({\n  open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"],\n  label, inputType = \"text\", placeholder = \"\", buttons = null\n}) => {\n  const [value, setValue] = React.useState(placeholder);\n  const done = x => { respond(x); setValue(placeholder) };\n  return (\n    <Dialog open={open} onClose={() => done(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        {typeof subtitle === \"string\" && (\n          <DialogContentText>\n            {subtitle}\n          </DialogContentText>\n        )}\n        <TextField autoFocus margin=\"dense\" fullWidth\n          label={label} type={inputType} value={value} onChange={e => setValue(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        {buttons}\n        <Button onClick={() => done(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => done(value)} color=\"primary\" variant=\"contained\">\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const CardEditDialog = ({ respond, card }) => {\n  const dispatch = useDispatch();\n\n  const currentColID = useSelector(state => Object.values(sel.boards(state).columns)\n      .filter(col => col.items.indexOf(card.id) !== -1)[0].id);\n\n  const [colID, setColID] = React.useState(currentColID);\n  const [newCard, setCard] = React.useState(card);\n  const setContent = content => setCard({...newCard, content});\n\n  const columns = useSelector(selectors.boards.columns);\n  const tabs = useSelector(selectors.boards.tabs);\n\n  const done = () => {\n    respond();\n    setContent(card.content);\n  }\n  // save and then delete so you can undo the delete without losing your unsaved draft of a card\n  const deleteCard = () => {\n    dispatch(duck.editCard({ card: newCard, colID }));\n    dispatch(duck.deleteCard(card.id));\n    done();\n  }\n  const editCard = () => {\n    dispatch(duck.editCard({ card: newCard, colID }));\n    done();\n  }\n\n  return (\n    <Dialog open onClose={() => done(null)} fullWidth maxWidth='md'\n      disableBackdropClick={JSON.stringify(newCard) !== JSON.stringify(card)}>\n      <ReloadProtect shouldProtect={JSON.stringify(newCard) !== JSON.stringify(card)} />\n      <DialogTitle>Edit card</DialogTitle>\n      <DialogContent>\n        <InputLabel id=\"kanban/card-column\" className=\"custom-label\">Column</InputLabel>\n        <Select labelId=\"kanban/card-column\" value={colID} onChange={e => setColID(e.target.value)}>\n          {Object.values(tabs).flatMap(tab => ([\n            // the subheader can be clicked so we add the following CSS hack (per mui#18200)\n            // .MuiListSubheader-root { pointer-events: none; }\n            <ListSubheader key={tab.id}>{tab.name}</ListSubheader>,\n            ...tab.columns.map(colID =>\n              <MenuItem value={colID} key={colID}>{columns[colID].name}</MenuItem>\n            )\n          ]))}\n        </Select>\n        <InputLabel id=\"kanban/card-title\" className=\"custom-label\">Title</InputLabel>\n        <TextField margin=\"dense\" autoFocus fullWidth\n          multiline rowsMax={3} value={newCard.content} onChange={e => setContent(e.target.value)} />\n        <Description.Edit card={newCard} setCard={setCard} />\n        <DateTime.Edit    card={newCard} setCard={setCard} />\n        <EBS.Edit         card={newCard} setCard={setCard} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={deleteCard}>Delete</Button>\n        <Button onClick={done} color=\"primary\">Cancel</Button>\n        <Button onClick={editCard} color=\"primary\" variant=\"contained\">OK</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const AboutDialog = ({ open, respond }) => {\n  return (\n    <Dialog open={open} onClose={respond} fullWidth>\n      <DialogTitle>About Mirror</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          A free and open source personal task management and note taking app.<br/>\n\n          Made by Oliver Balfour. &copy; 2020.<br/>\n\n          App icon is <a href=\"https://thenounproject.com/term/mirror/340140/\">Mirror</a>&nbsp;\n          by Lastspark from <a href=\"http://thenounproject.com/\">The Noun Project</a>.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={respond} color=\"primary\" variant=\"contained\" autoFocus>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","\n/**\n * MenuBar component\n *\n * <MenuBar active={0} setActive={...} />\n *  (active is index of current screen)\n *\n */\n\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Tabs, Tab } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport PopoverMenu from './popovermenu';\nimport { downloadData } from '../common';\nimport { UndoRedo } from '../components';\nimport { AboutDialog } from './dialogs';\n\nexport default ({ active, setActive }) => {\n  const [aboutOpen, setAboutOpen] = React.useState(false);\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" style={{ top: 'auto', bottom: 0 }}>\n        <Toolbar style={{ minHeight: 0 }}>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => console.log(\"open menu\")}>\n            <MenuIcon />\n          </IconButton>\n          <Tabs\n            value={active} onChange={(e, val) => setActive(val)}\n            TabIndicatorProps={{ style: { backgroundColor: 'white' } }}\n          >\n            <Tab label={<div><DeveloperBoardIcon style={{verticalAlign: 'middle'}} /> Board</div>}  />\n            <Tab label={<div><NotesIcon style={{verticalAlign: 'middle'}} /> Notes</div>}  />\n          </Tabs>\n          <div style={{ flexGrow: 1 }} />\n          <UndoRedo />\n          <PopoverMenu map={{\n            // eslint-disable-next-line\n            \"Submit feedback\": () => window.open('mailto'+':oliver.'+'leo.balfour+mirrorsupport'+'@googlemail'+'.com', '_blank'),\n            \"About\": () => setAboutOpen(true),\n            \"Clear saved state\": () => window.prompt(\"Delete all saved state? Pressing undo will fix this. Type YES to confirm\", \"NO\") === \"YES\" && localStorage.clear(),\n            \"Import state\": () => { localStorage.kanban = window.prompt(\"Paste your exported state here. Press cancel (or the undo button after pressing OK) to revert. Refresh the page to confirm and reload state.\") },\n            \"Export state\": () => downloadData(localStorage.kanban, \"mirror-backup.json\", \"application/json\"),\n          }}>\n            <IconButton edge=\"end\" color=\"inherit\">\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n        </Toolbar>\n      </AppBar>\n      <AboutDialog open={aboutOpen} respond={() => setAboutOpen(false)} />\n    </React.Fragment>\n  );\n}\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport { ActionCreators } from 'redux-undo'\n\nexport default () => {\n  const dispatch = useDispatch();\n  return (\n    <React.Fragment>\n      <IconButton\n        onClick={() => dispatch(ActionCreators.undo())}\n        color=\"inherit\" edge=\"end\">\n        <UndoIcon />\n      </IconButton>\n      <IconButton\n        onClick={() => dispatch(ActionCreators.redo())}\n        color=\"inherit\" edge=\"end\">\n        <RedoIcon />\n      </IconButton>\n    </React.Fragment>\n  );\n};\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\n\nimport { IconButton } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport { PopoverMenu, ConfirmDialog, PromptDialog } from '../components';\n\n// header name, add button, chips for each addon (WIP limit, EBS time estimate, etc), menu button\nexport default ({ col, add, menu }) => {\n  const dispatch = useDispatch();\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => {\n    setConfirmOpen(false);\n    if (res) dispatch(duck.deleteColumn(col.id))\n  }\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = res => {\n    setPromptOpen(false);\n    if (typeof res === \"string\" && res.length)\n      dispatch(duck.renameColumn({ colID: col.id, name: res }));\n  }\n\n  const archiveAll = () => dispatch(duck.archiveCardsInColumn(col.id));\n\n  return (\n    <div>\n      <div className='columnHeaderContainer'>\n        <div className='columnHeaderText'>\n          {col.name}\n        </div>\n        <div>\n          {/*\n            // TODO: column powerup API with Chip indicators\n            <Chip size='small' label=\"0/6\" />\n            <Chip size='small' label=\"3h\" />\n          */}\n          <IconButton size='small' onClick={() => add()}>\n            <AddIcon />\n          </IconButton>\n          <PopoverMenu map={{\n            \"Archive all\": () => archiveAll(),\n            \"Rename\": () => setPromptOpen(true),\n            \"Delete\": () => setConfirmOpen(true),\n          }}>\n            <IconButton size='small'>\n              <MoreVertIcon />\n            </IconButton>\n          </PopoverMenu>\n        </div>\n      </div>\n      <hr className='columnHeaderRule' />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this column?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title={`Rename column \"${col.name}\"`} subtitle=\"Don't worry, this action can be undone.\"\n          label=\"Name\" placeholder={col.name} />\n      )}\n    </div>\n  );\n};\n","\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectors } from '../store';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Markdown } from '../components';\nimport { Description, DateTime, EBS } from './attributes';\n\nexport default React.memo(({ card, index, setEditingCard }) => {\n  const cards = useSelector(selectors.boards.cards);\n  if (!card) return null;\n  const { id, content } = card;\n\n  return (\n    <React.Fragment>\n      <Draggable draggableId={id} index={index}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={'card' + (snapshot.isDragging ? \" draggingCard\" : \"\")}\n            style={provided.draggableProps.style}\n            onClick={() => setEditingCard(id)}>\n            <Markdown source={content} cards={cards} />\n            <Description.Indicator card={card} />\n            <DateTime.Indicator    card={card} />\n            <EBS.Indicator         card={card} />\n          </div>\n        )}\n      </Draggable>\n    </React.Fragment>\n  );\n});\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\nimport { Button, IconButton, ButtonGroup, TextField } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { mergeRefs } from '../common';\nimport ColumnHeader from './column-header';\nimport Card from './card';\n\nexport default React.memo(({ col, index, setEditingCard }) => {\n  const { id, items } = col;\n\n  const [editingNew, setEditingNew] = React.useState(false);\n  const [editingValue, setEditingValue] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const addCard = () => {\n    if (editingValue.length)\n      dispatch(duck.addCard({\n        content: editingValue,\n        colID: id\n      }));\n    setEditingValue(\"\");\n    setEditingNew(false);\n  };\n  const addButton = () => {\n    if (editingNew)\n      setEditingValue(\"\");\n    else\n      // scroll so that the add card section at the top is visible\n      scrollContainerRef.current.scrollTop = 0;\n    setEditingNew(!editingNew);\n  };\n  const scrollContainerRef = React.useRef(null);\n  const menuButton = () => {\n    console.log('pressed menu button');\n  };\n  const internals = (\n    <Droppable droppableId={id} className='card-droppable' type=\"card\" ignoreContainerClipping>\n      {(provided, snapshot) => (\n        <React.Fragment>\n          <div\n            className={'column-internals' + (snapshot.isDraggingOver ? ' dragging-over' : '')}\n            ref={mergeRefs(provided.innerRef, scrollContainerRef)}\n          >\n            {editingNew && (\n              <EditingCard value={editingValue} setValue={setEditingValue}\n                add={addCard} cancel={() => { setEditingValue(\"\"); setEditingNew(false) }} />\n            )}\n            {items.map((card, index) => card ? <Card card={card} index={index} key={card.id}\n              setEditingCard={setEditingCard} /> : null)}\n          </div>\n          {provided.placeholder}\n        </React.Fragment>\n      )}\n    </Droppable>\n  );\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided, snapshot) => (\n        <div ref={provided.innerRef}\n          {...provided.draggableProps}\n          className={\"columnContainer\" + (snapshot.isDragging ? \" draggingColumn\" : \"\")}\n          style={provided.draggableProps.style}>\n          <div className=\"column\">\n            <div {...provided.dragHandleProps}>\n              <ColumnHeader col={col} add={addButton} menu={menuButton} />\n            </div>\n            {internals}\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n});\n\nconst EditingCard = ({ value, setValue, add, cancel }) => {\n  React.useEffect(() => {\n    // Pressing ESC cancels editing a card\n    const cb = e => e.which === 27 && cancel();\n    document.addEventListener('keydown', cb);\n    return () => document.removeEventListener('keydown', cb);\n  });\n  return (\n    <div>\n      <TextField\n        label=\"New Card\"\n        multiline\n        autoFocus\n        rowsMax={6}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        variant=\"filled\"\n        style={{ width: \"100%\" }} />\n      <ButtonGroup variant=\"contained\" size='small' className='editingCardButtons'>\n        <Button style={{flexGrow: 1}} variant='contained' onClick={add}>\n          Done\n        </Button>\n        <Button onClick={cancel}><DeleteIcon style={{color: '#555'}} /></Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport const AddColumn = ({ add, hide }) => {\n  return (\n    <div className={'addColumnContainer' + (hide ? ' hidden' : '')}>\n      <div className='addColumn'>\n        <IconButton onClick={add}>\n          <AddIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\nimport { selectors } from '../store';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { PromptDialog, CardEditDialog } from '../components';\nimport { useHashLocation } from '../common';\nimport Column, { AddColumn } from './column';\nimport './index.scss';\n\nexport default ({ tabInfo }) => {\n  const tab = tabInfo.index;\n  const tabObj = tabInfo.tab;\n  const dispatch = useDispatch();\n\n  const tabOrder = useSelector(selectors.boards.tabOrder);\n  const columns = useSelector(selectors.boards.getColumnsInTabs)[tabOrder[tab]];\n  const tabs = useSelector(selectors.boards.tabs);\n  const cards = useSelector(selectors.boards.cards);\n  const colIDs = tabs[tabOrder[tab]].columns;\n\n  // dispatch move card action\n  const onDragEnd = res => {\n    if (!res.destination) return;\n    if (res.type === \"card\") {\n      dispatch(duck.moveCard([\n        res.source.droppableId, res.destination.droppableId,\n        res.source.index, res.destination.index\n      ]));\n    } else if (res.type === \"column\") {\n      dispatch(duck.moveColumn([\n        res.source.index, res.destination.index, tab\n      ]));\n    }\n  };\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = name => {\n    setPromptOpen(false);\n    if (typeof name === \"string\" && name.length)\n      dispatch(duck.addColumn({ tabID: tabObj.id, name }));\n  }\n\n  const [loc, setLoc] = useHashLocation();\n  // editing card if URL is /board/CARD_ID/edit\n  const editingCard = loc.split(\"/\")[4] === \"edit\" ? loc.split(\"/\")[3] : null;\n\n  const cardsByTab = useSelector(selectors.boards.cardsByTab);\n  const tabIDfromCardID = id => Object.keys(cardsByTab).filter(tabID => cardsByTab[tabID].indexOf(id) !== -1);\n  const setEditingCard = id => id\n    ? setLoc(`/boards/${tabs[tabIDfromCardID(id)].name.toLowerCase()}/${id}/edit`)\n    : setLoc(`/boards/${loc.split(\"/\")[2]}`);\n\n  return (\n    <div className='boardview-root'>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"default\" className='column-droppable' direction=\"horizontal\" type=\"column\">\n          {(provided, snapshot) => (\n            <React.Fragment>\n              <div className='root' ref={provided.innerRef}>\n                {colIDs.map((colID, i) => <Column col={columns[i]} key={colID} index={i}\n                  setEditingCard={setEditingCard} />)}\n                <AddColumn add={() => setPromptOpen(true)} hide={snapshot.isDraggingOver || snapshot.draggingFromThisWith} />\n              </div>\n              {provided.placeholder}\n            </React.Fragment>\n          )}\n        </Droppable>\n      </DragDropContext>\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title=\"Add column\" label=\"Name\" />\n      )}\n      {editingCard && cards.hasOwnProperty(editingCard) && (\n        <CardEditDialog respond={() => setEditingCard(null)} card={cards[editingCard]} />\n      )}\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TabView } from '../components';\nimport BoardView from './boardview';\nimport * as duck from '../ducks/kanban';\nimport { selectors } from '../store';\nimport { ConfirmDialog, PromptDialog } from '../components';\nimport { useHashLocation } from '../common';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const [loc, setLoc] = useHashLocation();\n  // {id:{name, id, columns (ids)},...}\n  const tabs = useSelector(selectors.boards.tabs);\n  const tabOrder = useSelector(selectors.boards.tabOrder);\n  let currentTab = tabOrder.map(tabID => tabs[tabID].name.toLowerCase() === loc.split(\"/\")[2]).indexOf(true);\n  const setCurrentTab = num => setLoc(\"/boards/\"+tabs[tabOrder[num]].name.toLowerCase());\n  if (currentTab < 0) currentTab = 0;\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => {\n    setConfirmOpen(false);\n    if (res) {\n      dispatch(duck.deleteTab(currentTab));\n      setCurrentTab(Math.max(0,currentTab-1));\n    }\n  }\n\n  const [addPromptOpen, setAddPromptOpen] = React.useState(false);\n  const addPromptRespond = res => {\n    setAddPromptOpen(false);\n    if (typeof res === \"string\" && res.length)\n      dispatch(duck.addTab(res));\n  }\n\n  const [renamePromptOpen, setRenamePromptOpen] = React.useState(false);\n  const renamePromptRespond = res => {\n    setRenamePromptOpen(false);\n    if (typeof res === \"string\" && res.length)\n      dispatch(duck.renameTab({ tabID: tabOrder[currentTab], name: res }));\n  }\n\n  return (\n    <React.Fragment>\n      <TabView\n        tabs={tabOrder.map(tabID => tabs[tabID].name)}\n        render={i => <BoardView tabInfo={{ tab: tabs[tabOrder[i]], index: i }} />}\n        addTab={() => setAddPromptOpen(true)}\n        renameTab={() => setRenamePromptOpen(true)}\n        deleteTab={() => Object.values(tabs).length > 1 ? setConfirmOpen(true) : alert(\"Cannot delete only tab\")}\n        moveTab={data => dispatch(duck.moveTab(data))}\n        index={currentTab} setIndex={setCurrentTab}\n      />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this tab?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {addPromptOpen && (\n        <PromptDialog open respond={addPromptRespond} title=\"Add tab\" label=\"Name\" />\n      )}\n      {renamePromptOpen && (\n        <PromptDialog open respond={renamePromptRespond}\n          title={`Rename tab ${tabs[tabOrder[currentTab]].name}`} label=\"Name\" />\n      )}\n    </React.Fragment>\n  );\n}\n","\nimport * as React from 'react';\nimport { useHashLocation, generateID, ReloadProtect } from '../common';\nimport { selectors } from '../store';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Markdown, AutocompleteEditor } from '../components';\nimport {\n  TextField, Button, ButtonGroup,\n  // Drawer, List, Divider, ListItem, ListItemText\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport SearchIcon from '@material-ui/icons/Search';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport * as duck from '../ducks/kanban.js';\nimport './index.scss';\n\nexport default () => {\n  const [loc, setLoc, setLocNoHist] = useHashLocation();\n  const dispatch = useDispatch();\n  const cards = useSelector(selectors.boards.cards);\n  const starred = useSelector(selectors.boards.starredZettels);\n\n  const currentCardID = loc.split('/')[2] || 'main'; //#/notes/ID\n  // const setCurrentCardID = id => setLoc(`/notes/${id}`);\n\n  const card = cards[currentCardID];\n  const [newCard, setNewCard] = React.useState({ ...card }); // assuming no deep nesting\n  const setCard = part => setNewCard({ ...newCard, ...part });\n\n  if (typeof card !== 'object') return null;\n\n  const editing = loc.split('/')[3] === 'edit'; //#/notes/ID/edit\n  const setEditing = yes => yes\n    ? setLocNoHist(`/notes/${currentCardID}/edit`)\n    : setLocNoHist(`/notes/${currentCardID}`);\n  const cancelEditing = () => {\n    setEditing(false);\n    setNewCard({...card});\n  }\n\n  const deleteZettel = () => {\n    dispatch(duck.deleteCard(currentCardID));\n    setLocNoHist('/notes/main');\n  }\n  const saveZettel = zettel => {\n    dispatch(duck.editZettel({ zettel }));\n    setEditing(false);\n  }\n  const starZettel = () =>\n    dispatch(duck.toggleZettelStarred(currentCardID));\n\n  // update editing field on card change\n  if (card.id !== newCard.id) {\n    // We want to save the card if the 'Add note' button was pressed\n    // The only time a card is not saved is if you press cancel or delete\n    dispatch(duck.editZettel({ zettel: newCard }));\n    setNewCard({ ...card });\n  };\n\n  const addZettel = id => {\n    // create a new card and navigate to editing it\n    dispatch(duck.addZettel({ zettel: { content: 'New note', description: '...', id } }));\n    setLoc(`/notes/${id}/edit`);\n  };\n\n  const addNewNote = id => {\n    dispatch(duck.editZettel({ zettel: newCard }));\n    addZettel(id);\n  }\n\n  return (\n    // TODO: drawer\n    // Responsive: https://material-ui.com/components/drawers/#responsive-drawer\n    // Search bar: https://material-ui.com/components/text-fields/#icons\n    //   or https://material-ui.com/components/app-bar/#app-bar-with-a-primary-search-field\n    // Starred cards\n    // All notes button (navigate to #/notes/all and show a list of notes without contents)\n    <React.Fragment>\n      <ReloadProtect shouldProtect={JSON.stringify(newCard) !== JSON.stringify(card)} />\n      <div className='zettelContainer'>\n        {/*<Drawer\n          className='zettelDrawer'\n          variant=\"permanent\"\n          classes={{\n            paper: 'zettelDrawerPaper',\n          }}\n        >\n          <div className='zettelDrawerContainer'>\n            <List>\n              {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n            <Divider />\n            <List>\n              {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n          </div>\n        </Drawer>*/}\n        {editing && (\n          <div className='zettel'>\n            <TextField margin=\"dense\" autoFocus fullWidth\n              multiline rowsMax={3} value={newCard.content || ''} onChange={e => setCard({ content: e.target.value })} />\n            <AutocompleteEditor value={newCard.description || ''} setValue={description => setCard({ description })}\n              addNote={addNewNote} />\n            <div className='zettelEditingButtons'>\n              <Button onClick={cancelEditing} color=\"primary\">Cancel</Button>\n              <Button onClick={() => saveZettel(newCard)} color=\"primary\" variant=\"contained\">Save</Button>\n            </div>\n          </div>\n        )}\n        <div className={'zettel' + (editing ? ' notes-editing' : '')}>\n          <div className='zettelTitle'>\n            {(editing ? newCard.content : card.content) || ''}\n          </div>\n          <Markdown source={(editing ? newCard.description : card.description) || ''} cards={cards} />\n        </div>\n      </div>\n      <div className='zettelButtons' id='zettel-buttons-container'>\n        <ButtonGroup variant='contained' color='primary'>\n          {!editing && (\n            <Button onClick={() => setEditing(true)} title=\"Edit note\">\n              <EditIcon />\n            </Button>\n          )}\n          {card.id !== 'main' && (\n            <Button onClick={deleteZettel} title=\"Delete note\">\n              <DeleteIcon />\n            </Button>\n          )}\n          {!editing && (\n            <Button onClick={() => addZettel(generateID())} title=\"Add note\">\n              <AddIcon />\n            </Button>\n          )}\n          <Button onClick={() => alert('TODO')} title=\"Search notes\">\n            <SearchIcon />\n          </Button>\n          {starred.indexOf(card.id) === -1 ? (\n            <Button onClick={starZettel} title=\"Star this note\">\n              <StarBorderIcon />\n            </Button>\n          ) : (\n            <Button onClick={starZettel} title=\"Unstar this note\">\n              <StarIcon />\n            </Button>\n          )}\n        </ButtonGroup>\n      </div>\n    </React.Fragment>\n  );\n};\n","\n/**\n * app.js\n * Main JSX source file for the app\n * Details like screen size and renderer are abstracted away by index.[platform].js\n * and ../index.js\n */\n\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { useHashLocation, Hidden } from './common';\n// import { createMuiTheme, ThemeProvider } from '@material-ui/core';\n\nimport { MenuBar } from './components';\nimport Kanban from './kanban';\nimport Zettelkasten from './zettelkasten';\nimport store, { globalSelectors as sel } from './store';\n\nconst baseTabNames = [\"boards\", \"notes\"];\n// Get the nth segment of a slash separated list\nconst getURLPart = (str, n) =>\n  str.split(\"/\").filter(s=>s.length)[n < 0 ? str.length + n : n];\nconst getScreen = loc =>\n  Math.max(baseTabNames.indexOf(getURLPart(loc, 0)), 0);\nconst getScreenNames = () => {\n  let screenNames = [\"/boards/\", \"/notes/main\"];\n  // boards get special treatment of /boards/FIRST_TAB\n  const state = sel.boards(store.getState());\n  screenNames[0] += state.tabs[state.tabOrder[0]].name.toLowerCase();\n  return screenNames;\n}\n\nexport default () => {\n  const [loc, setLoc] = useHashLocation();\n  const [tabURLs, setTabURLs] = React.useState(getScreenNames());\n  const setTabURL = (newURL, i, move) => {\n    let newTabURLs = tabURLs.slice(0);\n    newTabURLs[i] = newURL;\n    setTabURLs(newTabURLs);\n    if (move) setLoc(newURL);\n  };\n  const active = getScreen(loc);\n  const setActive = n => {\n    if (n === active) {\n      // Return to the base page of this tab\n      setTabURL(\"/\" + baseTabNames[active], active, true);\n    } else {\n      // Save the current URL as the return URL for this tab\n      setTabURL(loc, active);\n      // Set the location to the saved URL for the new tab\n      setLoc(tabURLs[n]);\n    }\n  }\n\n  const style = { height: \"calc(100% - 48px)\" };\n\n  return (\n    <Provider store={store}>\n      <div id=\"jsx-root\">\n        <div style={style}>\n          <Hidden show={active === 0}>\n            <Kanban />\n          </Hidden>\n          <Hidden show={active === 1}>\n            <Zettelkasten />\n          </Hidden>\n        </div>\n        <MenuBar active={active} setActive={setActive} />\n      </div>\n    </Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Application from './app.js';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <Application/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://create-react-app.dev/docs/making-a-progressive-web-app/\nserviceWorker.unregister();\n"],"sourceRoot":""}