{"version":3,"sources":["common/string.js","common/react.js","common/time.js","common/initial-state.js","backends/localstorage.js","common/index.js","components/markdown-base.js","components/popovermenu.js","components/tabview.js","ducks/kanban.js","store.js","components/markdown.js","components/autocomplete-editor.js","kanban/attributes/description.js","kanban/attributes/datetime.js","kanban/attributes/ebs.js","kanban/attributes/index.js","components/dialogs.js","components/menubar.js","components/undoredo.js","kanban/column-header.js","kanban/card.js","kanban/column.js","kanban/boardview.js","kanban/index.js","zettelkasten/index.js","app.js","serviceWorker.js","index.js"],"names":["linkName","card","firstLine","content","split","length","substring","abbreviatedDescription","text","description","join","parseWikilinks","source","cards","m","prefix","regex","exec","index","lastIndex","parseable","match","cardID","before","name","link","after","countRegexOccurrences","str","re","parseLaTeX","string","katex","console","log","indexOf","blockRegex","inlineRegex","render","displayMode","renderToString","throwOnError","fmapRegexMatch","i","mergeRefs","refs","filteredRefs","filter","Boolean","inst","ref","current","currentLoc","window","location","hash","replace","useHashLocation","React","loc","setLoc","handler","addEventListener","removeEventListener","navigate","to","__useTitleInUse","useTitle","title","result","document","original","ReloadProtect","shouldProtect","onbeforeunload","e","Hidden","children","show","style","display","RawHTMLString","purify","props","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","__lastGeneratedID","generateID","date","timeString","Date","fn","newID","parseInt","prettyPrintDate","epochMilliseconds","now","time","getHours","getMinutes","getTime","diff","weekDiff","weekStartsOn","yearDiff","dayOfWeek","getDay","day","getDate","timeUrgencyClassName","ms","remaining","generateInitialState","initialState","modifyVersion","oldSemver","newSemver","mutation","localStorage","version","state","JSON","parse","kanban","stringify","loadState","Error","epochms","id","created","edited","numCols","Object","values","columns","col","items","type","hasOwnProperty","saveState","serialised","setItem","objectMap","object","mapFn","keys","reduce","key","downloadData","filename","a","createElement","blob","Blob","href","URL","createObjectURL","download","click","searchCards","term","limit","matches","tl","toLowerCase","includes","push","PrismMarked","MarkdownBase","postprocess","x","fallback","marked","gfm","className","map","anchorEl","setAnchorEl","handleClose","Menu","keepMounted","open","onClose","entries","func","MenuItem","onClick","currentTarget","TabPanel","hidden","height","tabs","setIndex","addTab","renameTab","deleteTab","moveTab","handleChange","event","newValue","Grow","flexGrow","flex","AppBar","position","backgroundColor","zIndex","Tabs","value","onChange","indicatorColor","textColor","tab","Tab","label","IconButton","transferCard","createAction","reorderCard","addCard","editCardContent","editCard","deleteCard","addColumn","deleteColumn","renameColumn","moveColumn","archiveCardsInColumn","sortColByTime","addZettel","editZettel","deleteZettel","toggleZettelStarred","deleteInList","list","elem","splice","selectors","getColumnsInTabs","colID","tabOrder","archivedCards","activeCards","starredZettels","cardsByTab","flatMap","reducer","createReducer","s","payload","srcColID","dstColID","srcIndex","dstIndex","srcCol","dstCol","removed","moved","newitems","unshift","tabIdx","forEach","tabID","shift","srcIdx","dstIdx","archived","archivedFromColID","zettel","sort","b","aMS","bMS","undoable","store","configureStore","boards","middleware","getDefault","concat","thunk","activeElement","tagName","ctrlKey","which","shiftKey","dispatch","UndoActionCreators","undo","redo","globalSelectors","present","boardSelectors","localSelector","localStorageSubscriber","getState","subscribe","KaTeXMarkdown","setValue","autoFocus","addNote","rows","rowsMax","inputRef","useSelector","editor","TextareaEditor","strategy","context","beforeCursor","search","callback","cache","template","setTimeout","textcomplete","Textcomplete","dropdown","rotate","maxCount","destroy","TextField","margin","fullWidth","variant","multiline","target","inputProps","Edit","setCard","editingDescription","setEditingDescription","InputLabel","ClickAwayListener","onClickAway","width","undefined","marginTop","Indicator","icon","enAU","weekStart","setDateTime","utils","DateFnsUtils","locale","DateTimePicker","newDate","showTodayButton","format","Button","color","float","startOfToday","setEBS","ebsFields","ebs","prettySeconds","estimate","estStr","setEstStr","elapsed","elapStr","setElapStr","historical","sel","prototype","call","setEBSEstimate","exact","unprettySeconds","optExact","computed","computeEstimate","invalid","marginRight","error","helperText","setEBSElapsed","FormControlLabel","control","Checkbox","checked","size","ratio","acc","seconds","Math","abs","round","hours","floor","minutes","groups","slice","pf","k","parseFloat","IndicatorBuilder","Chip","classes","AttributeHeader","ConfirmDialog","respond","subtitle","labels","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","PromptDialog","inputType","placeholder","buttons","done","CardEditDialog","useDispatch","currentColID","setColID","newCard","setContent","maxWidth","disableBackdropClick","Select","labelId","ListSubheader","duck","AboutDialog","active","setActive","useState","aboutOpen","setAboutOpen","Fragment","top","bottom","Toolbar","minHeight","val","TabIndicatorProps","verticalAlign","prompt","clear","edge","ActionCreators","add","menu","confirmOpen","setConfirmOpen","promptOpen","setPromptOpen","dateTimeAttributeUsed","res","setEditingCard","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","isDragging","editingNew","setEditingNew","editingValue","setEditingValue","addButton","scrollContainerRef","scrollTop","menuButton","internals","droppableId","ignoreContainerClipping","isDraggingOver","cancel","EditingCard","cb","ButtonGroup","AddColumn","hide","tabInfo","tabObj","colIDs","editingCard","tabIDfromCardID","onDragEnd","destination","direction","draggingFromThisWith","currentTab","setCurrentTab","num","addPromptOpen","setAddPromptOpen","renamePromptOpen","setRenamePromptOpen","alert","data","max","setLocNoHist","starred","currentCardID","setNewCard","part","editing","setEditing","yes","starZettel","baseTabNames","screenNames","getScreenNames","tabURLs","setTabURLs","setTabURL","newURL","move","newTabURLs","n","getScreen","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.20592e2a.chunk.js","sourcesContent":["\nexport const linkName = card => {\n  if (!card) return 'unknown';\n  const firstLine = card.content.split('\\n')[0];\n  if (firstLine.length > 40) return firstLine.substring(0,37) + '...';\n  return firstLine;\n};\n\nexport const abbreviatedDescription = card => {\n  if (!card) return '';\n  // If it's a string, use it. If it's a card, use description with fallback on title. Otherwise, unknown.\n  const text = card ? (typeof card === 'string' ? card : (card.description || card.content)) : 'unknown';\n  const limit = 500; // crop after this with ellisis\n  const title = text.split(\"\\n\\n\").join(\"\\n\").substring(0, limit)\n    + (text.length > limit ? \"...\" : \"\");\n  return title;\n};\n\nexport const parseWikilinks = (source, cards, prefix = '#/notes/') => {\n  const regex = /(\\[\\[[A-Za-z0-9_-]+\\]\\])/gm; // assumes card IDs are alphanumeric + dash + underscore\n  let m;\n  while ((m = regex.exec(source)) !== null) {\n    if (m.index === regex.lastIndex) regex.lastIndex++;\n    // m.index is the index in 'source'\n    const parseable = (source.substring(0, m.index).match(/`/gm) || []).length % 2 === 0;\n    if (!parseable) continue;\n\n    // m[1] is the actual match\n    let cardID = m[1].substring(2, m[1].length - 2);\n\n    // replace [[CARD_ID]] with [CARD_NAME](#/notes/CARD_ID)\n    let before = source.substring(0, m.index),\n        name = linkName(cards[cardID]),\n        link = prefix + cardID,\n        after = source.substring(m.index + m[1].length, source.length);\n    source = before + `[${name}](${link})` + after;\n  }\n  return source;\n};\n\n// regex must have /g flag\nconst countRegexOccurrences = (str, re) =>\n  ((str || '').match(re) || []).length;\n\n// Parse LaTeX math formulae using KaTeX\nexport const parseLaTeX = (string, katex) => {\n  console.log(string);\n  if (string.indexOf(\"$$\") === -1) return string;\n\n  const blockRegex = /<p>\\$\\$([^\\n]+)\\$\\$<\\/p>/m;\n  const inlineRegex =   /\\$\\$([^\\n]+)\\$\\$/m;\n\n  const render = (str, displayMode) => katex.renderToString(str, { throwOnError: false, displayMode });\n\n  const fmapRegexMatch = (str, displayMode) => {\n    // Only replace after the previous match to avoid infinite loops\n    let lastIndex = 0;\n    let regex = displayMode ? blockRegex : inlineRegex;\n    let m = str.match(regex);\n\n    // Limit to 100 equations\n    for (let i = 0; i < 100 && lastIndex < str.length && m; i++) {\n      // Skip <code> or <pre> blocks\n      const proceed = countRegexOccurrences(str.substring(0, lastIndex + m.index), /<(code|pre)[^>]*>/g)\n                  === countRegexOccurrences(str.substring(0, lastIndex + m.index), /<\\/(code|pre)>/g);\n\n      if (proceed) {\n        str = str.substring(0, m.index + lastIndex)\n            + render(m[1], displayMode)\n            + str.substring(m.index + lastIndex + m[0].length, str.length);\n      }\n\n      lastIndex += m.index + m[0].length;\n      m = str.substring(lastIndex, str.length).match(regex);\n    }\n\n    return str;\n  };\n\n  return fmapRegexMatch(fmapRegexMatch(string, true), false);\n};\n","\nimport * as React from 'react';\nimport DOMPurify from 'dompurify';\n\n// Source: https://www.davedrinks.coffee/how-do-i-use-two-react-refs/\nexport const mergeRefs = (...refs) => {\n  const filteredRefs = refs.filter(Boolean);\n  if (!filteredRefs.length) return null;\n  if (filteredRefs.length === 0) return filteredRefs[0];\n  return inst => {\n    for (const ref of filteredRefs) {\n      if (typeof ref === 'function') {\n        ref(inst);\n      } else if (ref) {\n        ref.current = inst;\n      }\n    }\n  };\n};\n\n// Web: returns the current hash location (excluding the '#' symbol)\n// Based on https://codesandbox.io/s/wouter-hash-based-hook-5fp9g\nconst currentLoc = () => window.location.hash.replace(\"#\", \"\") || \"/\";\nexport const useHashLocation = () => {\n  const [loc, setLoc] = React.useState(currentLoc());\n  React.useEffect(() => {\n    const handler = () => setLoc(currentLoc());\n    window.addEventListener(\"hashchange\", handler);\n    return () => window.removeEventListener(\"hashchange\", handler);\n  }, []);\n  const navigate = React.useCallback(to => window.location.hash = to, []);\n  // const navigateNoHistory = React.useCallback(to => {\n  //   window.history.replaceState(undefined, undefined, \"#\"+to);\n  //   setLoc(to); // because handler does not detect replaceState\n  // }, []);\n  // Disable no history navigation as it breaks currentLoc\n  return [loc, navigate, navigate/*NoHistory*/];\n};\n\n// You can supply a title, a function that produces a title each render, or null\n// In every case the title is reset to its original value afterwards\nlet __useTitleInUse = 0;\nexport const useTitle = title => {\n  if (typeof title === \"function\") {\n    const result = title();\n    if (result)\n      document.title = result;\n  }\n  React.useEffect(() => {\n    const original = document.title;\n    __useTitleInUse++;\n    if (typeof title === \"string\")\n      document.title = title;\n    return () => !(__useTitleInUse--) && (document.title = original);\n  });\n}\n\n// Note: ReloadProtect does not prevent hash changes. Be warned!\nexport const ReloadProtect = ({ shouldProtect = true }) => {\n  React.useEffect(() => {\n    // componentDidMount\n    if (shouldProtect)\n      window.onbeforeunload = e => \"Are you sure you want to quit?\";\n    // componentWillUnmount\n    return () => window.onbeforeunload = null;\n  });\n  return null;\n}\n\nexport const Hidden = ({ children, show }) =>\n  <div style={show ? {} : { display: \"none\" }}>\n    {children}\n  </div>;\n\nexport const RawHTMLElement = ({ source, ...props }) => {\n  const ref = React.useRef(null);\n  React.useEffect(() => {\n    ref.current.appendChild(source);\n  });\n  return <span ref={ref} {...props} />\n}\n\n// DOMPurify reduces XSS risk\nexport const RawHTMLString = ({ source, purify = true, ...props }) =>\n  <span dangerouslySetInnerHTML={{ __html: purify ? DOMPurify.sanitize(source) : source }} {...props} />;\n","\nimport * as fn from 'date-fns';\n\nexport const simpleDate = date => fn.format(date, \"yyyyMMdd-hhmmss\");\n\nlet __lastGeneratedID = null;\nexport const generateID = () => {\n  const timeString = simpleDate(new Date());\n  let newID = timeString;\n  // if we generate multiple IDs in one second, we add \"-n\" where n is 1,2,...\n  // the only time this causes collisions is if you add a card, refresh, add a card within 1s\n  if (__lastGeneratedID !== null && __lastGeneratedID.substring(0, timeString.length) === newID) {\n    if (__lastGeneratedID.length === timeString.length) newID += \"-1\";\n    else newID += '-' + (parseInt(__lastGeneratedID.substring(timeString.length + 1, __lastGeneratedID.length)) + 1)\n  }\n  __lastGeneratedID = newID;\n  return newID;\n}\n\n/**\n * Returns a heavily abbreviated pretty printed date using date-fns\n * - Only includes time if within a week and not midnight\n * - Only includes minutes if nonzero\n * - Replaces date with \"Tomorrow\", \"Next Fri\" or \"Last Wed\", etc.\n */\nexport const prettyPrintDate = epochMilliseconds => {\n  const date = new Date(epochMilliseconds);\n  const now = new Date();\n\n  const getDate = date => {\n    const diff = fn.differenceInCalendarDays(date, now);\n    const weekDiff = fn.differenceInCalendarWeeks(date, now, { weekStartsOn: 1 });\n    const yearDiff = fn.differenceInCalendarYears(date, now);\n    // 0 is Monday\n    let dayOfWeek = now.getDay() - 1;\n    // JavaScript's modulo is broken for negatives, so we must use an if statement\n    if (dayOfWeek < 0) dayOfWeek += 7;\n\n    // Relative dates are quite ambiguous in English\n    // If today is Wednesday 23 September 2020, then the following mappings are adhered to:\n\n    // 15/9/19: Sun 15 Sep 2019\n    // 15/9/20: Tue 15 Sep\n    // 16/9/20: Last Wed\n    // 21/9/20: Last Mon\n    // 22/9/20: Yesterday\n    // 23/9/20: Today\n    // 24/9/20: Tomorrow\n    // 25/9/20: Fri\n    // 27/9/20: Sun\n    // 28/9/20: Next Mon\n    // 7/10/20: Wed Week\n\n    if (diff ===  0) return \"Today\";\n    if (diff === -1) return \"Yesterday\";\n    if (diff ===  1) return \"Tomorrow\";\n\n    const day = fn.format(date, \"EEE\"); // eg Mon, Thu\n\n    // If it's this calendar week,\n    // or during the weekend it is a weekday the next week\n    if ((weekDiff === 0 && diff >= 0)\n     || (dayOfWeek >= 5 && diff >= 0 && diff < 5)) return day;\n\n    if (diff >= -7 && diff <   0) return `Last ${day}`;\n    if (diff >   0 && diff <=  7) return `Next ${day}`;\n    if (diff >   7 && diff <= 14) return `${day} Week`;\n\n    if (yearDiff === 0)\n      return fn.format(date, \"EEE do MMM\"); // eg: Thu 17th Sep\n    else\n      return fn.format(date, \"EEE do MMM yyyy\"); // eg: Fri 17th Sep 2021 if it's not 2021\n  }\n\n  const getTime = date => {\n    // ignore time if midnight\n    if (date.getHours() === 0 && date.getMinutes() === 0) return null;\n    // No minutes; eg 4PM\n    if (date.getMinutes() === 0) return fn.format(date, \"haaa\");\n    return fn.format(date, \"h:mmaaa\");\n  }\n\n  const time = getTime(date);\n  return getDate(date) + (time ? \" \" + time : \"\");\n};\n\nexport const timeUrgencyClassName = ms => {\n  const remaining = (ms - new Date().getTime()) / 1000;\n  if (remaining < 0) return 'urgency-overdue';\n  if (remaining < 7200) return 'urgency-two-hours';\n  if (remaining < 86400) return 'urgency-day';\n  if (remaining < 86400*7) return 'urgency-week';\n  if (remaining < 86400*7*2) return 'urgency-fortnight';\n  return null;\n}\n","\n/*\n * Exports generateInitialState :: () -> state\n */\n\nimport initialState from '../../public/initial-state.json';\n\n// generate initial dummy state\nexport const generateInitialState = () => {\n  return initialState;\n\n  // TODO: async fetch\n  // This is tricky because the Redux store may use it for initialisation\n  // and many parts of the app (foolishly) directly import the store\n\n  // fetch(\"./initial-state.json\")\n  //   .then(res => res.json())\n  //   .catch(e => alert(\"Could not load initial state. Error: \" + e));\n}\n","\nimport { generateInitialState } from '../common/initial-state.js';\n\nconst modifyVersion = (oldSemver, newSemver, mutation) => {\n  if (localStorage.version === oldSemver) {\n    let state = JSON.parse(localStorage.kanban);\n    mutation(state);\n    localStorage.kanban = JSON.stringify(state);\n    localStorage.version = newSemver;\n  }\n};\n\n// load persisted state\nconst currentVersion = \"0.2.1\"; // IMPORTANT\nexport const loadState = () => {\n  try {\n    if (!localStorage.version) throw new Error();\n\n    // avert breaking changes\n    modifyVersion(\"0.1.0\", \"0.2.0\", state => {\n      const epochms = new Date().getTime();\n      state.cards['main'] = { id:'main', content: 'Welcome', description: 'Welcome to your Zettelkasten! You can edit this and use `[[wikilink]]` syntax to link to other nodes.',\n      created: epochms, edited: epochms }\n      return state;\n    });\n    modifyVersion(\"0.2.0\", \"0.2.1\", state => {\n      for (const cardID in state.cards) {\n        const numCols = Object.values(state.columns).filter(col => col.items.indexOf(cardID) !== -1).length;\n        state.cards[cardID].type = numCols ? 0 : 1;\n      }\n      state.cards['main'].type = 1;\n      return state;\n    });\n\n    if (localStorage.hasOwnProperty('kanban'))\n      return JSON.parse(localStorage.kanban) || generateInitialState();\n\n  } catch (e) {}\n  return generateInitialState();\n}\n\nexport const saveState = state => {\n  try {\n    if (localStorage) {\n      const serialised = JSON.stringify(state);\n      localStorage.setItem(\"kanban\", serialised);\n      localStorage.setItem(\"version\", currentVersion);\n    }\n  } catch (e) {}\n}\n","\nexport { linkName, abbreviatedDescription, parseWikilinks, parseLaTeX } from './string';\nexport { mergeRefs, useHashLocation, useTitle, ReloadProtect, Hidden, RawHTMLElement, RawHTMLString } from './react';\nexport { prettyPrintDate, generateID, timeUrgencyClassName } from './time';\nexport { saveState, loadState } from '../backends';\n\n// Source: https://stackoverflow.com/a/14810722/4642943\n// returns a new object with the values at each key mapped using mapFn(value)\nexport const objectMap = (object, mapFn) =>\n  Object.keys(object).reduce(function(result, key) {\n    result[key] = mapFn(object[key])\n    return result\n  }, {});\n\n// Web: Download content as filename with specificed MIME type\nexport const downloadData = (content, filename, type) => {\n  if(!type) type = 'application/octet-stream';\n  const a = document.createElement('a');\n  const blob = new Blob([content], { type });\n  a.href = window.URL.createObjectURL(blob);\n  a.download = filename;\n  a.click();\n}\n\n// Simple card search; searches titles then descriptions then IDs for case insensitive exact matches\nexport const searchCards = (term, cards, limit=10) => {\n  let matches = [];\n  let tl = term.toLowerCase();\n  for (const cardID in cards) {\n    if (cards[cardID].content.toLowerCase().includes(tl)) {\n      matches.push(cardID);\n      if (matches.length === limit) return matches;\n    }\n  }\n  for (const cardID in cards) {\n    if (cards[cardID].description && cards[cardID].description.toLowerCase().includes(tl)) {\n      matches.push(cardID);\n      if (matches.length === limit) return matches;\n    }\n  }\n  for (const cardID in cards) {\n    if (cardID.toLowerCase().includes(tl)) {\n      matches.push(cardID);\n      if (matches.length === limit) return matches;\n    }\n  }\n  return matches;\n}\n","\nimport * as React from 'react';\nimport marked from 'marked';\nimport { RawHTMLString } from '../common';\n\nconst PrismMarked = React.lazy(() => import('./markdown-prism'));\n\nexport const MarkdownBase = ({ source, postprocess = x => x }) => {\n  try {\n    if (source.indexOf('```') !== -1) {\n      return (\n        <React.Suspense fallback={<span>Loading...</span>}>\n          <PrismMarked source={source} postprocess={postprocess} />\n        </React.Suspense>\n      );\n    } else {\n      // The RawHTMLString component internally uses DOMPurify to reduce the risk of XSS\n      return (\n        <RawHTMLString source={postprocess(marked(source, { gfm: true }))} className='markdown' />\n      );\n    }\n  } catch (e) {\n    return (\n      <span>\n        Sorry, an error occurred.\n        <br />\n        Try editing the note to ensure any LaTeX math equations and the Markdown syntax are valid.\n        <br />\n        Error: {e}\n      </span>\n    );\n  }\n}\n","\n// Popover menu (web)\nimport * as React from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\n\n\nexport default ({ map, children }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => setAnchorEl(null);\n\n  return (\n    <React.Fragment>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}>\n        {Object.entries(map).map(([name, func]) => (\n          <MenuItem key={name}\n            onClick={() => { handleClose(); func() }}>\n            {name}\n          </MenuItem>\n        ))}\n      </Menu>\n      {React.cloneElement(children, {\n        onClick: e => setAnchorEl(e.currentTarget)\n      })}\n    </React.Fragment>\n  );\n}\n","\n/**\n * TabView component\n *\n * <TabView\n *   tabs={[\"one\", \"two\", \"three\"]}\n *   render={i => (<SomeComponent index={i} />)}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { AppBar, Tabs, Tab, IconButton } from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport PopoverMenu from './popovermenu';\n\nconst TabPanel = ({ show, children }) => (\n  <div hidden={!show} style={{ height: 'calc(100% - 48px)' }}>\n    {show && children}\n  </div>\n);\n\nexport default ({\n  tabs, render, index, setIndex,\n  addTab, renameTab, deleteTab, moveTab\n}) => {\n  const handleChange = (event, newValue) => newValue >= 0 && newValue < tabs.length && setIndex(newValue);\n  const Grow = () => <div style={{ flexGrow: 1 }} />;\n\n  return (\n    <div style={{ flex: 1 }}>\n      <AppBar position=\"static\" style={{\n          backgroundColor: \"white\",\n          zIndex: 2, position: 'relative'\n        }}>\n        <Tabs value={index} onChange={handleChange}\n          indicatorColor=\"primary\" textColor=\"primary\">\n          {tabs.map(tab => (\n            <Tab label={tab} key={tab} />\n          ))}\n          <Grow />\n          <PopoverMenu map={{\n            \"Add tab\": () => addTab(),\n            \"Rename tab\": () => renameTab(index),\n            \"Delete tab\": () => deleteTab(index),\n            \"Move tab left\":  () => { moveTab([index, index-1]); handleChange(null, index-1) },\n            \"Move tab right\": () => { moveTab([index, index+1]); handleChange(null, index+1) },\n          }}>\n            <IconButton>\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n        </Tabs>\n      </AppBar>\n      {tabs.map((tab, i) => (\n        <TabPanel show={index === i} key={tab}>\n          {index === i && render(i)}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n","\n/**\n * Kanban boards core Redux logic\n *\n * State is normalised as { tabs, columns, cards }\n *  where each tab has several columns which contain cards\n *  each has a unique ID as a key in the respective object\n */\n\nimport { createReducer, createAction } from '@reduxjs/toolkit';\nimport undoable from 'redux-undo';\nimport { loadState, generateID, objectMap } from '../common';\n\n// Action creators\n\nexport const transferCard = createAction('kanban/TRANSFER_CARD');\nexport const reorderCard = createAction('kanban/REORDER_CARD');\nexport const addCard = createAction('kanban/ADD_CARD'); // takes { content, colID }\nexport const editCardContent = createAction('kanban/EDIT_CARD_CONTENT');//takes {content, cardID}\nexport const editCard = createAction('kanban/EDIT_CARD'); // takes a card object; allows editing all of a card's params\nexport const deleteCard = createAction('kanban/DELETE_CARD');//takes cardID\n\nexport const moveCard = ([srcColID, dstColID, srcIndex, dstIndex]) =>\n  srcColID === dstColID\n    ? reorderCard({ colID: srcColID, srcIndex, dstIndex })\n    : transferCard({ srcColID, dstColID, srcIndex, dstIndex });\n\nexport const addColumn = createAction('kanban/ADD_COLUMN'); // takes { name, tabID }\nexport const deleteColumn = createAction('kanban/DELETE_COLUMN'); // takes string column ID\nexport const renameColumn = createAction('kanban/RENAME_COLUMN'); // takes { colID, name }\nexport const moveColumn = createAction('kanban/MOVE_COLUMN'); // takes [srcIdx, dstIdx, tabIdx]\nexport const archiveCardsInColumn = createAction('kanban/ARCHIVE_ALL_COLUMN'); // takes colID\nexport const sortColByTime = createAction('kanban/SORT_COLUMN_BY_CARD_TIME_ATTRIBUTE');\n\nexport const addTab = createAction('kanban/ADD_TAB'); // takes name\nexport const deleteTab = createAction('kanban/DELETE_TAB'); // takes tabIdx\nexport const renameTab = createAction('kanban/RENAME_TAB'); // takes { tabID, name }\nexport const moveTab = createAction('kanban/MOVE_TAB'); // takes [srcIdx, dstIdx]\n\nexport const addZettel = createAction('zettelkasten/ADD_ZETTEL'); // takes { zettel: {...} }\nexport const editZettel = createAction('zettelkasten/EDIT_ZETTEL'); // takes { zettel }\nexport const deleteZettel = createAction('zettelkasten/DELETE_ZETTEL'); // takes zettelID\nexport const toggleZettelStarred = createAction('zettelkasten/TOGGLE_STARRED'); // takes zettelID\n\n// Helpers\n\n// const indexFromID = (list, id) => list.map(item => item.id === id).indexOf(true);\n// const deleteByID = (list, id) => list.splice(indexFromID(list, id), 1);\nconst deleteInList = (list, elem) => {\n  let index = list.indexOf(elem);\n  if (index !== -1) list.splice(index, 1); // undesired behaviour when splicing at (-1, 1)\n  return index !== -1;\n};\n\n// Selectors\n\nexport const selectors = {\n  // Map[TabID, Column], Column :: { id, items: List[Card] }, not List[CardID]\n  getColumnsInTabs: state =>\n    objectMap(state.tabs, tab =>\n      tab.columns.map(colID => state.columns[colID]).map(col => ({\n        ...col, items: col.items.map(card => state.cards[card])\n      }))),\n  columns: state => state.columns,\n  tabs: state => state.tabs,\n  tabOrder: state => state.tabOrder,\n  cards: state => state.cards,\n  archivedCards: state => Object.values(state.cards).filter(card => Object.keys(card).indexOf(\"archived\") !== -1),\n  activeCards:   state => Object.values(state.cards).filter(card => Object.keys(card).indexOf(\"archived\") === -1),\n  starredZettels: state => state.starredZettels ? state.starredZettels : [],\n  // gets { [tabID]: list_of_cardIDs }\n  cardsByTab: state => objectMap(state.tabs, tab =>\n    tab.columns.flatMap(colID => state.columns[colID].items)),\n};\n\n// Reducers\n\nexport const\n  KANBAN_CARD_TYPE = 0,\n  ZETTEL_NOTE_TYPE = 1;\n\nconst initialState = loadState();\n\nconst reducer = createReducer(initialState, {\n  [transferCard]: (s, a) => {\n    const { srcColID, dstColID, srcIndex, dstIndex } = a.payload;\n    let srcCol = s.columns[srcColID].items;\n    let dstCol = s.columns[dstColID].items;\n    const [removed] = srcCol.splice(srcIndex, 1);\n    const epochms = new Date().getTime();\n    s.cards[removed].moved = epochms;\n    s.columns[srcColID].edited = epochms;\n    s.columns[dstColID].edited = epochms;\n    dstCol.splice(dstIndex, 0, removed);\n  },\n  [reorderCard]: (s, a) => {\n    const { colID, srcIndex, dstIndex } = a.payload;\n    const epochms = new Date().getTime();\n    s.columns[colID].edited = epochms;\n    let newitems = s.columns[colID].items;\n    const [removed] = newitems.splice(srcIndex, 1);\n    s.cards[removed].moved = epochms;\n    newitems.splice(dstIndex, 0, removed);\n    s.columns[colID].items = newitems;\n  },\n  [addCard]: (s, a) => {\n    const { content, colID } = a.payload;\n    const id = generateID();\n    const epochms = new Date().getTime();\n    // add to cards list\n    s.cards[id] = { id, content, type: KANBAN_CARD_TYPE,\n      created: epochms,  edited: epochms, moved: epochms };\n    s.columns[colID].items.unshift(id); // add to top of column\n    s.columns[colID].edited = epochms;\n  },\n  [deleteColumn]: (s, a) => {\n    const colID = a.payload;\n    const tabIdx = Object.values(s.tabs).map(tab => tab.columns.indexOf(a.payload) !== -1).indexOf(true);\n    if (tabIdx >= 0) s.tabs[s.tabOrder[tabIdx]].edited = new Date().getTime();\n    s.columns[colID].items.forEach(cardID => delete s.cards[cardID]);\n    Object.values(s.tabs).forEach(tab => deleteInList(tab.columns, colID));\n    delete s.columns[colID];\n  },\n  [renameColumn]: (s, a) => {\n    const { colID, name } = a.payload;\n    s.columns[colID].name = name;\n    s.columns[colID].edited = new Date().getTime();\n  },\n  [editCardContent]: (s, a) => {\n    const { cardID, content } = a.payload;\n    s.cards[cardID].content = content;\n    s.cards[cardID].edited = new Date().getTime();\n  },\n  [deleteCard]: (s, a) => {\n    Object.values(s.columns).forEach(col => {\n      if (deleteInList(col.items, a.payload))\n        col.edited = new Date().getTime();\n    });\n    delete s.cards[a.payload];\n  },\n  [addColumn]: (s, a) => {\n    const { tabID, name } = a.payload;\n    const id = generateID();\n    const epochms = new Date().getTime();\n    s.columns[id] = { id, items: [], name, created: epochms, edited: epochms };\n    s.tabs[tabID].columns.push(id);\n    s.tabs[tabID].edited = epochms;\n  },\n  [editCard]: (s, a) => {\n    const { card, colID } = a.payload;\n    const epochms = new Date().getTime();\n    s.cards[card.id] = a.payload.card;\n    s.cards[card.id].edited = epochms;\n    const srcColID = Object.keys(s.columns).filter(colID => s.columns[colID].items.indexOf(card.id) !== -1)[0];\n    const dstColID = colID;\n    if (srcColID !== dstColID) {\n      deleteInList(s.columns[srcColID].items, card.id);\n      s.columns[dstColID].items.unshift(card.id);\n      s.columns[srcColID].edited = s.columns[dstColID].edited = epochms;\n    }\n  },\n  [deleteTab]: (s, a) => {\n    const tabIdx = a.payload;\n    const tab = s.tabs[s.tabOrder[tabIdx]];\n    while (tab.columns.length) {\n      const colID = tab.columns[0];\n      s.columns[colID].items.forEach(cardID => delete s.cards[cardID]);\n      delete s.columns[colID];\n      tab.columns.shift();\n    }\n    delete s.tabs[s.tabOrder[tabIdx]];\n    s.tabOrder.splice(tabIdx, 1);\n  },\n  [addTab]: (s, a) => {\n    const id = generateID();\n    const name = a.payload;\n    s.tabs[id] = { name, id, columns: [], created: new Date().getTime() };\n    s.tabOrder.push(id);\n  },\n  [renameTab]: (s, a) => {\n    const { tabID, name } = a.payload;\n    s.tabs[tabID].name = name;\n    s.tabs[tabID].edited = new Date().getTime();\n  },\n  [moveColumn]: (s, a) => {\n    const [srcIdx, dstIdx, tabIdx] = a.payload;\n    const tabID = s.tabOrder[tabIdx];\n    let newitems = s.tabs[tabID].columns;\n    const [removed] = newitems.splice(srcIdx, 1);\n    newitems.splice(dstIdx, 0, removed);\n    s.tabs[tabID].columns = newitems;\n    s.tabs[tabID].edited = new Date().getTime();\n  },\n  [moveTab]: (s, a) => {\n    const [srcIdx, dstIdx] = a.payload;\n    if (dstIdx < 0 || dstIdx >= s.tabs.length) return;\n    let newitems = s.tabOrder;\n    const [removed] = newitems.splice(srcIdx, 1);\n    newitems.splice(dstIdx, 0, removed);\n    s.tabOrder = newitems;\n  },\n  [archiveCardsInColumn]: (s, a) => {\n    // archived cards still exist in memory but are not listed in a column's items\n    const colID = a.payload;\n    const epochms = new Date().getTime();\n    s.columns[colID].items.forEach(cardID => {\n      let card = s.cards[cardID];\n      card.moved = card.edited = card.archived = epochms;\n      card.archivedFromColID = a.payload;\n    });\n    s.columns[colID].items = [];\n    s.columns[colID].edited = epochms;\n  },\n  [addZettel]: (s, a) => {\n    const { zettel } = a.payload;\n    const id = zettel.id || generateID();\n    const epochms = new Date().getTime();\n    s.cards[id] = { id, type: ZETTEL_NOTE_TYPE, created: epochms,  edited: epochms, moved: epochms,\n      ...zettel };\n  },\n  [editZettel]: (s, a) => {\n    const { zettel } = a.payload;\n    const epochms = new Date().getTime();\n    // editZettel does not add new zettels\n    if (Object.keys(s.cards).indexOf(zettel.id) === -1) return;\n    s.cards[zettel.id] = zettel;\n    s.cards[zettel.id].edited = epochms;\n  },\n  [deleteZettel]: (s, a) => {\n    // TODO: clean up links?\n    delete s.cards[a.payload];\n  },\n  [toggleZettelStarred]: (s, a) => {\n    if (!s.starredZettels) s.starredZettels = [];\n    if (s.starredZettels.indexOf(a.payload) === -1)\n      s.starredZettels.push(a.payload);\n    else\n      deleteInList(s.starredZettels, a.payload);\n  },\n  [sortColByTime]: (s, a) => {\n    // This sorts by epoch millisecond time; anything without a time is at the end in the same order\n    // As a bug meant card.time is sometimes a string, we must wrap in new Date(x).getTime() instead of just x\n    s.columns[a.payload].items.sort(\n      (a, b) => {\n        let aMS = new Date(s.cards[b].time || null).getTime();\n        let bMS = new Date(s.cards[a].time || null).getTime();\n        if (bMS === 0 && aMS === 0) return 0;\n        if (bMS === 0) return 1;\n        if (aMS === 0) return -1;\n        return bMS - aMS;\n    });\n  },\n});\n\nexport default undoable(reducer, {limit:20});\n","\nimport { configureStore } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport boards, { selectors as boardSelectors } from './ducks/kanban';\nimport { saveState, objectMap } from './common';\n\nconst store = configureStore({\n  reducer: boards,\n  middleware: getDefault => getDefault().concat(thunk),\n});\n\n// Undo/redo keyboard shortcuts if supported\ntry {\n  document.addEventListener('keyup', e => {\n    const ignored = ['input', 'textarea'];\n    if (ignored.indexOf(document.activeElement.tagName.toLowerCase()) !== -1) return;\n    if (e.ctrlKey && e.which === 90 && !e.shiftKey)\n      store.dispatch(UndoActionCreators.undo());\n    else if ((e.ctrlKey && e.shiftKey && e.which === 90) || (e.ctrlKey && e.which === 89))\n      store.dispatch(UndoActionCreators.redo());\n  });\n} catch (e) {}\n\nexport default store;\n\n// produce global selectors\nexport const globalSelectors = {\n  boards: state => state.present\n}\nexport const selectors = {\n  boards: objectMap(boardSelectors, localSelector => state => localSelector(globalSelectors.boards(state)))\n};\n\n// Save board state (excluding history)\n// to save history efficiently we would need to store a state 50 states ago, the 50 actions since,\n// and the current state; this would require a rewrite of redux-undo\nconst localStorageSubscriber = () => saveState(globalSelectors.boards(store.getState()));\nstore.subscribe(localStorageSubscriber);\nlocalStorageSubscriber(); // save data generated on first run\n","\nimport * as React from 'react';\nimport { parseWikilinks } from '../common';\nimport { MarkdownBase } from './markdown-base';\n\n// Dynamic import via webpack code splitting and React.lazy\nconst KaTeXMarkdown = React.lazy(() => import('./markdown-katex'));\n\n// Takes either a cards prop or a source prop\n// Parses wikilinks if the cards prop is present\n// Parses $$math$$ and syntax highlights ```js\\ncode\\n``` if present, lazy loading the relevant libraries\nexport default props => {\n  // Parse wikilinks if available\n  let source = props.cards ? parseWikilinks(props.source, props.cards) : props.source;\n\n  // Parse LaTeX formulae if present\n  // As KaTeX is 250kB minified we dynamically import it only if we need to\n  if (source.indexOf(\"$$\") === -1) {\n    return (\n      <MarkdownBase source={source} />\n    );\n  } else {\n    return (\n      <React.Suspense fallback={<span>Loading...</span>}>\n        <KaTeXMarkdown source={source} />\n      </React.Suspense>\n    );\n  }\n};\n","\nimport * as React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { Textcomplete } from '@textcomplete/core';\nimport { TextareaEditor } from '@textcomplete/textarea';\nimport { selectors } from '../store';\nimport { useSelector } from 'react-redux';\nimport { searchCards, linkName, generateID } from '../common';\n\n// If addNote is a function an 'Add note' option will appear\n// It inserts a link to a note with a generated ID, and invokes\n// addNote on the generated ID.\nexport default ({ value, setValue, autoFocus = false, addNote, rows, rowsMax }) => {\n\n  const inputRef = React.useRef(null);\n  const cards = useSelector(selectors.boards.cards);\n\n  React.useEffect(() => {\n    const editor = new TextareaEditor(inputRef.current);\n    const strategy = {\n      // String -> Bool -- whether to proceed to matching phase\n      context: beforeCursor => beforeCursor.indexOf('[[') >= 0,\n      match: /\\[\\[([A-Za-z0-9_ -]+)$/, // captures the X in \"abc [[X\"\n      // term is captured substring; can use async (t, cb) => cb(await something(term));\n      search: (term, callback /*, match*/) => callback([...searchCards(term, cards), 0]),\n      cache: true,\n      // these take the input to the search callback\n      template: cardID => cardID === 0 ? (addNote ? `<em>Add note</em>` : '') : linkName(cards[cardID]),\n      replace: cardID => {\n        if (cardID === 0 && addNote) {\n          const id = generateID();\n          // run addNote after replacing text\n          window.setTimeout(() => addNote(id), 0);\n          return `[[${id}]]`;\n        } else {\n          return `[[${cardID}]]`;\n        }\n      },\n    }\n    const options = {\n      dropdown: {\n        rotate: true, // this means vertical wrapping under up/down arrows\n        maxCount: 10,\n      }\n    };\n    const textcomplete = new Textcomplete(editor, [strategy], options);\n    // cleanup\n    return () => {\n      textcomplete.destroy();\n      delete window['__addNote']\n    }\n    // eslint-disable-next-line\n  }, []); // passing dependencies breaks it\n\n  return (\n    <TextField margin=\"dense\" fullWidth variant=\"outlined\" autoFocus={autoFocus}\n      multiline rows={rows} rowsMax={rowsMax} value={value} onChange={e => setValue(e.target.value)}\n      inputProps={{ ref: inputRef }} />\n  );\n};\n","\nimport * as React from 'react';\nimport Markdown from '../../components/markdown';\nimport { ClickAwayListener, InputLabel } from '@material-ui/core';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport { IndicatorBuilder, AttributeHeader } from '.';\nimport { selectors } from '../../store';\nimport AutocompleteEditor from '../../components/autocomplete-editor';\nimport { useSelector } from 'react-redux';\nimport { abbreviatedDescription } from '../../common';\n\nexport const Edit = ({ card, setCard }) => {\n  const [editingDescription, setEditingDescription] = React.useState(false);\n  const setDescription = description => setCard({...card,\n      description: description.length ? description : undefined});\n  const cards = useSelector(selectors.boards.cards);\n\n  if (!editingDescription && typeof card.description !== 'string')\n    return (\n      <AttributeHeader onClick={() => setEditingDescription(true)}>\n        Add description\n      </AttributeHeader>\n    );\n\n  return !editingDescription ? (\n    <div style={{marginTop: 8}}>\n      <div onClick={() => setEditingDescription(true)}>\n        <InputLabel className=\"custom-label\">Description</InputLabel>\n      </div>\n      <Markdown source={card.description} cards={cards} />\n    </div>\n  ) : (\n    <React.Fragment>\n      <InputLabel className=\"custom-label\">Description</InputLabel>\n      <ClickAwayListener onClickAway={() => setEditingDescription(false)}>\n        <div style={{width:'100%',height:'100%'}}>\n          <AutocompleteEditor value={card.description} setValue={setDescription}\n            autoFocus rows={6} rowsMax={24} />\n        </div>\n      </ClickAwayListener>\n    </React.Fragment>\n  );\n};\n\nexport const Indicator = ({ card }) => {\n  if (card.description) {\n    const title = abbreviatedDescription(card);\n    return <IndicatorBuilder label={null} title={title} icon={<NotesIcon />} />;\n  } else return null;\n};\n","\nimport * as React from 'react';\nimport { Button, InputLabel } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { format, startOfToday } from 'date-fns';\nimport { enAU } from 'date-fns/locale';\nimport { prettyPrintDate, timeUrgencyClassName } from '../../common';\nimport { IndicatorBuilder, AttributeHeader } from '.';\n\nenAU.weekStart = 1;\n\nexport const Edit = ({ card, setCard }) => {\n  const setDateTime = time => setCard({...card, time});\n\n  return card.time ? (\n    <div style={{marginTop: 10}}>\n      <InputLabel className=\"custom-label\">Date &amp; time</InputLabel>\n      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={enAU}>\n        <DateTimePicker\n          value={new Date(card.time)}\n          onChange={newDate => setDateTime(newDate.getTime())}\n          showTodayButton\n          format=\"MMMM do hh:mm aaa\" />\n      </MuiPickersUtilsProvider>\n      <Button color=\"primary\" variant=\"outlined\" style={{float:'right',marginTop:12}}\n        onClick={() => setDateTime(null)}>Reset date</Button>\n    </div>\n  ) : (\n    <AttributeHeader onClick={() => setDateTime(startOfToday().getTime())}>\n      Add date &amp; time\n    </AttributeHeader>\n  );\n};\n\nexport const Indicator = ({ card }) => {\n  if (card.time) {\n    return <IndicatorBuilder\n      icon={<AccessTimeIcon />}\n      label={prettyPrintDate(card.time)}\n      title={format(new Date(card.time), \"dd/MM/yyyy hh:mmaaa\")}\n      className={timeUrgencyClassName(new Date(card.time).getTime())}\n    />\n  } else return null;\n};\n","\n/**\n * Evidence Based Scheduling card attribute\n * See: https://www.joelonsoftware.com/2007/10/26/evidence-based-scheduling/\n */\n\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, TextField, FormControlLabel, Checkbox, InputLabel } from '@material-ui/core';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\n// import HourglassFullIcon from '@material-ui/icons/HourglassFull';\nimport { globalSelectors as sel } from '../../store';\nimport { IndicatorBuilder, AttributeHeader } from '.';\n\nexport const Edit = ({ card, setCard }) => {\n  // edit a subset of the EBS fields\n  const setEBS = ebsFields => setCard({...card, ebs: {...card.ebs, ...ebsFields}});\n  const [estStr, setEstStr] = React.useState(card.ebs ? prettySeconds(card.ebs.estimate) : \"\");\n  const [elapStr, setElapStr] = React.useState(card.ebs ? prettySeconds(card.ebs.elapsed) : \"\");\n\n  // list of EBS objects for all cards\n  const historical = useSelector(s => Object.values(sel.boards(s).cards)\n    .filter(card => Object.prototype.hasOwnProperty.call(card, 'ebs') && card.ebs !== null)\n    .filter(card => card.ebs.elapsed && card.ebs.estimate)\n    .map(card => card.ebs));\n\n  const setEBSEstimate = (str, exact = null) => {\n    setEstStr(str);\n    const estimate = unprettySeconds(str);\n    const optExact = exact !== null ? { exact } : {};\n    if (typeof estimate === \"number\")\n      setEBS({estimate, computed: computeEstimate(estimate, historical), ...optExact});\n  }\n  const setEBSElapsed = str => {\n    setElapStr(str);\n    const elapsed = unprettySeconds(str);\n    if (typeof elapsed === \"number\")\n      setEBS({elapsed});\n  }\n  const resetEBS = () => {\n    setEstStr(\"\");\n    setElapStr(\"\");\n    setCard({...card, ebs: null});\n  }\n\n  if (!card.ebs)\n    return (\n      <AttributeHeader onClick={() => setEBSEstimate('1h', true)}>\n        Add time estimate\n      </AttributeHeader>\n    );\n\n  // ebs :: { estimate :: seconds, computed :: seconds, elapsed :: seconds,\n  //   done :: boolean, exact :: boolean }\n  // estimate is user estimate, computed is a function of historical estimation accuracy\n  // and elapsed is current time spent on the task, and exact is whether the estimate is exact (eg duration)\n  // TODO: add timer feature or column powerup to automatically time\n\n  const getPrettyPredicted = () => prettySeconds(computeEstimate(unprettySeconds(estStr) || 0, historical));\n\n  // returns true iff the string is non-empty but in incorrect format (not HHhMMm like 1h30m)\n  const invalid = str => str !== \"\" && str !== null && unprettySeconds(str) === null;\n\n  return (\n    <div style={{marginTop: 10}}>\n      <InputLabel className=\"custom-label\">Time estimate</InputLabel>\n      <div style={{width: '30%',float:'left',marginRight:16}}>\n        <TextField label={`Estimate (predicted ${getPrettyPredicted()})`}\n          autoFocus\n          margin=\"dense\" fullWidth\n          value={estStr}\n          error={invalid(estStr)}\n          helperText={invalid(estStr) ? \"Example format: 1h30m\" : null}\n          onChange={e => setEBSEstimate(e.target.value)} />\n      </div>\n      <div style={{width: '30%',float:'left',marginRight:16}}>\n        <TextField label=\"Elapsed\"\n          margin=\"dense\" fullWidth\n          value={elapStr}\n          error={invalid(elapStr)}\n          helperText={invalid(elapStr) ? \"Example format: 1h30m\" : null}\n          onChange={e => setEBSElapsed(e.target.value)} />\n      </div>\n      <div style={{marginTop: 12, float:'left'}}>\n        <FormControlLabel label=\"Exact duration\" control={\n            <Checkbox color=\"primary\"\n              checked={Boolean(card.ebs.exact)} onChange={e => setEBS({ exact: e.target.checked })} />\n          }/>\n      </div>\n      <div style={{flexGrow:1}}></div>\n      <Button color=\"primary\" variant=\"outlined\" size='medium' style={{float:'right',marginTop:12}}\n        onClick={resetEBS}>Reset estimate</Button>\n    </div>\n  )\n};\n\n// historical :: List[{ estimate, computed, elapsed }]\nconst computeEstimate = (s, historical) => {\n  if (typeof s !== 'number') return s;\n\n  // Compute average ratio elapsed / estimated\n  let ratio = historical.reduce(\n    (acc, ebs) => acc + ebs.elapsed / ebs.estimate / historical.length\n    , 0);\n  // if few samples average with 1\n  if (!ratio) ratio = 1;\n  if (historical.length < 10) ratio = (ratio + 1) / 2;\n\n  // computes an estimate of the time given all of the cards' EBS values\n  const computed = s * ratio;\n\n  // round rough estimate to a reasonable level of precision\n  // nearest hr, 15min or 5min interval if that is the same level of precision as the input\n  const precisions = [3600, 60*15, 60*5];\n  for (let seconds of precisions) {\n    if (s % seconds === 0 && Math.abs(computed - s) > seconds / 2)\n      return seconds * Math.round(computed / seconds);\n  }\n  // otherwise nearest minute\n  return 60 * Math.round(computed / 60);\n};\n\n// Pretty print seconds in short form like 3600->1h, 6300->1h45m (no days or seconds)\nconst prettySeconds = s => {\n  if (typeof (s) === 'string') return s;\n  const hours = Math.floor(s / 3600);\n  const minutes = Math.floor((s % 3600) / 60);\n  if (hours === 0 && minutes === 0) return '0';\n  return (hours ? hours + 'h' : '') + (minutes ? minutes + 'm' : '');\n};\n\n// Inverse of prettySeconds; used so the input field can be edited in pretty form\nlet unprettySeconds = s => {\n  if (s === '0') return 0;\n\n  // this parses it to [x,'1h', '30m'] if possible, or [x,'1h',undefined] or [x,undefined,'30m']\n  // if only one is present, where x is irrelevant\n  let groups = (/^(\\d+h|\\d*\\.\\d+h)?(\\d+m|\\d*\\.\\d+m)?$/m).exec(s);\n\n  // check there are 3 matches where at least one of the latter two are defined\n  if (!groups || groups.length !== 3 || !groups.slice(1).filter(x=>x).length)\n    return null;\n  else groups = groups.slice(1);\n\n  const pf = k => parseFloat(k.substring(0, k.length-1)); // \"1.5h\" -> 1.5\n  return 3600*pf(groups[0] || '00') + 60*pf(groups[1] || '00');\n};\n\nexport const Indicator = ({ card }) => {\n  if (card.ebs) {\n    // display 'elapsed/computed' where the 'elapsed/' is only present if nonzero\n    // displays estimate instead of computed iff card.ebs.exact (checkbox ticked)\n    const label = (card.ebs.elapsed ? prettySeconds(card.ebs.elapsed) + '/' : \"\")\n      + prettySeconds(card.ebs.exact ? card.ebs.estimate : card.ebs.computed);\n    const elapsed = card.ebs.elapsed ? `Elapsed: ${prettySeconds(card.ebs.elapsed)}` : \"\";\n    const title = card.ebs.exact ?\n      `Duration: ${prettySeconds(card.ebs.estimate)}\\n${elapsed}` :\n      `Estimate: ${prettySeconds(card.ebs.estimate)}\\nComputed: ${prettySeconds(card.ebs.computed)}\\n${elapsed}`;\n    // const icon = card.ebs.done ? <HourglassEmptyIcon /> : <HourglassFullIcon />\n    const icon = <HourglassEmptyIcon />;\n    return <IndicatorBuilder label={label} title={title} icon={icon} />;\n  } else return null;\n};\n","\nimport * as React from 'react';\nimport { Chip, Button } from '@material-ui/core';\n\nimport * as Description from './description';\nimport * as DateTime from './datetime';\nimport * as EBS from './ebs';\nexport { Description, DateTime, EBS };\n\nexport const IndicatorBuilder = ({ icon, label, title, className }) =>\n  <Chip size='small' icon={icon}\n    label={label}\n    title={title}\n    classes={label && label.length ? null : { label: 'attribute-label' }}\n    className={'attribute-indicator ' + (className || \"\")}\n    variant='outlined' />;\n\nexport const AttributeHeader = props =>\n  <div className='attribute-header'>\n    <Button variant='outlined' color='primary' size='small' {...props} />\n  </div>;\n","\nimport * as React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n         TextField, InputLabel, Select, MenuItem,\n         ListSubheader } from '@material-ui/core';\nimport * as duck from '../ducks/kanban';\nimport { globalSelectors as sel, selectors } from '../store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Description, DateTime, EBS } from '../kanban/attributes';\nimport { ReloadProtect } from '../common';\n\nexport const ConfirmDialog = ({ open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"] }) => {\n  return (\n    <Dialog open={open} onClose={() => respond(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {subtitle}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => respond(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => respond(true)} color=\"primary\" variant=\"contained\" autoFocus>\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const PromptDialog = ({\n  open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"],\n  label, inputType = \"text\", placeholder = \"\", buttons = null\n}) => {\n  const [value, setValue] = React.useState(placeholder);\n  const done = x => { respond(x); setValue(placeholder) };\n  return (\n    <Dialog open={open} onClose={() => done(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        {typeof subtitle === \"string\" && (\n          <DialogContentText>\n            {subtitle}\n          </DialogContentText>\n        )}\n        <TextField autoFocus margin=\"dense\" fullWidth\n          label={label} type={inputType} value={value} onChange={e => setValue(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        {buttons}\n        <Button onClick={() => done(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => done(value)} color=\"primary\" variant=\"contained\">\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const CardEditDialog = ({ respond, card }) => {\n  const dispatch = useDispatch();\n\n  const currentColID = useSelector(state => Object.values(sel.boards(state).columns)\n      .filter(col => col.items.indexOf(card.id) !== -1)[0].id);\n\n  const [colID, setColID] = React.useState(currentColID);\n  const [newCard, setCard] = React.useState(card);\n  const setContent = content => setCard({...newCard, content});\n\n  const columns = useSelector(selectors.boards.columns);\n  const tabs = useSelector(selectors.boards.tabs);\n\n  const done = () => {\n    respond();\n    setContent(card.content);\n  }\n  // save and then delete so you can undo the delete without losing your unsaved draft of a card\n  const deleteCard = () => {\n    dispatch(duck.editCard({ card: newCard, colID }));\n    dispatch(duck.deleteCard(card.id));\n    done();\n  }\n  const editCard = () => {\n    dispatch(duck.editCard({ card: newCard, colID }));\n    done();\n  }\n\n  return (\n    <Dialog open onClose={() => done(null)} fullWidth maxWidth='md'\n      disableBackdropClick={JSON.stringify(newCard) !== JSON.stringify(card)}>\n      <ReloadProtect shouldProtect={JSON.stringify(newCard) !== JSON.stringify(card)} />\n      <DialogTitle>Edit card</DialogTitle>\n      <DialogContent>\n        <InputLabel id=\"kanban/card-column\" className=\"custom-label\">Column</InputLabel>\n        <Select labelId=\"kanban/card-column\" value={colID} onChange={e => setColID(e.target.value)}>\n          {Object.values(tabs).flatMap(tab => ([\n            // the subheader can be clicked so we add the following CSS hack (per mui#18200)\n            // .MuiListSubheader-root { pointer-events: none; }\n            <ListSubheader key={tab.id}>{tab.name}</ListSubheader>,\n            ...tab.columns.map(colID =>\n              <MenuItem value={colID} key={colID}>{columns[colID].name}</MenuItem>\n            )\n          ]))}\n        </Select>\n        <InputLabel id=\"kanban/card-title\" className=\"custom-label\">Title</InputLabel>\n        <TextField margin=\"dense\" autoFocus fullWidth\n          multiline rowsMax={3} value={newCard.content} onChange={e => setContent(e.target.value)} />\n        <Description.Edit card={newCard} setCard={setCard} />\n        <DateTime.Edit    card={newCard} setCard={setCard} />\n        <EBS.Edit         card={newCard} setCard={setCard} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={deleteCard}>Delete</Button>\n        <Button onClick={done} color=\"primary\">Cancel</Button>\n        <Button onClick={editCard} color=\"primary\" variant=\"contained\">OK</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const AboutDialog = ({ open, respond }) => {\n  return (\n    <Dialog open={open} onClose={respond} fullWidth>\n      <DialogTitle>About Mirror</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          A free and open source personal task management and note taking app.<br/>\n\n          Made by Oliver Balfour. &copy; 2020.<br/>\n\n          App icon is <a href=\"https://thenounproject.com/term/mirror/340140/\">Mirror</a>&nbsp;\n          by Lastspark from <a href=\"http://thenounproject.com/\">The Noun Project</a>.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={respond} color=\"primary\" variant=\"contained\" autoFocus>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","\n/**\n * MenuBar component\n *\n * <MenuBar active={0} setActive={...} />\n *  (active is index of current screen)\n *\n */\n\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Tabs, Tab } from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport PopoverMenu from './popovermenu';\nimport { downloadData } from '../common';\nimport { UndoRedo } from '../components';\nimport { AboutDialog } from './dialogs';\n\nexport default ({ active, setActive }) => {\n  const [aboutOpen, setAboutOpen] = React.useState(false);\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" style={{ top: 'auto', bottom: 0 }}>\n        <Toolbar style={{ minHeight: 0 }}>\n          <Tabs\n            value={active} onChange={(e, val) => setActive(val)}\n            TabIndicatorProps={{ style: { backgroundColor: 'white' } }}\n          >\n            <Tab label={<div><DeveloperBoardIcon style={{verticalAlign: 'middle'}} /> Boards</div>}  />\n            <Tab label={<div><NotesIcon style={{verticalAlign: 'middle'}} /> Notes</div>}  />\n          </Tabs>\n          <div style={{ flexGrow: 1 }} />\n          <UndoRedo />\n          <PopoverMenu map={{\n            // eslint-disable-next-line\n            \"Submit feedback\": () => window.open('mailto'+':oliver.'+'leo.balfour+mirrorsupport'+'@googlemail'+'.com', '_blank'),\n            \"About\": () => setAboutOpen(true),\n            \"Clear saved state\": () => window.prompt(\"Delete all saved state? Pressing undo will fix this. Type YES to confirm\", \"NO\") === \"YES\" && localStorage.clear(),\n            \"Import state\": () => { localStorage.kanban = window.prompt(\"Paste your exported state here. Press cancel (or the undo button after pressing OK) to revert. Refresh the page to confirm and reload state.\") },\n            \"Export state\": () => downloadData(localStorage.kanban, \"mirror-backup.json\", \"application/json\"),\n          }}>\n            <IconButton edge=\"end\" color=\"inherit\">\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n        </Toolbar>\n      </AppBar>\n      <AboutDialog open={aboutOpen} respond={() => setAboutOpen(false)} />\n    </React.Fragment>\n  );\n}\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport { ActionCreators } from 'redux-undo'\n\nexport default () => {\n  const dispatch = useDispatch();\n  return (\n    <React.Fragment>\n      <IconButton\n        onClick={() => dispatch(ActionCreators.undo())}\n        color=\"inherit\" edge=\"end\">\n        <UndoIcon />\n      </IconButton>\n      <IconButton\n        onClick={() => dispatch(ActionCreators.redo())}\n        color=\"inherit\" edge=\"end\">\n        <RedoIcon />\n      </IconButton>\n    </React.Fragment>\n  );\n};\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\n\nimport { IconButton } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport { PopoverMenu, ConfirmDialog, PromptDialog } from '../components';\n\n// header name, add button, chips for each addon (WIP limit, EBS time estimate, etc), menu button\nexport default ({ col, add, menu }) => {\n  const dispatch = useDispatch();\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => {\n    setConfirmOpen(false);\n    if (res) dispatch(duck.deleteColumn(col.id))\n  }\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = res => {\n    setPromptOpen(false);\n    if (typeof res === \"string\" && res.length)\n      dispatch(duck.renameColumn({ colID: col.id, name: res }));\n  }\n\n  const archiveAll = () => dispatch(duck.archiveCardsInColumn(col.id));\n\n  const dateTimeAttributeUsed = col.items.filter(card => ['string','number'].indexOf(typeof card.time) !== -1).length > 0;\n  const sortByDue = () => dispatch(duck.sortColByTime(col.id));\n\n  return (\n    <div>\n      <div className='columnHeaderContainer'>\n        <div className='columnHeaderText'>\n          {col.name}\n        </div>\n        <div>\n          {/*\n            // TODO: column powerup API with Chip indicators\n            <Chip size='small' label=\"0/6\" />\n            <Chip size='small' label=\"3h\" />\n          */}\n          <IconButton size='small' onClick={() => add()}>\n            <AddIcon />\n          </IconButton>\n          <PopoverMenu map={{\n            \"Archive all\": () => archiveAll(),\n            ...(dateTimeAttributeUsed ? {\n              \"Sort by due\": () => sortByDue(),\n            } : {}),\n            \"Rename\": () => setPromptOpen(true),\n            \"Delete\": () => setConfirmOpen(true),\n          }}>\n            <IconButton size='small'>\n              <MoreVertIcon />\n            </IconButton>\n          </PopoverMenu>\n        </div>\n      </div>\n      <hr className='columnHeaderRule' />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this column?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title={`Rename column \"${col.name}\"`} subtitle=\"Don't worry, this action can be undone.\"\n          label=\"Name\" placeholder={col.name} />\n      )}\n    </div>\n  );\n};\n","\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectors } from '../store';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Markdown } from '../components';\nimport { Description, DateTime, EBS } from './attributes';\n\nexport default React.memo(({ card, index, setEditingCard }) => {\n  const cards = useSelector(selectors.boards.cards);\n  if (!card) return null;\n  const { id, content } = card;\n\n  return (\n    <React.Fragment>\n      <Draggable draggableId={id} index={index}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={'card ' + (snapshot.isDragging ? \" draggingCard\" : \"\")}\n            style={provided.draggableProps.style}\n            onClick={() => setEditingCard(id)}>\n            <Markdown source={content} cards={cards} />\n            <Description.Indicator card={card} />\n            <DateTime.Indicator    card={card} />\n            <EBS.Indicator         card={card} />\n          </div>\n        )}\n      </Draggable>\n    </React.Fragment>\n  );\n});\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\nimport { Button, IconButton, ButtonGroup, TextField } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { mergeRefs } from '../common';\nimport ColumnHeader from './column-header';\nimport Card from './card';\n\nexport default React.memo(({ col, index, setEditingCard }) => {\n  const { id, items } = col;\n\n  const [editingNew, setEditingNew] = React.useState(false);\n  const [editingValue, setEditingValue] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const addCard = () => {\n    if (editingValue.length)\n      dispatch(duck.addCard({\n        content: editingValue,\n        colID: id\n      }));\n    setEditingValue(\"\");\n    setEditingNew(false);\n  };\n  const addButton = () => {\n    if (editingNew)\n      setEditingValue(\"\");\n    else\n      // scroll so that the add card section at the top is visible\n      scrollContainerRef.current.scrollTop = 0;\n    setEditingNew(!editingNew);\n  };\n  const scrollContainerRef = React.useRef(null);\n  const menuButton = () => {\n    console.log('pressed menu button');\n  };\n  const internals = (\n    <Droppable droppableId={id} className='card-droppable' type=\"card\" ignoreContainerClipping>\n      {(provided, snapshot) => (\n        <React.Fragment>\n          <div\n            className={'column-internals' + (snapshot.isDraggingOver ? ' dragging-over' : '')}\n            ref={mergeRefs(provided.innerRef, scrollContainerRef)}\n          >\n            {editingNew && (\n              <EditingCard value={editingValue} setValue={setEditingValue}\n                add={addCard} cancel={() => { setEditingValue(\"\"); setEditingNew(false) }} />\n            )}\n            {items.map((card, index) => card ? <Card card={card} index={index} key={card.id}\n              setEditingCard={setEditingCard} /> : null)}\n          </div>\n          {provided.placeholder}\n        </React.Fragment>\n      )}\n    </Droppable>\n  );\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided, snapshot) => (\n        <div ref={provided.innerRef}\n          {...provided.draggableProps}\n          className={\"columnContainer\" + (snapshot.isDragging ? \" draggingColumn\" : \"\")}\n          style={provided.draggableProps.style}>\n          <div className=\"column\">\n            <div {...provided.dragHandleProps}>\n              <ColumnHeader col={col} add={addButton} menu={menuButton} />\n            </div>\n            {internals}\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n});\n\nconst EditingCard = ({ value, setValue, add, cancel }) => {\n  React.useEffect(() => {\n    // Pressing ESC cancels editing a card\n    const cb = e => e.which === 27 && cancel();\n    document.addEventListener('keydown', cb);\n    return () => document.removeEventListener('keydown', cb);\n  });\n  return (\n    <div>\n      <TextField\n        label=\"New Card\"\n        multiline\n        autoFocus\n        rowsMax={6}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        variant=\"filled\"\n        style={{ width: \"100%\" }} />\n      <ButtonGroup variant=\"contained\" size='small' className='editingCardButtons'>\n        <Button style={{flexGrow: 1}} variant='contained' onClick={add}>\n          Done\n        </Button>\n        <Button onClick={cancel}><DeleteIcon style={{color: '#555'}} /></Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport const AddColumn = ({ add, hide }) => {\n  return (\n    <div className={'addColumnContainer' + (hide ? ' hidden' : '')}>\n      <div className='addColumn'>\n        <IconButton onClick={add}>\n          <AddIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\nimport { selectors } from '../store';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { PromptDialog, CardEditDialog } from '../components';\nimport { useHashLocation } from '../common';\nimport Column, { AddColumn } from './column';\nimport './index.scss';\n\nexport default ({ tabInfo }) => {\n  const tab = tabInfo.index;\n  const tabObj = tabInfo.tab;\n  const dispatch = useDispatch();\n\n  const tabOrder = useSelector(selectors.boards.tabOrder);\n  const columns = useSelector(selectors.boards.getColumnsInTabs)[tabOrder[tab]];\n  const tabs = useSelector(selectors.boards.tabs);\n  const cards = useSelector(selectors.boards.cards);\n  const colIDs = tabs[tabOrder[tab]].columns;\n\n  // dispatch move card action\n  const onDragEnd = res => {\n    if (!res.destination) return;\n    if (res.type === \"card\") {\n      dispatch(duck.moveCard([\n        res.source.droppableId, res.destination.droppableId,\n        res.source.index, res.destination.index\n      ]));\n    } else if (res.type === \"column\") {\n      dispatch(duck.moveColumn([\n        res.source.index, res.destination.index, tab\n      ]));\n    }\n  };\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = name => {\n    setPromptOpen(false);\n    if (typeof name === \"string\" && name.length)\n      dispatch(duck.addColumn({ tabID: tabObj.id, name }));\n  }\n\n  const [loc, setLoc] = useHashLocation();\n  // editing card if URL is /board/CARD_ID/edit\n  const editingCard = loc.split(\"/\")[4] === \"edit\" ? loc.split(\"/\")[3] : null;\n\n  const cardsByTab = useSelector(selectors.boards.cardsByTab);\n  const tabIDfromCardID = id => Object.keys(cardsByTab).filter(tabID => cardsByTab[tabID].indexOf(id) !== -1);\n  const setEditingCard = id => id\n    ? setLoc(`/boards/${tabs[tabIDfromCardID(id)].name.toLowerCase()}/${id}/edit`)\n    : setLoc(`/boards/${loc.split(\"/\")[2]}`);\n\n  return (\n    <div className='boardview-root'>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"default\" className='column-droppable' direction=\"horizontal\" type=\"column\">\n          {(provided, snapshot) => (\n            <React.Fragment>\n              <div className='root' ref={provided.innerRef}>\n                {colIDs.map((colID, i) => <Column col={columns[i]} key={colID} index={i}\n                  setEditingCard={setEditingCard} />)}\n                <AddColumn add={() => setPromptOpen(true)} hide={snapshot.isDraggingOver || snapshot.draggingFromThisWith} />\n              </div>\n              {provided.placeholder}\n            </React.Fragment>\n          )}\n        </Droppable>\n      </DragDropContext>\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title=\"Add column\" label=\"Name\" />\n      )}\n      {editingCard && cards.hasOwnProperty(editingCard) && (\n        <CardEditDialog respond={() => setEditingCard(null)} card={cards[editingCard]} />\n      )}\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TabView } from '../components';\nimport BoardView from './boardview';\nimport * as duck from '../ducks/kanban';\nimport { selectors } from '../store';\nimport { ConfirmDialog, PromptDialog } from '../components';\nimport { useHashLocation, useTitle } from '../common';\n\nexport default ({ active }) => {\n  const dispatch = useDispatch();\n  const [loc, setLoc] = useHashLocation();\n  // {id:{name, id, columns (ids)},...}\n  const tabs = useSelector(selectors.boards.tabs);\n  const tabOrder = useSelector(selectors.boards.tabOrder);\n  let currentTab = tabOrder.map(tabID => tabs[tabID].name.toLowerCase() === loc.split(\"/\")[2]).indexOf(true);\n  const setCurrentTab = num => setLoc(\"/boards/\"+tabs[tabOrder[num]].name.toLowerCase());\n  useTitle(() => active && currentTab >= 0 && tabs[tabOrder[currentTab]].name + \" | Mirror\");\n  if (currentTab < 0) currentTab = 0;\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => {\n    setConfirmOpen(false);\n    if (res) {\n      dispatch(duck.deleteTab(currentTab));\n      setCurrentTab(Math.max(0,currentTab-1));\n    }\n  }\n\n  const [addPromptOpen, setAddPromptOpen] = React.useState(false);\n  const addPromptRespond = res => {\n    setAddPromptOpen(false);\n    if (typeof res === \"string\" && res.length)\n      dispatch(duck.addTab(res));\n  }\n\n  const [renamePromptOpen, setRenamePromptOpen] = React.useState(false);\n  const renamePromptRespond = res => {\n    setRenamePromptOpen(false);\n    if (typeof res === \"string\" && res.length)\n      dispatch(duck.renameTab({ tabID: tabOrder[currentTab], name: res }));\n  }\n\n  return (\n    <React.Fragment>\n      <TabView\n        tabs={tabOrder.map(tabID => tabs[tabID].name)}\n        render={i => <BoardView tabInfo={{ tab: tabs[tabOrder[i]], index: i }} />}\n        addTab={() => setAddPromptOpen(true)}\n        renameTab={() => setRenamePromptOpen(true)}\n        deleteTab={() => Object.values(tabs).length > 1 ? setConfirmOpen(true) : alert(\"Cannot delete only tab\")}\n        moveTab={data => dispatch(duck.moveTab(data))}\n        index={currentTab} setIndex={setCurrentTab}\n      />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this tab?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {addPromptOpen && (\n        <PromptDialog open respond={addPromptRespond} title=\"Add tab\" label=\"Name\" />\n      )}\n      {renamePromptOpen && (\n        <PromptDialog open respond={renamePromptRespond}\n          title={`Rename tab ${tabs[tabOrder[currentTab]].name}`} label=\"Name\" />\n      )}\n    </React.Fragment>\n  );\n}\n","\nimport * as React from 'react';\nimport { useHashLocation, useTitle, generateID, ReloadProtect } from '../common';\nimport { selectors } from '../store';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Markdown, AutocompleteEditor } from '../components';\nimport {\n  TextField, Button, ButtonGroup,\n  // Drawer, List, Divider, ListItem, ListItemText\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport SearchIcon from '@material-ui/icons/Search';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport * as duck from '../ducks/kanban.js';\nimport './index.scss';\n\nexport default ({ active }) => {\n  const [loc, setLoc, setLocNoHist] = useHashLocation();\n  const dispatch = useDispatch();\n  const cards = useSelector(selectors.boards.cards);\n  const starred = useSelector(selectors.boards.starredZettels);\n\n  const currentCardID = loc.split('/')[2] || 'main'; //#/notes/ID\n  // const setCurrentCardID = id => setLoc(`/notes/${id}`);\n\n  const card = cards[currentCardID];\n  const [newCard, setNewCard] = React.useState({ ...card }); // assuming no deep nesting\n  useTitle(() => active && newCard.content + \" | Mirror\");\n  const setCard = part => setNewCard({ ...newCard, ...part });\n\n  if (typeof card !== 'object') return null;\n\n  const editing = loc.split('/')[3] === 'edit'; //#/notes/ID/edit\n  const setEditing = yes => yes\n    ? setLocNoHist(`/notes/${currentCardID}/edit`)\n    : setLocNoHist(`/notes/${currentCardID}`);\n  const cancelEditing = () => {\n    setEditing(false);\n    setNewCard({...card});\n  }\n\n  const deleteZettel = () => {\n    dispatch(duck.deleteCard(currentCardID));\n    setLocNoHist('/notes/main');\n  }\n  const saveZettel = zettel => {\n    dispatch(duck.editZettel({ zettel }));\n    setEditing(false);\n  }\n  const starZettel = () =>\n    dispatch(duck.toggleZettelStarred(currentCardID));\n\n  // update editing field on card change\n  if (card.id !== newCard.id) {\n    // We want to save the card if the 'Add note' button was pressed\n    // The only time a card is not saved is if you press cancel or delete\n    dispatch(duck.editZettel({ zettel: newCard }));\n    setNewCard({ ...card });\n  };\n\n  const addZettel = id => {\n    // create a new card and navigate to editing it\n    dispatch(duck.addZettel({ zettel: { content: 'New note', description: '...', id } }));\n    setLoc(`/notes/${id}/edit`);\n  };\n\n  const addNewNote = id => {\n    dispatch(duck.editZettel({ zettel: newCard }));\n    addZettel(id);\n  }\n\n  return (\n    // TODO: drawer\n    // Responsive: https://material-ui.com/components/drawers/#responsive-drawer\n    // Search bar: https://material-ui.com/components/text-fields/#icons\n    //   or https://material-ui.com/components/app-bar/#app-bar-with-a-primary-search-field\n    // Starred cards\n    // All notes button (navigate to #/notes/all and show a list of notes without contents)\n    <React.Fragment>\n      <ReloadProtect shouldProtect={JSON.stringify(newCard) !== JSON.stringify(card)} />\n      <div className='zettelContainer'>\n        {/*<Drawer\n          className='zettelDrawer'\n          variant=\"permanent\"\n          classes={{\n            paper: 'zettelDrawerPaper',\n          }}\n        >\n          <div className='zettelDrawerContainer'>\n            <List>\n              {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n            <Divider />\n            <List>\n              {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n          </div>\n        </Drawer>*/}\n        {editing && (\n          <div className='zettel'>\n            <TextField margin=\"dense\" autoFocus fullWidth\n              multiline rowsMax={3} value={newCard.content || ''} onChange={e => setCard({ content: e.target.value })} />\n            <AutocompleteEditor value={newCard.description || ''} setValue={description => setCard({ description })}\n              addNote={addNewNote} />\n            <div className='zettelEditingButtons'>\n              <Button onClick={cancelEditing} color=\"primary\">Cancel</Button>\n              <Button onClick={() => saveZettel(newCard)} color=\"primary\" variant=\"contained\">Save</Button>\n            </div>\n          </div>\n        )}\n        <div className={'zettel' + (editing ? ' notes-editing' : '')}>\n          <div className='zettelTitle'>\n            {(editing ? newCard.content : card.content) || ''}\n          </div>\n          <Markdown source={(editing ? newCard.description : card.description) || ''} cards={cards} />\n        </div>\n      </div>\n      <div className='zettelButtons' id='zettel-buttons-container'>\n        <ButtonGroup variant='contained' color='primary'>\n          {!editing && (\n            <Button onClick={() => setEditing(true)} title=\"Edit note\">\n              <EditIcon />\n            </Button>\n          )}\n          {card.id !== 'main' && (\n            <Button onClick={deleteZettel} title=\"Delete note\">\n              <DeleteIcon />\n            </Button>\n          )}\n          {!editing && (\n            <Button onClick={() => addZettel(generateID())} title=\"Add note\">\n              <AddIcon />\n            </Button>\n          )}\n          <Button onClick={() => alert('TODO')} title=\"Search notes\">\n            <SearchIcon />\n          </Button>\n          {starred.indexOf(card.id) === -1 ? (\n            <Button onClick={starZettel} title=\"Star this note\">\n              <StarBorderIcon />\n            </Button>\n          ) : (\n            <Button onClick={starZettel} title=\"Unstar this note\">\n              <StarIcon />\n            </Button>\n          )}\n        </ButtonGroup>\n      </div>\n    </React.Fragment>\n  );\n};\n","\n/**\n * app.js\n * Main JSX source file for the app\n * Details like screen size and renderer are abstracted away by index.[platform].js\n * and ../index.js\n */\n\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { useHashLocation, Hidden } from './common';\n// import { createMuiTheme, ThemeProvider } from '@material-ui/core';\n\nimport { MenuBar } from './components';\nimport Kanban from './kanban';\nimport Zettelkasten from './zettelkasten';\nimport store, { globalSelectors as sel } from './store';\n\nconst baseTabNames = [\"boards\", \"notes\"];\n// Get the nth segment of a slash separated list\nconst getURLPart = (str, n) =>\n  str.split(\"/\").filter(s=>s.length)[n < 0 ? str.length + n : n];\nconst getScreen = loc =>\n  Math.max(baseTabNames.indexOf(getURLPart(loc, 0)), 0);\nconst getScreenNames = () => {\n  let screenNames = [\"/boards/\", \"/notes/main\"];\n  // boards get special treatment of /boards/FIRST_TAB\n  const state = sel.boards(store.getState());\n  screenNames[0] += state.tabs[state.tabOrder[0]].name.toLowerCase();\n  return screenNames;\n}\n\nexport default () => {\n  const [loc, setLoc] = useHashLocation();\n  const [tabURLs, setTabURLs] = React.useState(getScreenNames());\n  const setTabURL = (newURL, i, move) => {\n    let newTabURLs = tabURLs.slice(0);\n    newTabURLs[i] = newURL;\n    setTabURLs(newTabURLs);\n    if (move) setLoc(newURL);\n  };\n  const active = getScreen(loc);\n  const setActive = n => {\n    if (n === active) {\n      // Return to the base page of this tab\n      setTabURL(\"/\" + baseTabNames[active], active, true);\n    } else {\n      // Save the current URL as the return URL for this tab\n      setTabURL(loc, active);\n      // Set the location to the saved URL for the new tab\n      setLoc(tabURLs[n]);\n    }\n  }\n\n  const style = { height: \"calc(100% - 48px)\" };\n\n  return (\n    <Provider store={store}>\n      <div id=\"jsx-root\">\n        <div style={style}>\n          <Hidden show={active === 0}>\n            <Kanban active={active === 0} />\n          </Hidden>\n          <Hidden show={active === 1}>\n            <Zettelkasten active={active === 1} />\n          </Hidden>\n        </div>\n        <MenuBar active={active} setActive={setActive} />\n      </div>\n    </Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Application from './app.js';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <Application/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://create-react-app.dev/docs/making-a-progressive-web-app/\nserviceWorker.unregister();\n"],"sourceRoot":""}