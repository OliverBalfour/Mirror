{"version":3,"sources":["web-build/register-service-worker.js","src/components/popovermenu.js","src/components/tabview.js","src/components/button.js","src/common/utils.js","src/components/menubar.js","src/components/undoredo.js","src/ducks/kanban.js","src/store.js","src/kanban/attributes/description.js","src/kanban/attributes/datetime.js","src/kanban/attributes/ebs.js","src/components/dialogs.js","src/kanban/boardview.js","src/kanban/index.js","src/app.js","index.js","src/index.web.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","map","children","React","anchorEl","setAnchorEl","handleClose","Menu","keepMounted","open","Boolean","onClose","Object","entries","name","func","MenuItem","key","onClick","e","currentTarget","TabPanel","show","hidden","style","height","tabs","render","index","setIndex","addTab","renameTab","deleteTab","moveTab","handleChange","event","newValue","length","flex","AppBar","position","backgroundColor","zIndex","Tabs","value","onChange","indicatorColor","textColor","tab","Tab","label","View","flexGrow","IconButton","i","makeStyles","theme","button","generateID","Math","random","toString","substring","dummyState","initial","id","colnums","colnames","numcards","reduce","a","b","cards","sampleCards","push","content","floor","columns","cnt","items","slice","card","dummyCols","colIDs","col","prettyPrintDate","epochMilliseconds","date","Date","now","time","getHours","getMinutes","fn","getTime","diff","getDate","active","setActive","Fragment","color","top","bottom","Toolbar","minHeight","edge","log","val","TabIndicatorProps","verticalAlign","filename","type","document","createElement","blob","Blob","href","URL","createObjectURL","download","click","downloadData","localStorage","kanban","prompt","clear","dispatch","useDispatch","ActionCreators","undo","redo","transferCard","createAction","reorderCard","addCard","editCardContent","editCard","deleteCard","addColumn","deleteColumn","renameColumn","moveColumn","archiveCardsInColumn","indexFromID","list","item","indexOf","deleteByID","splice","deleteInList","elem","selectors","getColumnsInTabs","state","_","archivedCards","filter","keys","activeCards","initialState","hasOwnProperty","JSON","parse","getItem","loadState","_deleteColumn","s","colIdx","forEach","cardID","reducer","createReducer","srcColIdx","payload","srcColID","dstColIdx","dstColID","srcCol","dstCol","srcIndex","removed","dstIndex","colID","newitems","unshift","tabID","srcIdx","dstIdx","tabIdx","archived","undoable","limit","combineReducers","boards","store","configureStore","ctrlKey","which","UndoActionCreators","shiftKey","localStorageSubscriber","serialised","stringify","setItem","saveState","getState","present","subscribe","object","mapFn","globalSelectors","boardSelectors","localSelector","result","Edit","setCard","editingDescription","setEditingDescription","ClickAwayListener","onClickAway","TextField","margin","autoFocus","fullWidth","variant","multiline","rows","rowsMax","description","target","undefined","marginTop","source","Indicator","title","split","join","Chip","size","icon","borderRadius","background","setDateTime","utils","DateFnsUtils","DateTimePicker","newDate","showTodayButton","format","Button","float","setEBS","ebsFields","ebs","prettySeconds","estimate","estStr","setEstStr","elapsed","elapStr","setElapStr","historical","useSelector","sel","setEBSEstimate","str","unprettySeconds","computed","computeEstimate","width","marginRight","setEBSElapsed","hours","minutes","h","parseFloat","isNaN","ConfirmDialog","respond","subtitle","labels","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","PromptDialog","inputType","placeholder","buttons","setValue","done","x","CardEditDialog","currentColID","setColID","newCard","setContent","labelIDs","maxWidth","InputLabel","Select","labelId","flatMap","ListSubheader","getColIdxByID","duck","useStyles","root","display","flexDirection","flexWrap","padding","fontSize","flexShrink","column","paddingBottom","border","transition","overflow","columnHeaderContainer","justifyContent","columnHeaderText","paddingLeft","columnHeaderRule","cardWidth","marginLeft","userSelect","boxShadow","draggingCard","opacity","columnContainer","draggingColumn","tabInfo","tabObj","styles","promptOpen","setPromptOpen","overflowX","onDragEnd","res","destination","droppableId","direction","provided","snapshot","className","ref","innerRef","add","hide","isDraggingOver","draggingFromThisWith","Column","editingNew","setEditingNew","editingValue","setEditingValue","addButton","menuButton","internals","ignoreContainerClipping","overflowY","cancel","draggableId","draggableProps","isDragging","dragHandleProps","menu","EditingCard","ButtonGroup","marginBottom","ColumnHeader","confirmOpen","setConfirmOpen","Card","AddColumn","alignItems","currentTab","setCurrentTab","addPromptOpen","setAddPromptOpen","renamePromptOpen","setRenamePromptOpen","alert","data","max","useState","Platform","OS","left","registerRootComponent","props"],"mappings":"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","file":"static/js/app.67d35072.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/Mirror/expo-service-worker.js', { scope: '/Mirror/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","\n// Popover menu (web)\nimport * as React from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\n\n\nexport default ({ map, children }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => setAnchorEl(null);\n\n  return (\n    <React.Fragment>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}>\n        {Object.entries(map).map(([name, func]) => (\n          <MenuItem key={name}\n            onClick={() => { handleClose(); func() }}>\n            {name}\n          </MenuItem>\n        ))}\n      </Menu>\n      {React.cloneElement(children, {\n        onClick: e => setAnchorEl(e.currentTarget)\n      })}\n    </React.Fragment>\n  );\n}\n","\n/**\n * TabView component\n *\n * <TabView\n *   tabs={[\"one\", \"two\", \"three\"]}\n *   render={i => (<SomeComponent index={i} />)}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { AppBar, Tabs, Tab, IconButton } from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport PopoverMenu from './popovermenu';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst TabPanel = ({ show, children }) => (\n  <div hidden={!show} style={{ height: 'calc(100% - 48px)' }}>\n    {show && children}\n  </div>\n);\n\nexport default ({\n  tabs, render, children, index, setIndex,\n  addTab, renameTab, deleteTab, moveTab\n}) => {\n  const handleChange = (event, newValue) => newValue >= 0 && newValue < tabs.length && setIndex(newValue);\n\n  return (\n    <div style={{ flex: 1 }}>\n      <AppBar position=\"static\" style={{\n          backgroundColor: \"white\",\n          zIndex: 2, position: 'relative'\n        }}>\n        <Tabs value={index} onChange={handleChange}\n          indicatorColor=\"primary\" textColor=\"primary\">\n          {tabs.map(tab => (\n            <Tab label={tab} key={tab} />\n          ))}\n          <View style={{flexGrow: 1}}></View>\n          <PopoverMenu map={{\n            \"Add tab\": () => addTab(),\n            \"Rename tab\": () => renameTab(index),\n            \"Delete tab\": () => deleteTab(index),\n            \"Move tab left\": () => (moveTab([index, index-1]), handleChange(null, index-1)),\n            \"Move tab right\": () => (moveTab([index, index+1]), handleChange(null, index+1)),\n          }}>\n            <IconButton>\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n          {children}\n        </Tabs>\n      </AppBar>\n      {tabs.map((tab, i) => (\n        <TabPanel show={index === i} key={tab}>\n          {index === i && render(i)}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({ button: {} }));\n\nexport default props => (\n  <Button className={useStyles().button} variant=\"contained\" color=\"primary\" {...props} />\n);\n","\nimport * as fn from 'date-fns';\n\nexport const generateID = () => Math.random().toString().substring(2);\n\n// generate { cards, columns } where each column has colnum[i] cards\n// both of these are objects where the keys are unique IDs\n// cards are { id, content } structs\n// todo: make them arrays containing their IDs and write selectors instead\n// columns are { id, items: [ id ] } structs\n// Example: {\n//   cards: [{ id: \"a\", content: \"Item 1\" }],\n//   columns: [{ id: \"b\", items: [\"a\"] }],\n//   tabs: [{ name: \"Main\", columns: [\"b\"] }]\n// }\nexport const dummyCols = (colnums, colnames) => {\n  let numcards = colnums.reduce((a, b) => a + b, 0);\n  let cards = [];\n  let sampleCards = [\n    \"Wash the dishes\",\n    \"Make cool app\",\n    \"Run out of ideas for sample tasks for the app you're making\",\n    \"Cook pizza for dinner\",\n    \"Finish your chemistry homework\",\n    \"Write a tutorial explaining how monads are isomorphic to burritos in the category of food\",\n    \"Forget to wrap a line at 300 characters\",\n    \"Learn Common Lisp\",\n    \"Do normal human things\",\n    \"Prove P=NP for N=1\",\n    \"Eat some chocolate\",\n    \"Stop eating so much chocolate\",\n    \"Write witty comment\",\n    \"🙂\"];\n  for (let i = 0; i < numcards; i++) {\n    let id = (i+1).toString() + \"-\" + generateID();\n    cards.push({ id, content: sampleCards[Math.floor(Math.random()*sampleCards.length)] });\n  }\n  let columns = [];\n  for (let i = 0, cnt = 0; i < colnums.length; i++) {\n    let items = cards.slice(cnt, cnt + colnums[i]).map(card => card.id);\n    let id = (i + 1).toString() + \"-\" + generateID();\n    columns.push({ id, items, name: colnames[i] });\n    cnt += colnums[i];\n  }\n  return { cards, columns };\n};\n\n// generate initial dummy state\nexport const dummyState = () => {\n  let initial = {\n    tabs: [{ name: \"Main\", id: generateID() }, { name: \"Secondary\", id: generateID() }],\n    ...dummyCols([9,2,6,5,4], [\"To Do\",\"Doing\",\"Done\",\"Misc 1\",\"Misc 2\"])\n  };\n  const colIDs = initial.columns.map(col => col.id);\n  initial.tabs[0].columns = [colIDs[0], colIDs[1], colIDs[2]];\n  initial.tabs[1].columns = [colIDs[3], colIDs[4]];\n  return initial;\n}\n\n// load persisted state\nexport const loadState = () => {\n  try {\n    // web\n    if (localStorage.hasOwnProperty(\"kanban\")) {\n      const state = JSON.parse(localStorage.getItem(\"kanban\"));\n      if (state !== null) return state;\n    } else return dummyState();\n  } catch (e) {\n    // native\n    return dummyState();\n  }\n}\n\nexport const saveState = state => {\n  try {\n    if (localStorage) {\n      const serialised = JSON.stringify(state);\n      localStorage.setItem(\"kanban\", serialised);\n    }\n  } catch (e) {}\n}\n\n// Source: https://stackoverflow.com/a/14810722/4642943\n// returns a new object with the values at each key mapped using mapFn(value)\nexport const objectMap = (object, mapFn) =>\n  Object.keys(object).reduce(function(result, key) {\n    result[key] = mapFn(object[key])\n    return result\n  }, {});\n\n/**\n * Returns a heavily abbreviated pretty printed date using date-fns\n * - Only includes time if within a week and not midnight\n * - Only includes minutes if nonzero\n * - Replaces date with \"Tomorrow\" or \"Next Fri\" for days within a fortnight\n */\nexport const prettyPrintDate = epochMilliseconds => {\n  const date = new Date(epochMilliseconds);\n  const now = new Date();\n\n  const getDate = date => {\n    const diff = fn.differenceInCalendarDays(date, now);\n    if (diff === 0) return \"Today\";\n    else if (diff === -1) return \"Yesterday\";\n    else if (diff === 1) return \"Tomorrow\";\n    else if (diff > 0 && diff < 7) return fn.format(date, \"EEE\"); // ex: Wed\n    // else if (diff < 14) return fn.format(date, \"EEE\") + \" Week\"; // ex: Fri Week\n    else if (diff > -7 && diff < 0) return \"Last \" + fn.format(date, \"EEE\"); // ex: Last Fri\n    return fn.format(date, \"MMM do\"); // ex: Sep 17th\n  }\n\n  const getTime = date => {\n    if (date.getHours() === 0 && date.getMinutes() === 0) return null; // ignore time if midnight\n    if (date.getMinutes() === 0) return fn.format(date, \"haaa\"); // ex: 4PM\n    return fn.format(date, \"h:mmaaa\");\n  }\n\n  const time = getTime(date);\n  return getDate(date) + (time ? \" \" + time : \"\");\n};\n\n// Download content as filename with specificed MIME type\nexport const downloadData = (content, filename, type) => {\n    if(!type) type = 'application/octet-stream';\n    const a = document.createElement('a');\n    const blob = new Blob([content], { type });\n    a.href = window.URL.createObjectURL(blob);\n    a.download = filename;\n    a.click();\n}\n","\n/**\n * MenuBar component\n *\n * <MenuBar active={0} setActive={...} />\n *  (active is index of current screen)\n *\n */\n\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Tabs, Tab } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport PopoverMenu from './popovermenu';\nimport { downloadData } from '../common/utils';\n\nexport default ({ active, setActive }) => {\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" style={{ top: 'auto', bottom: 0 }}>\n        <Toolbar style={{ minHeight: 0 }}>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => console.log(\"open menu\")}>\n            <MenuIcon />\n          </IconButton>\n          <Tabs\n            value={active} onChange={(e, val) => setActive(val)}\n            TabIndicatorProps={{ style: { backgroundColor: 'white' } }}\n          >\n            <Tab label={<div><DeveloperBoardIcon style={{verticalAlign: 'middle'}} /> Board</div>}  />\n            <Tab label={<div><NotesIcon style={{verticalAlign: 'middle'}} /> Notes</div>}  />\n          </Tabs>\n          <div style={{ flexGrow: 1 }} />\n          <PopoverMenu map={{\n            \"Export state\": () => downloadData(localStorage.kanban, \"mirror-backup.json\", \"application/json\"),\n            \"Import state\": () => { localStorage.kanban = window.prompt(\"Paste your exported state here. Press cancel (or the undo button after pressing OK) to revert. Refresh the page to confirm and reload state.\") },\n            \"Clear saved state\": () => window.prompt(\"Delete all saved state? Pressing undo will fix this. Type YES to confirm\", \"NO\") === \"YES\" && localStorage.clear(),\n          }}>\n            <IconButton edge=\"end\" color=\"inherit\">\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport { ActionCreators } from 'redux-undo'\n\nexport default () => {\n  const dispatch = useDispatch();\n  return (\n    <React.Fragment>\n      <IconButton onClick={() => dispatch(ActionCreators.undo())}>\n        <UndoIcon />\n      </IconButton>\n      <IconButton onClick={() => dispatch(ActionCreators.redo())}>\n        <RedoIcon />\n      </IconButton>\n    </React.Fragment>\n  );\n};\n","\n/**\n * Kanban boards core Redux logic\n *\n * State is normalised as { tabs, columns, cards }\n *  where each tab has several columns which contain cards\n *  each has a unique ID as a key in the respective object\n */\n\nimport { createReducer, createAction, createSelector } from '@reduxjs/toolkit';\nimport undoable from 'redux-undo';\nimport { loadState, generateID } from '../common/utils';\n\n// Action creators\n\nexport const transferCard = createAction('kanban/TRANSFER_CARD');\nexport const reorderCard = createAction('kanban/REORDER_CARD');\nexport const addCard = createAction('kanban/ADD_CARD'); // takes { content, colID }\nexport const editCardContent = createAction('kanban/EDIT_CARD_CONTENT');//takes {content, cardID}\nexport const editCard = createAction('kanban/EDIT_CARD'); // takes a card object; allows editing all of a card's params\nexport const deleteCard = createAction('kanban/DELETE_CARD');//takes cardID\n\nexport const moveCard = ([srcColID, dstColID, srcIndex, dstIndex]) =>\n  srcColID === dstColID\n    ? reorderCard({ colID: srcColID, srcIndex, dstIndex })\n    : transferCard({ srcColID, dstColID, srcIndex, dstIndex });\n\nexport const addColumn = createAction('kanban/ADD_COLUMN'); // takes { name, tabID }\nexport const deleteColumn = createAction('kanban/DELETE_COLUMN'); // takes string column ID\nexport const renameColumn = createAction('kanban/RENAME_COLUMN'); // takes { colID, name }\nexport const moveColumn = createAction('kanban/MOVE_COLUMN'); // takes [srcIdx, dstIdx, tabIdx]\nexport const archiveCardsInColumn = createAction('kanban/ARCHIVE_ALL_COLUMN'); // takes colID\n\nexport const addTab = createAction('kanban/ADD_TAB'); // takes name\nexport const deleteTab = createAction('kanban/DELETE_TAB'); // takes tabIdx\nexport const renameTab = createAction('kanban/RENAME_TAB'); // takes { tabID, name }\nexport const moveTab = createAction('kanban/MOVE_TAB'); // takes [srcIdx, dstIdx]\n\n// Helpers\n\nconst indexFromID = (list, id) => list.map(item => item.id === id).indexOf(true);\nconst deleteByID = (list, id) => list.splice(indexFromID(list, id), 1);\nconst deleteInList = (list, elem) => {\n  let index = list.indexOf(elem);\n  if (index !== -1) list.splice(index, 1); // undesired behaviour when splicing at (-1, 1)\n};\n\n// Selectors\n\nexport const selectors = {\n  // higher order function which creates a selector for a specific tab\n  // it un-normalises the state for that tab, returning:\n  // return :: List[column], column :: { id, items: List[card] }, card :: { id, content }\n  getColumnsInTabs: state =>\n    state.tabs.map((_, tab) => state.tabs[tab].columns.map(col => state.columns[indexFromID(state.columns, col)])\n      .map(col => ({\n        ...col, items: col.items.map(card => state.cards[indexFromID(state.cards, card)])\n      }))),\n  columns: state => state.columns,\n  tabs: state => state.tabs,\n  cards: state => state.cards,\n  archivedCards: state => state.cards.filter(card => Object.keys(card).indexOf(\"archived\") !== -1),\n  activeCards:   state => state.cards.filter(card => Object.keys(card).indexOf(\"archived\") === -1),\n};\n\n// Reducers\n\nconst initialState = loadState();\n\nconst _deleteColumn = (s, id) => {\n  const colIdx = indexFromID(s.columns, id);\n  s.columns[colIdx].items.forEach(cardID => deleteByID(s.cards, cardID));\n  s.tabs.forEach(tab => deleteInList(tab.columns, id));\n  deleteByID(s.columns, id);\n};\n\nconst reducer = createReducer(initialState, {\n  [transferCard]: (s, a) => {\n    const srcColIdx = indexFromID(s.columns, a.payload.srcColID);\n    const dstColIdx = indexFromID(s.columns, a.payload.dstColID);\n\n    let srcCol = s.columns[srcColIdx].items;\n    let dstCol = s.columns[dstColIdx].items;\n    const [removed] = srcCol.splice(a.payload.srcIndex, 1);\n    dstCol.splice(a.payload.dstIndex, 0, removed);\n  },\n  [reorderCard]: (s, a) => {\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    let newitems = s.columns[colIdx].items;\n    const [removed] = newitems.splice(a.payload.srcIndex, 1);\n    newitems.splice(a.payload.dstIndex, 0, removed);\n    s.columns[colIdx].items = newitems;\n  },\n  [addCard]: (s, a) => {\n    const { content, colID } = a.payload;\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    const cardID = generateID();\n    s.cards.push({ id: cardID, content });   // add to cards list\n    s.columns[colIdx].items.unshift(cardID); // add to top of column\n  },\n  [deleteColumn]: (s, a) => {\n    _deleteColumn(s, a.payload);\n  },\n  [renameColumn]: (s, a) => {\n    s.columns[indexFromID(s.columns, a.payload.colID)].name = a.payload.name;\n  },\n  [editCardContent]: (s, a) => {\n    s.cards[indexFromID(s.cards, a.payload.cardID)].content = a.payload.content;\n  },\n  [deleteCard]: (s, a) => {\n    const cardIdx = indexFromID(s.cards, a.payload);\n    s.columns.forEach(col => deleteInList(col.items, a.payload));\n    deleteByID(s.cards, a.payload);\n  },\n  [addColumn]: (s, a) => {\n    const id = generateID();\n    s.columns.push({ id, items: [], name: a.payload.name });\n    s.tabs[indexFromID(s.tabs, a.payload.tabID)].columns.push(id);\n  },\n  [editCard]: (s, a) => {\n    s.cards[indexFromID(s.cards, a.payload.card.id)] = a.payload.card;\n    const srcColIdx = s.columns.map(col => col.items.indexOf(a.payload.card.id) !== -1).indexOf(true);\n    const dstColIdx = indexFromID(s.columns, a.payload.colID);\n    if (srcColIdx !== dstColIdx) {\n      deleteInList(s.columns[srcColIdx].items, a.payload.card.id);\n      s.columns[dstColIdx].items.unshift(a.payload.card.id);\n    }\n  },\n  [deleteTab]: (s, a) => {\n    while (s.tabs[a.payload].columns.length)\n      _deleteColumn(s, s.tabs[a.payload].columns[0]);\n    s.tabs.splice(a.payload, 1);\n  },\n  [addTab]: (s, a) => {\n    s.tabs.push({ name: a.payload, id: generateID(), columns: [] });\n  },\n  [renameTab]: (s, a) => {\n    s.tabs[indexFromID(s.tabs, a.payload.tabID)].name = a.payload.name;\n  },\n  [moveColumn]: (s, a) => {\n    const [srcIdx, dstIdx, tabIdx] = a.payload;\n    let newitems = s.tabs[tabIdx].columns;\n    const [removed] = newitems.splice(srcIdx, 1);\n    newitems.splice(dstIdx, 0, removed);\n    s.tabs[tabIdx].columns = newitems;\n  },\n  [moveTab]: (s, a) => {\n    const [srcIdx, dstIdx] = a.payload;\n    if (dstIdx < 0 || dstIdx >= s.tabs.length) return;\n    let newitems = s.tabs;\n    const [removed] = newitems.splice(srcIdx, 1);\n    newitems.splice(dstIdx, 0, removed);\n    s.tabs = newitems;\n  },\n  [archiveCardsInColumn]: (s, a) => {\n    // archived cards still exist in memory but are not listed in a column's items\n    // they do have a archived: {date, colID} field added however for future use\n    const colIdx = indexFromID(s.columns, a.payload);\n    s.columns[colIdx].items.forEach(cardID => {\n      let card = s.cards[indexFromID(s.cards, cardID)];\n      card.archived = { date: new Date().getTime(), colID: a.payload };\n    });\n    s.columns[colIdx].items = [];\n  },\n});\n\nexport default undoable(reducer, {limit:50});\n","\nimport { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport boards, { selectors as boardSelectors } from './ducks/kanban';\nimport { saveState, objectMap } from './common/utils';\n\nconst reducer = combineReducers({\n  boards,\n  // notes,\n});\n\nconst store = configureStore({ reducer });\n\n// Undo/redo keyboard shortcuts if supported\ntry {\n  document.addEventListener('keyup', e => {\n    if (e.ctrlKey && e.which === 90)\n      store.dispatch(UndoActionCreators.undo());\n    else if (e.ctrlKey && e.shiftKey && e.which === 90 || e.ctrlKey && e.which === 89)\n      store.dispatch(UndoActionCreators.redo());\n  });\n} catch (e) {}\n\n// Save board state (excluding history)\n// TODO: how can we include history? We cannot serialise all state easily with our combineReducers\n// approach unfortunately\nconst localStorageSubscriber = () => saveState(store.getState().boards.present);\nstore.subscribe(localStorageSubscriber);\nlocalStorageSubscriber(); // save data generated on first run\n\nexport default store;\n\n// produce global selectors\nexport const globalSelectors = {\n  boards: state => state.boards.present\n}\nexport const selectors = {\n  boards: objectMap(boardSelectors, localSelector => state => localSelector(globalSelectors.boards(state)))\n};\n","\nimport * as React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { ClickAwayListener, TextField, Chip } from '@material-ui/core';\nimport NotesIcon from '@material-ui/icons/Notes';\n\nexport const Edit = ({ card, setCard }) => {\n  const [editingDescription, setEditingDescription] = React.useState(false);\n  const setDescription = description => setCard({...card,\n      description: description.length ? description : undefined});\n\n  return !editingDescription ? (\n    <div onClick={() => setEditingDescription(true)} style={{marginTop: 8}}>\n      <span style={{color: 'grey'}}>Description</span>\n      <ReactMarkdown source={card.description} />\n    </div>\n  ) : (\n    <ClickAwayListener onClickAway={() => setEditingDescription(false)}>\n      <TextField label=\"Description\" margin=\"dense\" autoFocus fullWidth variant=\"outlined\"\n        multiline rows={6} rowsMax={16} value={card.description} onChange={e => setDescription(e.target.value)} />\n    </ClickAwayListener>\n  );\n};\n\nexport const Indicator = ({ card }) => {\n  if (card.description) {\n    const limit = 500; // crop after this with ellisis\n    const title = card.description.split(\"\\n\\n\").join(\"\\n\").substring(0, limit);\n      + (card.description.length > limit ? \"...\" : \"\");\n\n    return <Chip size='small' icon={<NotesIcon />}\n      label=\"\"\n      style={{ borderRadius: 3, background: 'white' }}\n      title={title}\n      variant=\"outlined\" />\n  } else return null;\n};\n","\nimport * as React from 'react';\nimport { Button, Chip } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { format } from 'date-fns';\nimport { prettyPrintDate } from '../../common/utils';\n\nexport const Edit = ({ card, setCard }) => {\n  const setDateTime = time => setCard({...card, time});\n\n  return card.time ? (\n    <div style={{marginTop: 10}}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <DateTimePicker\n          value={new Date(card.time)}\n          onChange={newDate => setDateTime(newDate.getTime())}\n          label=\"Due date / event time\"\n          showTodayButton\n          format=\"MMMM do hh:mm aaa\"\n        />\n    </MuiPickersUtilsProvider>\n    <Button color=\"primary\" variant=\"outlined\" style={{float:'right',marginTop:12}} onClick={() => setDateTime(null)}>Reset date</Button>\n    </div>\n  ) : (\n    <><span style={{color: 'grey'}} onClick={() => setDateTime(new Date().getTime())}>Due date / event time</span><br/></>\n  );\n};\n\nexport const Indicator = ({ card }) => {\n  if (card.time) {\n    return <Chip size='small' icon={<AccessTimeIcon />}\n      label={prettyPrintDate(card.time)}\n      title={format(new Date(card.time), \"dd/MM/yyyy hh:mmaaa\")}\n      style={{ borderRadius: 3, background: 'white' }}\n      variant=\"outlined\" />\n  } else return null;\n};\n","\n/**\n * Evidence Based Scheduling card attribute\n * See: https://www.joelonsoftware.com/2007/10/26/evidence-based-scheduling/\n */\n\n\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, Chip, TextField } from '@material-ui/core';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport HourglassFullIcon from '@material-ui/icons/HourglassFull';\nimport { globalSelectors as sel } from '../../store';\n\nexport const Edit = ({ card, setCard }) => {\n  // edit a subset of the EBS fields\n  const setEBS = ebsFields => setCard({...card, ebs: {...card.ebs, ...ebsFields}});\n  const [estStr, setEstStr] = React.useState(card.ebs ? prettySeconds(card.ebs.estimate) : \"\");\n  const [elapStr, setElapStr] = React.useState(card.ebs ? prettySeconds(card.ebs.elapsed) : \"\");\n\n  // list of EBS objects for all cards\n  const historical = useSelector(s => sel.boards(s).cards\n    .filter(card => card.hasOwnProperty('ebs'))\n    .map(card => card.ebs));\n\n  const setEBSEstimate = str => {\n    setEstStr(str);\n    const estimate = unprettySeconds(str);\n    if (typeof estimate === \"number\")\n      setEBS({estimate, computed: computeEstimate(estimate, historical)});\n  }\n  const setEBSElapsed = str => {\n    setElapStr(str);\n    const elapsed = unprettySeconds(str);\n    if (typeof elapsed === \"number\")\n      setEBS({elapsed});\n  }\n  const resetEBS = () => (setEstStr(\"\"), setElapStr(\"\"), setCard({...card, ebs: null}));\n\n  if (!card.ebs)\n    return (\n      <React.Fragment>\n        <span style={{color: 'grey'}} onClick={() => setEBSEstimate('1h')}>\n        Time estimate</span>\n      <br/></React.Fragment>\n    );\n\n  // ebs :: { estimate :: seconds, computed :: seconds, elapsed :: seconds, done :: boolean }\n  // estimate is user estimate, computed is a function of historical estimation accuracy\n  // and elapsed is current time spent on the task\n  // TODO: add timer feature or column powerup to automatically time\n\n  const getPrettyPredicted = () => prettySeconds(computeEstimate(unprettySeconds(estStr) || 0, historical));\n\n  return (\n    <div style={{marginTop: 10}}>\n      <div style={{width: '30%',float:'left',marginRight:10}}>\n        <TextField label={`Estimate (predicted ${getPrettyPredicted()})`}\n          margin=\"dense\" autoFocus fullWidth\n          value={estStr}\n          onChange={e => setEBSEstimate(e.target.value)} />\n      </div>\n      <div style={{width: '30%',float:'left'}}>\n        <TextField label=\"Elapsed\"\n          margin=\"dense\" fullWidth\n          value={elapStr}\n          onChange={e => setEBSElapsed(e.target.value)} />\n      </div>\n      <div style={{flexGrow:1}}></div>\n      <Button color=\"primary\" variant=\"outlined\" size='medium' style={{float:'right',marginTop:12}}\n        onClick={resetEBS}>Reset estimate</Button>\n    </div>\n  )\n};\n\n// historical :: List[{ estimate, computed, elapsed }]\nconst computeEstimate = (s, historical) => {\n  if (typeof s !== 'number') return s;\n  // computes an estimate of the time given all of the cards' EBS values\n  return s / 0.8; // assume you estimate 80% of the actual time\n};\n\n// Pretty print seconds in short form like 3600->1h, 6300->1h45m (no days or seconds)\nconst prettySeconds = s => {\n  if (typeof (s) === 'string') return s;\n  const hours = Math.floor(s / 3600);\n  const minutes = Math.floor((s % 3600) / 60);\n  if (hours === 0 && minutes === 0) return '0';\n  return (hours ? hours + 'h' : '') + (minutes ? minutes + 'm' : '');\n};\n\n// Inverse of prettySeconds; used so the input field can be edited in pretty form\nconst unprettySeconds = s => {\n  if (s === '0') return 0;\n  const h = s.indexOf('h');\n  if (h > 0) {\n    const hours = parseFloat(s.substring(0, h));\n    if (h + 1 == s.length) return hours * 3600; // no minutes\n    if (s[s.length-1] !== 'm') return null; // last char should be 'm'\n    const minutes = parseFloat(s.substring(h + 1, s.length - 1))\n    return hours * 3600 + minutes * 60;\n  }\n  const minutes = parseFloat(s.substring(0, s.length - 1));\n  if (!isNaN(minutes)) return 60*minutes;\n  return null; // invalid; return source string\n};\n\nexport const Indicator = ({ card }) => {\n  if (card.ebs) {\n    const label = (card.ebs.elapsed ? prettySeconds(card.ebs.elapsed) + '/' : \"\")\n      + prettySeconds(card.ebs.computed); // displays computed estimate, not user's estimate\n    const elapsed = card.ebs.elapsed ? `Elapsed: ${prettySeconds(card.ebs.elapsed)}` : \"\";\n    const title = `Estimate: ${prettySeconds(card.ebs.estimate)}\\nComputed: ${prettySeconds(card.ebs.computed)}\\n${elapsed}`;\n    // const icon = card.ebs.done ? <HourglassEmptyIcon /> : <HourglassFullIcon />\n    const icon = <HourglassEmptyIcon />;\n    return <Chip size='small' icon={icon}\n      label={label}\n      title={title}\n      style={{ borderRadius: 3, background: 'white' }}\n      variant=\"outlined\" />\n  } else return null;\n};\n","\nimport * as React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n         TextField, InputLabel, Select, MenuItem,\n         ListSubheader } from '@material-ui/core';\nimport * as duck from '../ducks/kanban';\nimport { globalSelectors as sel, selectors } from '../store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { generateID } from '../common/utils';\nimport * as Description from '../kanban/attributes/description';\nimport * as DateTime from '../kanban/attributes/datetime';\nimport * as EBS from '../kanban/attributes/ebs';\n\n// TODO: can we have a promise API for generating dialogs on the fly and getting their results?\n// This method means the user has to manage 'open' state\nexport const ConfirmDialog = ({ open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"] }) => {\n  return (\n    <Dialog open={open} onClose={() => respond(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {subtitle}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => respond(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => respond(true)} color=\"primary\" variant=\"contained\" autoFocus>\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const PromptDialog = ({\n  open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"],\n  label, inputType = \"text\", placeholder = \"\", buttons = null\n}) => {\n  const [value, setValue] = React.useState(placeholder);\n  const done = x => { respond(x); setValue(placeholder) };\n  return (\n    <Dialog open={open} onClose={() => done(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        {typeof subtitle === \"string\" && (\n          <DialogContentText>\n            {subtitle}\n          </DialogContentText>\n        )}\n        <TextField autoFocus margin=\"dense\" fullWidth\n          label={label} type={inputType} value={value} onChange={e => setValue(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        {buttons}\n        <Button onClick={() => done(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => done(value)} color=\"primary\" variant=\"contained\">\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const CardEditDialog = ({ respond, card }) => {\n  const dispatch = useDispatch();\n\n  const currentColID = useSelector(state => sel.boards(state).columns\n      .filter(col => col.items.indexOf(card.id) !== -1)[0].id);\n\n  const [colID, setColID] = React.useState(currentColID);\n  const [newCard, setCard] = React.useState(card);\n  const setContent = content => setCard({...newCard, content});\n\n  const columns = [...useSelector(selectors.boards.columns)];\n  const tabs = useSelector(selectors.boards.tabs);\n  const getTabIdxByColID = colID => tabs.map(tab => tab.columns.indexOf(colID) !== -1).indexOf(true);\n  const getColIdxByID = colID => columns.map(col => col.id === colID).indexOf(true);\n\n  const done = () => (respond(), setContent(card.content));\n  // save and then delete so you can undo the delete without losing your unsaved draft of a card\n  const deleteCard = () => (dispatch(duck.editCard({ card: newCard, colID })), dispatch(duck.deleteCard(card.id)), done());\n  const editCard = () => (dispatch(duck.editCard({ card: newCard, colID })), done());\n\n  const labelIDs = [generateID()];\n  return (\n    <Dialog open onClose={() => done(null)} fullWidth maxWidth='md'>\n      <DialogTitle>Edit card</DialogTitle>\n      <DialogContent>\n        <InputLabel id={labelIDs[0]}>Column</InputLabel>\n        <Select labelId={labelIDs[0]} value={colID} onChange={e => setColID(e.target.value)}>\n          {tabs.flatMap(tab => ([\n            // the subheader can be clicked so we add the following CSS hack (per mui#18200)\n            // .MuiListSubheader-root { pointer-events: none; }\n            <ListSubheader key={tab.id}>{tab.name}</ListSubheader>,\n            ...tab.columns.map(colID => {\n              const col = columns[getColIdxByID(colID)];\n              return (<MenuItem value={colID} key={colID}>{col.name}</MenuItem>);\n            })\n          ]))}\n        </Select>\n\n        <TextField label=\"Title\" margin=\"dense\" autoFocus fullWidth variant=\"filled\"\n          multiline rowsMax={3} value={newCard.content} onChange={e => setContent(e.target.value)} />\n        <Description.Edit card={newCard} setCard={setCard} />\n        <DateTime.Edit    card={newCard} setCard={setCard} />\n        <EBS.Edit         card={newCard} setCard={setCard} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={deleteCard}>Delete</Button>\n        <Button onClick={done} color=\"primary\">Cancel</Button>\n        <Button onClick={editCard} color=\"primary\" variant=\"contained\">OK</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","\n/**\n * BoardView component\n *\n * <BoardView\n *   tab={tabIndex}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\nimport { selectors } from '../store';\nimport { View, Text } from 'react-native';\nimport { makeStyles, Button, IconButton, ButtonGroup, TextField, Chip } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { PopoverMenu, ConfirmDialog, PromptDialog, CardEditDialog } from '../components';\nimport ReactMarkdown from 'react-markdown';\nimport * as Description from './attributes/description';\nimport * as DateTime from './attributes/datetime';\nimport * as EBS from './attributes/ebs';\n\nconst grid = 8;\nconst cardWidth = 300;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    padding: grid,\n    fontSize: \"14px\",\n    \"& *\": {flexShrink: 0}\n  },\n  column: {\n    background: '#DFEEEE',\n    padding: grid,\n    paddingBottom: 24,\n    width: cardWidth,\n    border: '1px solid #CCDCDC',\n    borderRadius: 5,\n    margin: grid,\n    transition: \"border 0.2s\",\n\n    // TODO: install react-custom-scrollbars and use this instead with autohide\n    // there is a bug where moving cards to the tallest column leads to a scrollbar flashing up\n    // and we don't want the scrollbar to take up horizontal space and force the cards to reflow\n\n    height: 'calc(100vh - 160px)',\n    overflow: 'hidden'\n  },\n  columnHeaderContainer: {\n    padding: \"8 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  columnHeaderText: {\n    paddingLeft: 8,\n    paddingBottom: 0,\n    fontSize: '1.4em'\n  },\n  columnHeaderRule: {\n    overflow: \"hidden\",\n    border: \"none\",\n    color: \"#CCDCDC\",\n    backgroundColor: \"#CCDCDC\",\n    height: \"1px\",\n    width: cardWidth + grid * 2 + 1, //+1 is border\n    marginLeft: -(grid+1)\n  },\n  card: {\n    userSelect: 'none',\n    padding: \"10px 13px\",\n    margin: `0 0 ${grid}px 0`,\n    background: 'white',\n    borderRadius: 5,\n    transition: \"opacity 0.3s\",\n    overflow: 'hidden',\n    \"&:hover, &:focus\": {\n      boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n    },\n    \"&>p\": {\n      margin: 0\n    }\n  },\n  draggingCard: {\n    opacity: 0.7,\n    boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n  },\n  columnContainer: {\n    transition: \"opacity 0.6s\",\n  },\n  draggingColumn: {\n    opacity: 0.7,\n  },\n}));\n\nexport default ({ tabInfo }) => {\n  const tab = tabInfo.index;\n  const tabObj = tabInfo.tab;\n  const dispatch = useDispatch();\n  const styles = useStyles();\n\n  const columns = useSelector(selectors.boards.getColumnsInTabs)[tab];\n\n  // dispatch move card action\n  const onDragEnd = res => {\n    if (!res.destination) return;\n    if (res.type === \"card\") {\n      dispatch(duck.moveCard([\n        res.source.droppableId, res.destination.droppableId,\n        res.source.index, res.destination.index\n      ]));\n    } else if (res.type === \"column\") {\n      dispatch(duck.moveColumn([\n        res.source.index, res.destination.index, tab\n      ]));\n    }\n  };\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = name => setPromptOpen(false) ||\n    typeof name === \"string\" && name.length &&\n      dispatch(duck.addColumn({ tabID: tabObj.id, name }));\n\n  return (\n    <View style={{ width: '100vw', overflowX: 'auto', height: '100%' }}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"default\" style={{ flexGrow: 1, height: \"100%\" }} direction=\"horizontal\" type=\"column\">\n          {(provided, snapshot) => (\n            <React.Fragment>\n              <div className={styles.root} ref={provided.innerRef}>\n                {columns.map((col, i) => <Column col={col} styles={styles} key={col.id} index={i} />)}\n                <AddColumn styles={styles} add={() => setPromptOpen(true)} hide={snapshot.isDraggingOver || snapshot.draggingFromThisWith} />\n              </div>\n              {provided.placeholder}\n            </React.Fragment>\n          )}\n        </Droppable>\n      </DragDropContext>\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title=\"Add column\" label=\"Name\" />\n      )}\n    </View>\n  );\n}\n\nconst Column = ({ styles, col, index }) => {\n  const { id, items, name } = col;\n\n  const [editingNew, setEditingNew] = React.useState(false);\n  const [editingValue, setEditingValue] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const addCard = () => {\n    if (editingValue.length)\n      dispatch(duck.addCard({\n        content: editingValue,\n        colID: id\n      }));\n    setEditingValue(\"\");\n    setEditingNew(false);\n  };\n  const addButton = () => {\n    if (editingNew)\n      setEditingValue(\"\");\n    setEditingNew(!editingNew);\n  };\n  const menuButton = () => {\n    console.log('pressed menu button');\n  };\n\n  const internals = (\n    <Droppable droppableId={id} style={{ flexGrow: 1, height: \"100%\" }} type=\"card\" ignoreContainerClipping>\n      {(provided, snapshot) => (\n        <React.Fragment>\n          <div style={{\n              width: cardWidth, overflowY: 'auto', overflowX: 'hidden',\n              // 1) height is -20px to avoid bottom being clipped off\n              // 2) 100px padding and -100px height while dragging to give a 100px buffer of\n              // droppable space to avoid glitching due to dynamic resizing while moving\n              // cards to the bottom\n              height: snapshot.isDraggingOver ? \"calc(100% - 120px)\" : \"calc(100% - 20px)\",\n              paddingBottom: snapshot.isDraggingOver ? 100 : 0\n            }} ref={provided.innerRef}>\n            {editingNew && (\n              <EditingCard value={editingValue} setValue={setEditingValue}\n                add={addCard} cancel={() => { setEditingValue(\"\"); setEditingNew(false) }} />\n            )}\n            {items.map((card, index) => <Card card={card} styles={styles} index={index} key={card.id} />)}\n          </div>\n          {provided.placeholder}\n        </React.Fragment>\n      )}\n    </Droppable>\n  );\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided, snapshot) => (\n        <div ref={provided.innerRef}\n          {...provided.draggableProps}\n          className={styles.columnContainer + (snapshot.isDragging ? \" \"+styles.draggingColumn : \"\")}\n          style={provided.draggableProps.style}>\n          <div className={styles.column}>\n            <div {...provided.dragHandleProps}>\n              <ColumnHeader styles={styles} col={col} add={addButton} menu={menuButton} />\n            </div>\n            {internals}\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n}\n\nconst EditingCard = ({ value, setValue, add, cancel }) => {\n  return (\n    <div>\n      <TextField\n        label=\"New Card\"\n        multiline\n        rowsMax={6}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        variant=\"filled\"\n        style={{ width: \"100%\" }} />\n      <ButtonGroup variant=\"contained\" size='small'\n        style={{marginBottom: 8, boxShadow: \"0px 4px 2px -2px rgba(0,0,0,0.15)\", width: \"100%\"}}>\n        <Button style={{flexGrow: 1}} variant='contained' onClick={add}>\n          Done\n        </Button>\n        <Button onClick={cancel}><DeleteIcon style={{color: '#555'}} /></Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\n// header name, add button, chips for each addon (WIP limit, EBS time estimate, etc), menu button\nconst ColumnHeader = ({ styles, col, add, menu }) => {\n  const dispatch = useDispatch();\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => setConfirmOpen(false) ||\n    res && dispatch(duck.deleteColumn(col.id));\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = res => setPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.renameColumn({ colID: col.id, name: res }));\n\n  const archiveAll = () => dispatch(duck.archiveCardsInColumn(col.id));\n\n  return (\n    <div>\n      <div className={styles.columnHeaderContainer}>\n        <div className={styles.columnHeaderText}>\n          {col.name}\n        </div>\n        <div>\n          <Chip size='small' label=\"0/6\" />\n          <Chip size='small' label=\"3h\" />\n          <IconButton size='small' onClick={() => add()}>\n            <AddIcon />\n          </IconButton>\n          <PopoverMenu map={{\n            \"Archive all\": () => archiveAll(),\n            \"Rename\": () => setPromptOpen(true),\n            \"Delete\": () => setConfirmOpen(true),\n          }}>\n            <IconButton size='small'>\n              <MoreVertIcon />\n            </IconButton>\n          </PopoverMenu>\n        </div>\n      </div>\n      <hr className={styles.columnHeaderRule} />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this column?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title={`Rename column \"${col.name}\"`} subtitle=\"Don't worry, this action can be undone.\"\n          label=\"Name\" placeholder={col.name} />\n      )}\n    </div>\n  );\n};\n\nconst Card = ({ card, styles, index }) => {\n  const { id, content } = card;\n  const dispatch = useDispatch();\n  const [promptOpen, setPromptOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Draggable draggableId={id} index={index}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={styles.card + (snapshot.isDragging ? \" \"+styles.draggingCard : \"\")}\n            style={provided.draggableProps.style}\n            onClick={() => setPromptOpen(true)}>\n            <ReactMarkdown source={content} />\n            <Description.Indicator card={card} />\n            <DateTime.Indicator    card={card} />\n            <EBS.Indicator         card={card} />\n          </div>\n        )}\n      </Draggable>\n      {promptOpen && (\n        <CardEditDialog respond={() => setPromptOpen(false)} card={card} />\n      )}\n    </React.Fragment>\n  );\n}\n\nconst AddColumn = ({ styles, add, hide }) => {\n  return (\n    <div className={styles.column} style={{\n        width: cardWidth, display: 'flex', justifyContent: 'center',\n        alignItems: 'center', height: '100px',\n        marginLeft: hide ? cardWidth + 5*grid + 2 : grid\n      }}>\n      <IconButton onClick={add}>\n        <AddIcon />\n      </IconButton>\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TabView, UndoRedo } from '../components';\nimport BoardView from './boardview';\nimport * as duck from '../ducks/kanban';\nimport { selectors } from '../store';\nimport { PopoverMenu, ConfirmDialog, PromptDialog } from '../components';\n\n// TODO: tabview should not handle tab no state\n\nexport default () => {\n  const dispatch = useDispatch();\n  const [currentTab, setCurrentTab] = React.useState(0);\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => setConfirmOpen(false) ||\n    res && (dispatch(duck.deleteTab(currentTab)), setCurrentTab(Math.max(0,currentTab-1)));\n\n  const [addPromptOpen, setAddPromptOpen] = React.useState(false);\n  const addPromptRespond = res => setAddPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.addTab(res));\n\n  const [renamePromptOpen, setRenamePromptOpen] = React.useState(false);\n  const renamePromptRespond = res => setRenamePromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.renameTab({ tabID: tabs[currentTab].id, name: res }));\n\n  // [{name, id, columns (ids)},...]\n  const tabs = useSelector(selectors.boards.tabs);\n  return (\n    <React.Fragment>\n      <TabView\n        tabs={tabs.map(tab => tab.name)}\n        render={i => <BoardView tabInfo={{ tab: tabs[i], index: i }} />}\n        addTab={() => setAddPromptOpen(true)}\n        renameTab={() => setRenamePromptOpen(true)}\n        deleteTab={() => tabs.length > 1 ? setConfirmOpen(true) : alert(\"Cannot delete only tab\")}\n        moveTab={data => dispatch(duck.moveTab(data))}\n        children={<UndoRedo />}\n        index={currentTab} setIndex={setCurrentTab}\n      />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this tab?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {addPromptOpen && (\n        <PromptDialog open respond={addPromptRespond} title=\"Add tab\" label=\"Name\" />\n      )}\n      {renamePromptOpen && (\n        <PromptDialog open respond={renamePromptRespond}\n          title={`Rename tab ${tabs[currentTab].name}`} label=\"Name\" />\n      )}\n    </React.Fragment>\n  );\n}\n","\n/**\n * app.js\n * Main JSX source file for the app\n * Details like screen size and renderer are abstracted away by index.[platform].js\n * and ../index.js\n */\n\nimport React from 'react';\nimport { StyleSheet, Text, View, Platform } from 'react-native';\nimport { Provider } from 'react-redux';\n\nimport { Button, MenuBar } from './components';\nimport Kanban from './kanban';\nimport store from './store';\n\nexport default () => {\n  const [active, setActive] = React.useState(0);\n  const style = Platform.OS === \"web\"\n    ? { height: \"calc(100% - 48px)\" }\n    : { flexGrow: 1 };\n\n  return (\n    <Provider store={store}>\n      <View style={{ top: 0, left: 0, height: \"100%\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n\n        <View style={style}>\n          { active === 0 && (\n            <Kanban />\n          )}\n        </View>\n\n        <MenuBar active={active} setActive={setActive} />\n\n      </View>\n    </Provider>\n  );\n}\n","\nimport { registerRootComponent } from 'expo';\n\nimport Application from './src/index';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(Application);\n","\n/**\n * index.web.js\n * Simple Application wrapper that implements web-specific functionality\n */\n\nimport React from 'react';\nimport Application from './app';\n\nexport default props => (\n  <Application style={{ top: 0, left: 0, height: \"100%\", width: \"100%\" }} />\n);\n"],"sourceRoot":""}