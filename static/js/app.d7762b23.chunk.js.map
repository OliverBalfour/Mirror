{"version":3,"sources":["web-build/register-service-worker.js","src/common/utils.js","src/components/popovermenu.js","src/components/tabview.js","src/components/button.js","src/ducks/kanban.js","src/store.js","src/components/markdown.js","src/kanban/attributes/description.js","src/kanban/attributes/datetime.js","src/kanban/attributes/ebs.js","src/kanban/attributes/index.js","src/components/dialogs.js","src/components/menubar.js","src/components/undoredo.js","src/kanban/boardview.js","src/kanban/index.js","src/zettelkasten/index.js","src/app.js","index.js","src/index.web.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","__lastGeneratedID","generateID","format","newID","fn","Date","substring","length","parseInt","dummyState","epochms","getTime","ids","initial","tabs","name","id","created","edited","colnums","colnames","numcards","reduce","a","b","cards","sampleCards","i","content","Math","floor","random","moved","columns","cnt","items","Object","keys","slice","dummyCols","colIDs","tabOrder","description","objectMap","object","mapFn","result","key","prettyPrintDate","epochMilliseconds","date","now","time","getHours","getMinutes","diff","getDate","currentLoc","location","hash","replace","useHashLocation","React","loc","setLoc","handler","removeEventListener","to","linkName","card","firstLine","split","map","children","anchorEl","setAnchorEl","handleClose","Menu","keepMounted","open","Boolean","onClose","entries","func","MenuItem","onClick","e","currentTarget","TabPanel","show","hidden","style","height","render","index","setIndex","addTab","renameTab","deleteTab","moveTab","handleChange","event","newValue","flex","AppBar","position","backgroundColor","zIndex","Tabs","value","onChange","indicatorColor","textColor","tab","Tab","label","View","flexGrow","IconButton","makeStyles","theme","button","transferCard","createAction","reorderCard","addCard","editCardContent","editCard","deleteCard","addColumn","deleteColumn","renameColumn","moveColumn","archiveCardsInColumn","addZettel","editZettel","deleteZettel","deleteInList","list","elem","indexOf","splice","selectors","getColumnsInTabs","state","colID","col","archivedCards","values","filter","activeCards","initialState","localStorage","version","Error","oldSemver","newSemver","mutation","JSON","parse","kanban","stringify","modifyVersion","hasOwnProperty","loadState","reducer","createReducer","s","payload","srcColID","dstColID","srcIndex","dstIndex","srcCol","dstCol","removed","newitems","unshift","tabIdx","forEach","cardID","tabID","push","shift","srcIdx","dstIdx","archived","archivedFromColID","zettel","undoable","limit","store","configureStore","boards","document","activeElement","tagName","toLowerCase","ctrlKey","which","shiftKey","dispatch","UndoActionCreators","undo","redo","globalSelectors","present","boardSelectors","localSelector","localStorageSubscriber","serialised","setItem","saveState","getState","subscribe","props","source","m","prefix","regex","exec","lastIndex","parseable","match","parseWikilinks","escapeHtml","Edit","setCard","editingDescription","setEditingDescription","useSelector","InputLabel","className","ClickAwayListener","onClickAway","TextField","margin","autoFocus","fullWidth","variant","multiline","rows","rowsMax","target","undefined","marginTop","Indicator","title","join","icon","setDateTime","utils","DateFnsUtils","DateTimePicker","newDate","showTodayButton","Button","color","float","setEBS","ebsFields","ebs","prettySeconds","estimate","estStr","setEstStr","elapsed","elapStr","setElapStr","historical","sel","setEBSEstimate","str","unprettySeconds","computed","computeEstimate","invalid","width","marginRight","helperText","setEBSElapsed","FormControlLabel","control","Checkbox","checked","exact","size","ratio","acc","seconds","abs","round","hours","minutes","groups","x","pf","k","parseFloat","useStyles","padding","header","marginBottom","IndicatorBuilder","Chip","classes","borderRadius","background","AttributeHeader","ConfirmDialog","respond","subtitle","labels","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","PromptDialog","inputType","placeholder","buttons","setValue","done","type","CardEditDialog","newCard","onbeforeunload","useDispatch","currentColID","setColID","setContent","maxWidth","disableBackdropClick","Select","labelId","flatMap","ListSubheader","duck","AboutDialog","href","active","setActive","useState","aboutOpen","setAboutOpen","Fragment","top","bottom","Toolbar","minHeight","edge","log","val","TabIndicatorProps","verticalAlign","prompt","clear","filename","createElement","blob","Blob","URL","createObjectURL","download","click","downloadData","ActionCreators","root","display","flexDirection","flexWrap","fontSize","flexShrink","column","paddingBottom","border","transition","overflow","addColumnContainer","cardWidth","justifyContent","alignItems","columnHeaderContainer","columnHeaderText","paddingLeft","fontWeight","columnHeaderRule","marginLeft","userSelect","boxShadow","draggingCard","opacity","columnContainer","draggingColumn","tabInfo","tabObj","styles","promptOpen","setPromptOpen","overflowX","onDragEnd","res","destination","droppableId","direction","provided","snapshot","ref","innerRef","add","hide","isDraggingOver","draggingFromThisWith","Column","editingNew","setEditingNew","editingValue","setEditingValue","addButton","menuButton","internals","ignoreContainerClipping","overflowY","cancel","draggableId","draggableProps","isDragging","dragHandleProps","menu","EditingCard","ButtonGroup","ColumnHeader","confirmOpen","setConfirmOpen","Card","tabName","yes","AddColumn","currentTab","setCurrentTab","num","addPromptOpen","setAddPromptOpen","renamePromptOpen","setRenamePromptOpen","alert","data","max","currentCardID","editing","setEditing","setDescription","saveZettel","setTimeout","container","left","right","paddingTop","zettelTitle","textAlign","editingButtons","Zettel","screenNames","getScreen","Platform","OS","n","getScreenName","registerRootComponent"],"mappings":"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","file":"static/js/app.d7762b23.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/Mirror/expo-service-worker.js', { scope: '/Mirror/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","\nimport * as fn from 'date-fns';\nimport * as React from 'react';\n\nlet __lastGeneratedID = null;\nexport const generateID = () => {\n  const format = \"yyyyMMdd-hhmmss\";\n  let newID = fn.format(new Date(), format);\n  // if we generate multiple IDs in one second, we add \"-n\" where n is 1,2,...\n  // the only time this causes collisions is if you add a card, refresh, add a card within 1s\n  if (__lastGeneratedID !== null && __lastGeneratedID.substring(0, format.length) === newID) {\n    if (__lastGeneratedID.length === format.length) newID += \"-1\";\n    else newID += '-' + (parseInt(__lastGeneratedID.substring(format.length + 1, __lastGeneratedID.length)) + 1)\n  }\n  __lastGeneratedID = newID;\n  return newID;\n}\n\n// generate { cards, columns } where each column has colnum[i] cards\n// both of these are objects where the keys are unique IDs\n// cards are { id, content } structs\n// todo: make them arrays containing their IDs and write selectors instead\n// columns are { id, items: [ id ] } structs\n// Example: {\n//   cards: [{ id: \"a\", content: \"Item 1\" }],\n//   columns: [{ id: \"b\", items: [\"a\"] }],\n//   tabs: [{ name: \"Main\", columns: [\"b\"] }]\n// }\nexport const dummyCols = (colnums, colnames) => {\n  let numcards = colnums.reduce((a, b) => a + b, 0);\n  let cards = {};\n  let sampleCards = [\n    \"Wash the dishes\",\n    \"Make cool app\",\n    \"Run out of ideas for sample tasks for the app you're making\",\n    \"Cook pizza for dinner\",\n    \"Finish your chemistry homework\",\n    \"Write a tutorial explaining how monads are isomorphic to burritos in the category of food\",\n    \"Forget to wrap a line at 300 characters\",\n    \"Learn Common Lisp\",\n    \"Do normal human things\",\n    \"Prove P=NP for N=1\",\n    \"Eat some chocolate\",\n    \"Stop eating so much chocolate\",\n    \"Write witty comment\",\n    \"🙂\"];\n  const epochms = new Date().getTime();\n  for (let i = 0; i < numcards; i++) {\n    let id = generateID();\n    cards[id] = { id, content: sampleCards[Math.floor(Math.random()*sampleCards.length)],\n      created: epochms, edited: epochms, moved: epochms };\n  }\n  let columns = {};\n  for (let i = 0, cnt = 0; i < colnums.length; i++) {\n    let items = Object.keys(cards).slice(cnt, cnt + colnums[i]);\n    let id = generateID();\n    columns[id] = { id, items, name: colnames[i], created: epochms, edited: epochms };\n    cnt += colnums[i];\n  }\n  return { cards, columns };\n};\n\n// generate initial dummy state\nexport const dummyState = () => {\n  const epochms = new Date().getTime();\n  const ids = [generateID(), generateID()];\n  let initial = {\n    tabs: {\n      [ids[0]]: { name: \"Main\",      id: ids[0], created: epochms, edited: epochms },\n      [ids[1]]: { name: \"Secondary\", id: ids[1], created: epochms, edited: epochms }\n    },\n    ...dummyCols([9,2,6,5,4], [\"To Do\",\"Doing\",\"Done\",\"Misc 1\",\"Misc 2\"])\n  };\n  const colIDs = Object.keys(initial.columns);\n  initial.tabs[ids[0]].columns = [colIDs[0], colIDs[1], colIDs[2]];\n  initial.tabs[ids[1]].columns = [colIDs[3], colIDs[4]];\n  initial.tabOrder = ids;\n  initial.cards['main'] = { id:'main', content: 'Welcome', description: 'Welcome to your Zettelkasten! You can edit this and use `[[wikilink]]` syntax to link to other nodes.',\n    created: epochms, edited: epochms }\n  return initial;\n}\n\nconst modifyVersion = (oldSemver, newSemver, mutation) => {\n  if (localStorage.version === oldSemver) {\n    let state = JSON.parse(localStorage.kanban);\n    mutation(state);\n    localStorage.kanban = JSON.stringify(state);\n    localStorage.version = newSemver;\n  }\n};\n\n// load persisted state\nconst currentVersion = \"0.2.0\"; // IMPORTANT\nexport const loadState = () => {\n  try {\n\n    // web\n    if (!localStorage.version) throw new Error();\n\n    // avert breaking changes\n    modifyVersion(\"0.1.0\", \"0.2.0\", state => {\n      const epochms = new Date().getTime();\n      state.cards['main'] = { id:'main', content: 'Welcome', description: 'Welcome to your Zettelkasten! You can edit this and use `[[wikilink]]` syntax to link to other nodes.',\n      created: epochms, edited: epochms }\n      return state;\n    });\n\n    if (localStorage.hasOwnProperty('kanban'))\n      return JSON.parse(localStorage.kanban) || dummyState();\n\n  } catch (e) {}\n  return dummyState();\n}\n\nexport const saveState = state => {\n  try {\n    if (localStorage) {\n      const serialised = JSON.stringify(state);\n      localStorage.setItem(\"kanban\", serialised);\n      localStorage.setItem(\"version\", currentVersion);\n    }\n  } catch (e) {}\n}\n\n// Source: https://stackoverflow.com/a/14810722/4642943\n// returns a new object with the values at each key mapped using mapFn(value)\nexport const objectMap = (object, mapFn) =>\n  Object.keys(object).reduce(function(result, key) {\n    result[key] = mapFn(object[key])\n    return result\n  }, {});\n\n/**\n * Returns a heavily abbreviated pretty printed date using date-fns\n * - Only includes time if within a week and not midnight\n * - Only includes minutes if nonzero\n * - Replaces date with \"Tomorrow\" or \"Next Fri\" for days within a fortnight\n */\nexport const prettyPrintDate = epochMilliseconds => {\n  const date = new Date(epochMilliseconds);\n  const now = new Date();\n\n  const getDate = date => {\n    const diff = fn.differenceInCalendarDays(date, now);\n    if (diff === 0) return \"Today\";\n    else if (diff === -1) return \"Yesterday\";\n    else if (diff === 1) return \"Tomorrow\";\n    else if (diff > 0 && diff < 7) return fn.format(date, \"EEE\"); // ex: Wed\n    else if (diff > 0 && diff < 14) return fn.format(date, \"EEE\") + \" Week\"; // ex: Fri Week\n    else if (diff > -7 && diff < 0) return \"Last \" + fn.format(date, \"EEE\"); // ex: Last Fri\n    return fn.format(date, \"MMM do\"); // ex: Sep 17th\n  }\n\n  const getTime = date => {\n    if (date.getHours() === 0 && date.getMinutes() === 0) return null; // ignore time if midnight\n    if (date.getMinutes() === 0) return fn.format(date, \"haaa\"); // ex: 4PM\n    return fn.format(date, \"h:mmaaa\");\n  }\n\n  const time = getTime(date);\n  return getDate(date) + (time ? \" \" + time : \"\");\n};\n\n// Download content as filename with specificed MIME type\nexport const downloadData = (content, filename, type) => {\n    if(!type) type = 'application/octet-stream';\n    const a = document.createElement('a');\n    const blob = new Blob([content], { type });\n    a.href = window.URL.createObjectURL(blob);\n    a.download = filename;\n    a.click();\n}\n\n// Web only\n// returns the current hash location (excluding the '#' symbol)\n// Based on Wouter: https://codesandbox.io/s/wouter-hash-based-hook-5fp9g?file=/index.js\nconst currentLoc = () => window.location.hash.replace(\"#\", \"\") || \"/\";\nexport const useHashLocation = () => {\n  const [loc, setLoc] = React.useState(currentLoc());\n  React.useEffect(() => {\n    const handler = () => setLoc(currentLoc());\n    window.addEventListener(\"hashchange\", handler);\n    return () => window.removeEventListener(\"hashchange\", handler);\n  }, []);\n  const navigate = React.useCallback(to => window.location.hash = to, []);\n  return [loc, navigate];\n};\n\nconst linkName = card => {\n  if (!card) return 'unknown';\n  if (card.name) return card.name;\n  const firstLine = card.content.split('\\n')[0];\n  if (firstLine.length > 40) return firstLine.substring(0,37) + '...';\n  return firstLine;\n};\nexport const parseWikilinks = (source, cards, prefix = '#/notes/') => {\n  const regex = /(\\[\\[[A-Za-z0-9_-]+\\]\\])/gm;\n  let m;\n  while ((m = regex.exec(source)) !== null) {\n    if (m.index === regex.lastIndex) regex.lastIndex++;\n    // m.index is the index in 'source'\n    const parseable = (source.substring(0, m.index).match(/`/gm) || []).length % 2 === 0;\n    if (!parseable) continue;\n    // m[1] is the actual match\n    let cardID = m[1].substring(2, m[1].length - 2);\n    source = source.substring(0, m.index) + '[' + linkName(cards[cardID]) + '](' + prefix + cardID + ')' + source.substring(m.index + m[1].length, source.length);\n  }\n  return source;\n};\n","\n// Popover menu (web)\nimport * as React from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\n\n\nexport default ({ map, children }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => setAnchorEl(null);\n\n  return (\n    <React.Fragment>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}>\n        {Object.entries(map).map(([name, func]) => (\n          <MenuItem key={name}\n            onClick={() => { handleClose(); func() }}>\n            {name}\n          </MenuItem>\n        ))}\n      </Menu>\n      {React.cloneElement(children, {\n        onClick: e => setAnchorEl(e.currentTarget)\n      })}\n    </React.Fragment>\n  );\n}\n","\n/**\n * TabView component\n *\n * <TabView\n *   tabs={[\"one\", \"two\", \"three\"]}\n *   render={i => (<SomeComponent index={i} />)}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { AppBar, Tabs, Tab, IconButton } from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport PopoverMenu from './popovermenu';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst TabPanel = ({ show, children }) => (\n  <div hidden={!show} style={{ height: 'calc(100% - 48px)' }}>\n    {show && children}\n  </div>\n);\n\nexport default ({\n  tabs, render, children, index, setIndex,\n  addTab, renameTab, deleteTab, moveTab\n}) => {\n  const handleChange = (event, newValue) => newValue >= 0 && newValue < tabs.length && setIndex(newValue);\n\n  return (\n    <div style={{ flex: 1 }}>\n      <AppBar position=\"static\" style={{\n          backgroundColor: \"white\",\n          zIndex: 2, position: 'relative'\n        }}>\n        <Tabs value={index} onChange={handleChange}\n          indicatorColor=\"primary\" textColor=\"primary\">\n          {tabs.map(tab => (\n            <Tab label={tab} key={tab} />\n          ))}\n          <View style={{flexGrow: 1}}></View>\n          <PopoverMenu map={{\n            \"Add tab\": () => addTab(),\n            \"Rename tab\": () => renameTab(index),\n            \"Delete tab\": () => deleteTab(index),\n            \"Move tab left\": () => (moveTab([index, index-1]), handleChange(null, index-1)),\n            \"Move tab right\": () => (moveTab([index, index+1]), handleChange(null, index+1)),\n          }}>\n            <IconButton>\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n          {children}\n        </Tabs>\n      </AppBar>\n      {tabs.map((tab, i) => (\n        <TabPanel show={index === i} key={tab}>\n          {index === i && render(i)}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({ button: {} }));\n\nexport default props => (\n  <Button className={useStyles().button} variant=\"contained\" color=\"primary\" {...props} />\n);\n","\n/**\n * Kanban boards core Redux logic\n *\n * State is normalised as { tabs, columns, cards }\n *  where each tab has several columns which contain cards\n *  each has a unique ID as a key in the respective object\n */\n\nimport { createReducer, createAction, createSelector } from '@reduxjs/toolkit';\nimport undoable from 'redux-undo';\nimport { loadState, generateID, objectMap } from '../common/utils';\n\n// Action creators\n\nexport const transferCard = createAction('kanban/TRANSFER_CARD');\nexport const reorderCard = createAction('kanban/REORDER_CARD');\nexport const addCard = createAction('kanban/ADD_CARD'); // takes { content, colID }\nexport const editCardContent = createAction('kanban/EDIT_CARD_CONTENT');//takes {content, cardID}\nexport const editCard = createAction('kanban/EDIT_CARD'); // takes a card object; allows editing all of a card's params\nexport const deleteCard = createAction('kanban/DELETE_CARD');//takes cardID\n\nexport const moveCard = ([srcColID, dstColID, srcIndex, dstIndex]) =>\n  srcColID === dstColID\n    ? reorderCard({ colID: srcColID, srcIndex, dstIndex })\n    : transferCard({ srcColID, dstColID, srcIndex, dstIndex });\n\nexport const addColumn = createAction('kanban/ADD_COLUMN'); // takes { name, tabID }\nexport const deleteColumn = createAction('kanban/DELETE_COLUMN'); // takes string column ID\nexport const renameColumn = createAction('kanban/RENAME_COLUMN'); // takes { colID, name }\nexport const moveColumn = createAction('kanban/MOVE_COLUMN'); // takes [srcIdx, dstIdx, tabIdx]\nexport const archiveCardsInColumn = createAction('kanban/ARCHIVE_ALL_COLUMN'); // takes colID\n\nexport const addTab = createAction('kanban/ADD_TAB'); // takes name\nexport const deleteTab = createAction('kanban/DELETE_TAB'); // takes tabIdx\nexport const renameTab = createAction('kanban/RENAME_TAB'); // takes { tabID, name }\nexport const moveTab = createAction('kanban/MOVE_TAB'); // takes [srcIdx, dstIdx]\n\nexport const addZettel = createAction('zettelkasten/ADD_ZETTEL'); // takes { zettel: {...} }\nexport const editZettel = createAction('zettelkasten/EDIT_ZETTEL'); // takes { zettel }\nexport const deleteZettel = createAction('zettelkasten/DELETE_ZETTEL'); // takes zettelID\n\n// Helpers\n\n// const indexFromID = (list, id) => list.map(item => item.id === id).indexOf(true);\n// const deleteByID = (list, id) => list.splice(indexFromID(list, id), 1);\nconst deleteInList = (list, elem) => {\n  let index = list.indexOf(elem);\n  if (index !== -1) list.splice(index, 1); // undesired behaviour when splicing at (-1, 1)\n  return index !== -1;\n};\n// const _deleteColumn = (s, id) => {\n//   const colIdx = indexFromID(s.columns, id);\n//   s.columns[colIdx].items.forEach(cardID => deleteByID(s.cards, cardID));\n//   s.tabs.forEach(tab => deleteInList(tab.columns, id));\n//   deleteByID(s.columns, id);\n// };\n\n// Selectors\n\nexport const selectors = {\n  // Map[TabID, Column], Column :: { id, items: List[Card] }, not List[CardID]\n  getColumnsInTabs: state =>\n    objectMap(state.tabs, tab =>\n      tab.columns.map(colID => state.columns[colID]).map(col => ({\n        ...col, items: col.items.map(card => state.cards[card])\n      }))),\n  columns: state => state.columns,\n  tabs: state => state.tabs,\n  tabOrder: state => state.tabOrder,\n  cards: state => state.cards,\n  archivedCards: state => Object.values(state.cards).filter(card => Object.keys(card).indexOf(\"archived\") !== -1),\n  activeCards:   state => Object.values(state.cards).filter(card => Object.keys(card).indexOf(\"archived\") === -1),\n};\n\n// Reducers\n\nconst initialState = loadState();\n\nconst reducer = createReducer(initialState, {\n  [transferCard]: (s, a) => {\n    const { srcColID, dstColID, srcIndex, dstIndex } = a.payload;\n    let srcCol = s.columns[srcColID].items;\n    let dstCol = s.columns[dstColID].items;\n    const [removed] = srcCol.splice(srcIndex, 1);\n    const epochms = new Date().getTime();\n    s.cards[removed].moved = epochms;\n    s.columns[srcColID].edited = epochms;\n    s.columns[dstColID].edited = epochms;\n    dstCol.splice(dstIndex, 0, removed);\n  },\n  [reorderCard]: (s, a) => {\n    const { colID, srcIndex, dstIndex } = a.payload;\n    const epochms = new Date().getTime();\n    s.columns[colID].edited = epochms;\n    let newitems = s.columns[colID].items;\n    const [removed] = newitems.splice(srcIndex, 1);\n    s.cards[removed].moved = epochms;\n    newitems.splice(dstIndex, 0, removed);\n    s.columns[colID].items = newitems;\n  },\n  [addCard]: (s, a) => {\n    const { content, colID } = a.payload;\n    const id = generateID();\n    const epochms = new Date().getTime();\n    // add to cards list\n    s.cards[id] = { id, content,\n      created: epochms,  edited: epochms, moved: epochms };\n    s.columns[colID].items.unshift(id); // add to top of column\n    s.columns[colID].edited = epochms;\n  },\n  [deleteColumn]: (s, a) => {\n    const colID = a.payload;\n    const tabIdx = Object.values(s.tabs).map(tab => tab.columns.indexOf(a.payload) !== -1).indexOf(true);\n    if (tabIdx >= 0) s.tabs[s.tabOrder[tabIdx]].edited = new Date().getTime();\n    s.columns[colID].items.forEach(cardID => delete s.cards[cardID]);\n    Object.values(s.tabs).forEach(tab => deleteInList(tab.columns, colID));\n    delete s.columns[colID];\n  },\n  [renameColumn]: (s, a) => {\n    const { colID, name } = a.payload;\n    s.columns[colID].name = name;\n    s.columns[colID].edited = new Date().getTime();\n  },\n  [editCardContent]: (s, a) => {\n    const { cardID, content } = a.payload;\n    s.cards[cardID].content = content;\n    s.cards[cardID].edited = new Date().getTime();\n  },\n  [deleteCard]: (s, a) => {\n    Object.values(s.columns).forEach(col => {\n      if (deleteInList(col.items, a.payload))\n        col.edited = new Date().getTime();\n    });\n    delete s.cards[a.payload];\n  },\n  [addColumn]: (s, a) => {\n    const { tabID, name } = a.payload;\n    const id = generateID();\n    const epochms = new Date().getTime();\n    s.columns[id] = { id, items: [], name, created: epochms, edited: epochms };\n    s.tabs[tabID].columns.push(id);\n    s.tabs[tabID].edited = epochms;\n  },\n  [editCard]: (s, a) => {\n    const { card, colID } = a.payload;\n    const epochms = new Date().getTime();\n    s.cards[card.id] = a.payload.card;\n    s.cards[card.id].edited = epochms;\n    const srcColID = Object.keys(s.columns).filter(colID => s.columns[colID].items.indexOf(card.id) !== -1)[0];\n    const dstColID = colID;\n    if (srcColID !== dstColID) {\n      deleteInList(s.columns[srcColID].items, card.id);\n      s.columns[dstColID].items.unshift(card.id);\n      s.columns[srcColID].edited = s.columns[dstColID].edited = epochms;\n    }\n  },\n  [deleteTab]: (s, a) => {\n    const tabIdx = a.payload;\n    const tab = s.tabs[s.tabOrder[tabIdx]];\n    while (tab.columns.length) {\n      const colID = tab.columns[0];\n      s.columns[colID].items.forEach(cardID => delete s.cards[cardID]);\n      delete s.columns[colID];\n      tab.columns.shift();\n    }\n    delete s.tabs[s.tabOrder[tabIdx]];\n    s.tabOrder.splice(tabIdx, 1);\n  },\n  [addTab]: (s, a) => {\n    const id = generateID();\n    const name = a.payload;\n    s.tabs[id] = { name, id, columns: [], created: new Date().getTime() };\n    s.tabOrder.push(id);\n  },\n  [renameTab]: (s, a) => {\n    const { tabID, name } = a.payload;\n    s.tabs[tabID].name = name;\n    s.tabs[tabID].edited = new Date().getTime();\n  },\n  [moveColumn]: (s, a) => {\n    const [srcIdx, dstIdx, tabIdx] = a.payload;\n    const tabID = s.tabOrder[tabIdx];\n    let newitems = s.tabs[tabID].columns;\n    const [removed] = newitems.splice(srcIdx, 1);\n    newitems.splice(dstIdx, 0, removed);\n    s.tabs[tabID].columns = newitems;\n    s.tabs[tabID].edited = new Date().getTime();\n  },\n  [moveTab]: (s, a) => {\n    const [srcIdx, dstIdx] = a.payload;\n    if (dstIdx < 0 || dstIdx >= s.tabs.length) return;\n    let newitems = s.tabOrder;\n    const [removed] = newitems.splice(srcIdx, 1);\n    newitems.splice(dstIdx, 0, removed);\n    s.tabOrder = newitems;\n  },\n  [archiveCardsInColumn]: (s, a) => {\n    // archived cards still exist in memory but are not listed in a column's items\n    const colID = a.payload;\n    const epochms = new Date().getTime();\n    s.columns[colID].items.forEach(cardID => {\n      let card = s.cards[cardID];\n      card.moved = card.edited = card.archived = epochms;\n      card.archivedFromColID = a.payload;\n    });\n    s.columns[colID].items = [];\n    s.columns[colID].edited = epochms;\n  },\n  [addZettel]: (s, a) => {\n    const { zettel } = a.payload;\n    const id = zettel.id || generateID();\n    const epochms = new Date().getTime();\n    s.cards[id] = { id, created: epochms,  edited: epochms, moved: epochms,\n      ...zettel };\n  },\n  [editZettel]: (s, a) => {\n    const { zettel } = a.payload;\n    const epochms = new Date().getTime();\n    s.cards[zettel.id] = zettel;\n    s.cards[zettel.id].edited = epochms;\n  },\n  [deleteZettel]: (s, a) => {\n    // TODO: clean up links?\n    delete s.cards[a.payload];\n  },\n});\n\nexport default undoable(reducer, {limit:20});\n","\nimport { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport boards, { selectors as boardSelectors } from './ducks/kanban';\nimport { saveState, objectMap } from './common/utils';\n\nconst store = configureStore({ reducer: boards });\n\n// Undo/redo keyboard shortcuts if supported\ntry {\n  document.addEventListener('keyup', e => {\n    const ignored = ['input', 'textarea'];\n    if (ignored.indexOf(document.activeElement.tagName.toLowerCase()) !== -1) return;\n    if (e.ctrlKey && e.which === 90 && !e.shiftKey)\n      store.dispatch(UndoActionCreators.undo());\n    else if (e.ctrlKey && e.shiftKey && e.which === 90 || e.ctrlKey && e.which === 89)\n      store.dispatch(UndoActionCreators.redo());\n  });\n} catch (e) {}\n\nexport default store;\n\n// produce global selectors\nexport const globalSelectors = {\n  boards: state => state.present\n}\nexport const selectors = {\n  boards: objectMap(boardSelectors, localSelector => state => localSelector(globalSelectors.boards(state)))\n};\n\n// Save board state (excluding history)\n// to save history efficiently we would need to store a state 50 states ago, the 50 actions since,\n// and the current state; this would require a rewrite of redux-undo\nconst localStorageSubscriber = () => saveState(globalSelectors.boards(store.getState()));\nstore.subscribe(localStorageSubscriber);\nlocalStorageSubscriber(); // save data generated on first run\n","\nimport * as React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport htmlParser from 'react-markdown/plugins/html-parser';\nimport { parseWikilinks } from '../common/utils';\n\n// // See https://github.com/aknuds1/html-to-react#with-custom-processing-instructions for docs\n// const parseHtml = htmlParser({\n//   isValidNode: node => ['script', 'style', 'iframe'].indexOf(node.type) === -1\n// });\n\n// parses wikilinks if the cards prop is present\nexport default props => {\n  const source = props.cards ? parseWikilinks(props.source, props.cards) : props.source;\n  return (\n    <ReactMarkdown\n      source={source}\n      escapeHtml={false}\n    />\n  );\n};\n","\nimport * as React from 'react';\nimport Markdown from '../../components/markdown';\nimport { ClickAwayListener, TextField, InputLabel } from '@material-ui/core';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport { IndicatorBuilder, AttributeHeader } from '.';\nimport { selectors } from '../../store';\nimport { useSelector } from 'react-redux';\n\nexport const Edit = ({ card, setCard }) => {\n  const [editingDescription, setEditingDescription] = React.useState(false);\n  const setDescription = description => setCard({...card,\n      description: description.length ? description : undefined});\n  const cards = useSelector(selectors.boards.cards);\n\n  if (!editingDescription && typeof card.description !== 'string')\n    return (\n      <AttributeHeader onClick={() => setEditingDescription(true)}>\n        Add description\n      </AttributeHeader>\n    );\n\n  return !editingDescription ? (\n    <div style={{marginTop: 8}}>\n      <div onClick={() => setEditingDescription(true)}>\n        <InputLabel className=\"custom-label\">Description</InputLabel>\n      </div>\n      <Markdown source={card.description} cards={cards} />\n    </div>\n  ) : (\n    <React.Fragment>\n      <InputLabel className=\"custom-label\">Description</InputLabel>\n      <ClickAwayListener onClickAway={() => setEditingDescription(false)}>\n        <TextField margin=\"dense\" autoFocus fullWidth variant=\"outlined\"\n          multiline rows={6} rowsMax={16} value={card.description} onChange={e => setDescription(e.target.value)} />\n      </ClickAwayListener>\n    </React.Fragment>\n  );\n};\n\nexport const Indicator = ({ card }) => {\n  if (card.description) {\n    const limit = 500; // crop after this with ellisis\n    const title = card.description.split(\"\\n\\n\").join(\"\\n\").substring(0, limit);\n      + (card.description.length > limit ? \"...\" : \"\");\n\n    return <IndicatorBuilder label={null} title={title} icon={<NotesIcon />} />;\n  } else return null;\n};\n","\nimport * as React from 'react';\nimport { Button, InputLabel } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { format } from 'date-fns';\nimport { prettyPrintDate } from '../../common/utils';\nimport { IndicatorBuilder, AttributeHeader } from '.';\n\nexport const Edit = ({ card, setCard }) => {\n  const setDateTime = time => setCard({...card, time});\n\n  return card.time ? (\n    <div style={{marginTop: 10}}>\n      <InputLabel className=\"custom-label\">Date &amp; time</InputLabel>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <DateTimePicker\n          value={new Date(card.time)}\n          onChange={newDate => setDateTime(newDate.getTime())}\n          showTodayButton\n          format=\"MMMM do hh:mm aaa\" />\n      </MuiPickersUtilsProvider>\n      <Button color=\"primary\" variant=\"outlined\" style={{float:'right',marginTop:12}}\n        onClick={() => setDateTime(null)}>Reset date</Button>\n    </div>\n  ) : (\n    <AttributeHeader onClick={() => setDateTime(new Date().getTime())}>\n      Add date &amp; time\n    </AttributeHeader>\n  );\n};\n\nexport const Indicator = ({ card }) => {\n  if (card.time) {\n    return <IndicatorBuilder\n      icon={<AccessTimeIcon />}\n      label={prettyPrintDate(card.time)}\n      title={format(new Date(card.time), \"dd/MM/yyyy hh:mmaaa\")} />\n  } else return null;\n};\n","\n/**\n * Evidence Based Scheduling card attribute\n * See: https://www.joelonsoftware.com/2007/10/26/evidence-based-scheduling/\n */\n\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, TextField, FormControlLabel, Checkbox, InputLabel } from '@material-ui/core';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport HourglassFullIcon from '@material-ui/icons/HourglassFull';\nimport { globalSelectors as sel } from '../../store';\nimport { IndicatorBuilder, AttributeHeader } from '.';\n\nexport const Edit = ({ card, setCard }) => {\n  // edit a subset of the EBS fields\n  const setEBS = ebsFields => setCard({...card, ebs: {...card.ebs, ...ebsFields}});\n  const [estStr, setEstStr] = React.useState(card.ebs ? prettySeconds(card.ebs.estimate) : \"\");\n  const [elapStr, setElapStr] = React.useState(card.ebs ? prettySeconds(card.ebs.elapsed) : \"\");\n\n  // list of EBS objects for all cards\n  const historical = useSelector(s => Object.values(sel.boards(s).cards)\n    .filter(card => card.hasOwnProperty('ebs') && card.ebs !== null)\n    .filter(card => card.ebs.elapsed && card.ebs.estimate)\n    .map(card => card.ebs));\n\n  const setEBSEstimate = str => {\n    setEstStr(str);\n    const estimate = unprettySeconds(str);\n    if (typeof estimate === \"number\")\n      setEBS({estimate, computed: computeEstimate(estimate, historical)});\n  }\n  const setEBSElapsed = str => {\n    setElapStr(str);\n    const elapsed = unprettySeconds(str);\n    if (typeof elapsed === \"number\")\n      setEBS({elapsed});\n  }\n  const resetEBS = () => (setEstStr(\"\"), setElapStr(\"\"), setCard({...card, ebs: null}));\n\n  if (!card.ebs)\n    return (\n      <AttributeHeader onClick={() => setEBSEstimate('1h')}>\n        Add time estimate\n      </AttributeHeader>\n    );\n\n  // ebs :: { estimate :: seconds, computed :: seconds, elapsed :: seconds,\n  //   done :: boolean, exact :: boolean }\n  // estimate is user estimate, computed is a function of historical estimation accuracy\n  // and elapsed is current time spent on the task, and exact is whether the estimate is exact (eg duration)\n  // TODO: add timer feature or column powerup to automatically time\n\n  const getPrettyPredicted = () => prettySeconds(computeEstimate(unprettySeconds(estStr) || 0, historical));\n\n  // returns true iff the string is non-empty but in incorrect format (not HHhMMm like 1h30m)\n  const invalid = str => str !== \"\" && str !== null && unprettySeconds(str) === null;\n\n  return (\n    <div style={{marginTop: 10}}>\n      <InputLabel className=\"custom-label\">Time estimate</InputLabel>\n      <div style={{width: '30%',float:'left',marginRight:16}}>\n        <TextField label={`Estimate (predicted ${getPrettyPredicted()})`}\n          margin=\"dense\" fullWidth\n          value={estStr}\n          error={invalid(estStr)}\n          helperText={invalid(estStr) ? \"Example format: 1h30m\" : null}\n          onChange={e => setEBSEstimate(e.target.value)} />\n      </div>\n      <div style={{width: '30%',float:'left',marginRight:16}}>\n        <TextField label=\"Elapsed\"\n          margin=\"dense\" fullWidth\n          value={elapStr}\n          error={invalid(elapStr)}\n          helperText={invalid(elapStr) ? \"Example format: 1h30m\" : null}\n          onChange={e => setEBSElapsed(e.target.value)} />\n      </div>\n      <div style={{marginTop: 12, float:'left'}}>\n        <FormControlLabel label=\"Exact duration\" control={\n            <Checkbox color=\"primary\"\n              checked={Boolean(card.ebs.exact)} onChange={e => setEBS({ exact: e.target.checked })} />\n          }/>\n      </div>\n      <div style={{flexGrow:1}}></div>\n      <Button color=\"primary\" variant=\"outlined\" size='medium' style={{float:'right',marginTop:12}}\n        onClick={resetEBS}>Reset estimate</Button>\n    </div>\n  )\n};\n\n// historical :: List[{ estimate, computed, elapsed }]\nconst computeEstimate = (s, historical) => {\n  if (typeof s !== 'number') return s;\n\n  // Compute average ratio elapsed / estimated\n  let ratio = historical.reduce(\n    (acc, ebs) => acc + ebs.elapsed / ebs.estimate / historical.length\n    , 0);\n  // if few samples average with 1\n  if (!ratio) ratio = 1;\n  if (historical.length < 10) ratio = (ratio + 1) / 2;\n\n  // computes an estimate of the time given all of the cards' EBS values\n  const computed = s * ratio;\n\n  // round rough estimate to a reasonable level of precision\n  // nearest hr, 15min or 5min interval if that is the same level of precision as the input\n  const precisions = [3600, 60*15, 60*5];\n  for (let seconds of precisions) {\n    if (s % seconds === 0 && Math.abs(computed - s) > seconds / 2)\n      return seconds * Math.round(computed / seconds);\n  }\n  // otherwise nearest minute\n  return 60 * Math.round(computed / 60);\n};\n\n// Pretty print seconds in short form like 3600->1h, 6300->1h45m (no days or seconds)\nconst prettySeconds = s => {\n  if (typeof (s) === 'string') return s;\n  const hours = Math.floor(s / 3600);\n  const minutes = Math.floor((s % 3600) / 60);\n  if (hours === 0 && minutes === 0) return '0';\n  return (hours ? hours + 'h' : '') + (minutes ? minutes + 'm' : '');\n};\n\n// Inverse of prettySeconds; used so the input field can be edited in pretty form\nlet unprettySeconds = s => {\n  if (s === '0') return 0;\n\n  // this parses it to [x,'1h', '30m'] if possible, or [x,'1h',undefined] or [x,undefined,'30m']\n  // if only one is present, where x is irrelevant\n  let groups = (/^(\\d+h|\\d*\\.\\d+h)?(\\d+m|\\d*\\.\\d+m)?$/m).exec(s);\n\n  // check there are 3 matches where at least one of the latter two are defined\n  if (!groups || groups.length !== 3 || !groups.slice(1).filter(x=>x).length)\n    return null;\n  else groups = groups.slice(1);\n\n  const pf = k => parseFloat(k.substring(0, k.length-1)); // \"1.5h\" -> 1.5\n  return 3600*pf(groups[0] || '00') + 60*pf(groups[1] || '00');\n};\n\nexport const Indicator = ({ card }) => {\n  if (card.ebs) {\n    // display 'elapsed/computed' where the 'elapsed/' is only present if nonzero\n    // displays estimate instead of computed iff card.ebs.exact (checkbox ticked)\n    const label = (card.ebs.elapsed ? prettySeconds(card.ebs.elapsed) + '/' : \"\")\n      + prettySeconds(card.ebs.exact ? card.ebs.estimate : card.ebs.computed);\n    const elapsed = card.ebs.elapsed ? `Elapsed: ${prettySeconds(card.ebs.elapsed)}` : \"\";\n    const title = card.ebs.exact ?\n      `Duration: ${prettySeconds(card.ebs.estimate)}\\n${elapsed}` :\n      `Estimate: ${prettySeconds(card.ebs.estimate)}\\nComputed: ${prettySeconds(card.ebs.computed)}\\n${elapsed}`;\n    // const icon = card.ebs.done ? <HourglassEmptyIcon /> : <HourglassFullIcon />\n    const icon = <HourglassEmptyIcon />;\n    return <IndicatorBuilder label={label} title={title} icon={icon} />;\n  } else return null;\n};\n","\nimport * as React from 'react';\nimport { Chip, makeStyles, Button } from '@material-ui/core';\n\nimport * as Description from './description';\nimport * as DateTime from './datetime';\nimport * as EBS from './ebs';\nexport { Description, DateTime, EBS };\n\nconst useStyles = makeStyles({\n  label: { padding: 3 },\n  header: { marginBottom: 6, marginTop: 6 },\n});\n\nexport const IndicatorBuilder = ({ icon, label, title }) =>\n  <Chip size='small' icon={icon}\n    label={label}\n    title={title}\n    classes={label && label.length ? null : { label: useStyles().label }}\n    style={{ borderRadius: 3, background: 'white', marginRight: 2 }}\n    variant='outlined' />;\n\nexport const AttributeHeader = props =>\n  <div className={useStyles().header}>\n    <Button variant='outlined' color='primary' size='small' {...props} />\n  </div>;\n","\nimport * as React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n         TextField, InputLabel, Select, MenuItem,\n         ListSubheader } from '@material-ui/core';\nimport * as duck from '../ducks/kanban';\nimport { globalSelectors as sel, selectors } from '../store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Description, DateTime, EBS } from '../kanban/attributes';\n\nexport const ConfirmDialog = ({ open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"] }) => {\n  return (\n    <Dialog open={open} onClose={() => respond(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {subtitle}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => respond(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => respond(true)} color=\"primary\" variant=\"contained\" autoFocus>\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const PromptDialog = ({\n  open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"],\n  label, inputType = \"text\", placeholder = \"\", buttons = null\n}) => {\n  const [value, setValue] = React.useState(placeholder);\n  const done = x => { respond(x); setValue(placeholder) };\n  return (\n    <Dialog open={open} onClose={() => done(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        {typeof subtitle === \"string\" && (\n          <DialogContentText>\n            {subtitle}\n          </DialogContentText>\n        )}\n        <TextField autoFocus margin=\"dense\" fullWidth\n          label={label} type={inputType} value={value} onChange={e => setValue(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        {buttons}\n        <Button onClick={() => done(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => done(value)} color=\"primary\" variant=\"contained\">\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const CardEditDialog = ({ respond, card }) => {\n  // create confirm dialog if closing the tab while editing a card\n  React.useEffect(() => {\n    // componentDidMount\n    if (JSON.stringify(newCard) !== JSON.stringify(card))\n      window.onbeforeunload = e => \"Are you sure you want to quit?\";\n    // componentWillUnmount\n    return () => window.onbeforeunload = null;\n  });\n\n  const dispatch = useDispatch();\n\n  const currentColID = useSelector(state => Object.values(sel.boards(state).columns)\n      .filter(col => col.items.indexOf(card.id) !== -1)[0].id);\n\n  const [colID, setColID] = React.useState(currentColID);\n  const [newCard, setCard] = React.useState(card);\n  const setContent = content => setCard({...newCard, content});\n\n  const columns = useSelector(selectors.boards.columns);\n  const tabs = useSelector(selectors.boards.tabs);\n  const getTabIdxByColID = colID => Object.values(tabs).map(tab => tab.columns.indexOf(colID) !== -1).indexOf(true);\n  const getColIdxByID = colID => Object.values(columns).map(col => col.id === colID).indexOf(true);\n\n  const done = () => (respond(), setContent(card.content));\n  // save and then delete so you can undo the delete without losing your unsaved draft of a card\n  const deleteCard = () => (dispatch(duck.editCard({ card: newCard, colID })), dispatch(duck.deleteCard(card.id)), done());\n  const editCard = () => (dispatch(duck.editCard({ card: newCard, colID })), done());\n\n  return (\n    <Dialog open onClose={() => done(null)} fullWidth maxWidth='md'\n      disableBackdropClick={JSON.stringify(newCard) !== JSON.stringify(card)}>\n      <DialogTitle>Edit card</DialogTitle>\n      <DialogContent>\n        <InputLabel id=\"kanban/card-column\" className=\"custom-label\">Column</InputLabel>\n        <Select labelId=\"kanban/card-column\" value={colID} onChange={e => setColID(e.target.value)}>\n          {Object.values(tabs).flatMap(tab => ([\n            // the subheader can be clicked so we add the following CSS hack (per mui#18200)\n            // .MuiListSubheader-root { pointer-events: none; }\n            <ListSubheader key={tab.id}>{tab.name}</ListSubheader>,\n            ...tab.columns.map(colID =>\n              <MenuItem value={colID} key={colID}>{columns[colID].name}</MenuItem>\n            )\n          ]))}\n        </Select>\n        <InputLabel id=\"kanban/card-title\" className=\"custom-label\">Title</InputLabel>\n        <TextField margin=\"dense\" autoFocus fullWidth\n          multiline rowsMax={3} value={newCard.content} onChange={e => setContent(e.target.value)} />\n        <Description.Edit card={newCard} setCard={setCard} />\n        <DateTime.Edit    card={newCard} setCard={setCard} />\n        <EBS.Edit         card={newCard} setCard={setCard} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={deleteCard}>Delete</Button>\n        <Button onClick={done} color=\"primary\">Cancel</Button>\n        <Button onClick={editCard} color=\"primary\" variant=\"contained\">OK</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const AboutDialog = ({ open, respond }) => {\n  return (\n    <Dialog open={open} onClose={respond} fullWidth>\n      <DialogTitle>About Mirror</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          A free and open source personal task management and note taking app.<br/>\n\n          Made by Oliver Balfour. &copy; 2020.<br/>\n\n          App icon is <a href=\"https://thenounproject.com/term/mirror/340140/\">Mirror</a>&nbsp;\n          by Lastspark from <a href=\"http://thenounproject.com/\">The Noun Project</a>.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={respond} color=\"primary\" variant=\"contained\" autoFocus>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","\n/**\n * MenuBar component\n *\n * <MenuBar active={0} setActive={...} />\n *  (active is index of current screen)\n *\n */\n\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Tabs, Tab } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport PopoverMenu from './popovermenu';\nimport { downloadData } from '../common/utils';\nimport { AboutDialog } from './dialogs';\n\nexport default ({ active, setActive }) => {\n  const [aboutOpen, setAboutOpen] = React.useState(false);\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" style={{ top: 'auto', bottom: 0 }}>\n        <Toolbar style={{ minHeight: 0 }}>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => console.log(\"open menu\")}>\n            <MenuIcon />\n          </IconButton>\n          <Tabs\n            value={active} onChange={(e, val) => setActive(val)}\n            TabIndicatorProps={{ style: { backgroundColor: 'white' } }}\n          >\n            <Tab label={<div><DeveloperBoardIcon style={{verticalAlign: 'middle'}} /> Board</div>}  />\n            <Tab label={<div><NotesIcon style={{verticalAlign: 'middle'}} /> Notes</div>}  />\n          </Tabs>\n          <div style={{ flexGrow: 1 }} />\n          <PopoverMenu map={{\n            \"Submit feedback\": () => window.open('mailto'+':oliver.'+'leo.balfour+mirrorsupport'+'@googlemail'+'.com', '_blank'),\n            \"About\": () => setAboutOpen(true),\n            \"Clear saved state\": () => window.prompt(\"Delete all saved state? Pressing undo will fix this. Type YES to confirm\", \"NO\") === \"YES\" && localStorage.clear(),\n            \"Import state\": () => { localStorage.kanban = window.prompt(\"Paste your exported state here. Press cancel (or the undo button after pressing OK) to revert. Refresh the page to confirm and reload state.\") },\n            \"Export state\": () => downloadData(localStorage.kanban, \"mirror-backup.json\", \"application/json\"),\n          }}>\n            <IconButton edge=\"end\" color=\"inherit\">\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n        </Toolbar>\n      </AppBar>\n      <AboutDialog open={aboutOpen} respond={() => setAboutOpen(false)} />\n    </React.Fragment>\n  );\n}\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport { ActionCreators } from 'redux-undo'\n\nexport default () => {\n  const dispatch = useDispatch();\n  return (\n    <React.Fragment>\n      <IconButton onClick={() => dispatch(ActionCreators.undo())}>\n        <UndoIcon />\n      </IconButton>\n      <IconButton onClick={() => dispatch(ActionCreators.redo())}>\n        <RedoIcon />\n      </IconButton>\n    </React.Fragment>\n  );\n};\n","\n/**\n * BoardView component\n *\n * <BoardView\n *   tab={tabIndex}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\nimport { selectors, globalSelectors as sel } from '../store';\nimport { View, Text } from 'react-native';\nimport { makeStyles, Button, IconButton, ButtonGroup, TextField, Chip } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { PopoverMenu, ConfirmDialog, PromptDialog, CardEditDialog, Markdown } from '../components';\nimport { Description, DateTime, EBS } from './attributes';\nimport { useHashLocation } from '../common/utils';\n\nconst grid = 8;\nconst cardWidth = 300;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    padding: grid,\n    fontSize: \"14px\",\n    \"& *\": {flexShrink: 0},\n  },\n  column: {\n    background: '#DFEEEE',\n    padding: grid,\n    paddingBottom: 24,\n    width: cardWidth,\n    border: '1px solid #CCDCDC',\n    borderRadius: 5,\n    margin: grid,\n    transition: \"border 0.2s\",\n    height: 'calc(100vh - 160px)',\n    overflow: 'hidden',\n  },\n  addColumnContainer: {\n    width: cardWidth + 5*grid,\n  },\n  addColumn: {\n    // we also apply a margin conditionally in the JSX when dragging columns\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100px',\n    background: '#DFEEEE',\n    padding: grid,\n    paddingBottom: 24,\n    width: cardWidth,\n    border: '1px solid #CCDCDC',\n    borderRadius: 5,\n    margin: grid,\n  },\n  columnHeaderContainer: {\n    padding: \"8 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  columnHeaderText: {\n    paddingLeft: 8,\n    paddingBottom: 0,\n    fontSize: '1.4em',\n    fontWeight: 500,\n  },\n  columnHeaderRule: {\n    overflow: \"hidden\",\n    border: \"none\",\n    color: \"#CCDCDC\",\n    backgroundColor: \"#CCDCDC\",\n    height: \"1px\",\n    width: cardWidth + grid * 2 + 1, //+1 is border\n    marginLeft: -(grid+1),\n  },\n  card: {\n    userSelect: 'none',\n    padding: \"10px 13px\",\n    margin: `0 0 ${grid}px 0`,\n    background: 'white',\n    borderRadius: 5,\n    transition: \"opacity 0.3s\",\n    overflow: 'hidden',\n    \"&:hover, &:focus\": {\n      boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)',\n    },\n    \"&>p\": {\n      margin: 0,\n    }\n  },\n  draggingCard: {\n    opacity: 0.7,\n    boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)',\n  },\n  columnContainer: {\n    transition: \"opacity 0.6s\",\n  },\n  draggingColumn: {\n    opacity: 0.7,\n  },\n}));\n\nexport default ({ tabInfo }) => {\n  const tab = tabInfo.index;\n  const tabObj = tabInfo.tab;\n  const dispatch = useDispatch();\n  const styles = useStyles();\n\n  const tabOrder = useSelector(selectors.boards.tabOrder);\n  const columns = useSelector(selectors.boards.getColumnsInTabs)[tabOrder[tab]];\n  const colIDs = useSelector(selectors.boards.tabs)[tabOrder[tab]].columns;\n\n  // dispatch move card action\n  const onDragEnd = res => {\n    if (!res.destination) return;\n    if (res.type === \"card\") {\n      dispatch(duck.moveCard([\n        res.source.droppableId, res.destination.droppableId,\n        res.source.index, res.destination.index\n      ]));\n    } else if (res.type === \"column\") {\n      dispatch(duck.moveColumn([\n        res.source.index, res.destination.index, tab\n      ]));\n    }\n  };\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = name => setPromptOpen(false) ||\n    typeof name === \"string\" && name.length &&\n      dispatch(duck.addColumn({ tabID: tabObj.id, name }));\n\n  return (\n    <View style={{ width: '100vw', overflowX: 'auto', height: '100%' }}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"default\" style={{ flexGrow: 1, height: \"100%\" }} direction=\"horizontal\" type=\"column\">\n          {(provided, snapshot) => (\n            <React.Fragment>\n              <div className={styles.root} ref={provided.innerRef}>\n                {colIDs.map((colID, i) => <Column col={columns[i]} styles={styles} key={colID} index={i} />)}\n                <AddColumn styles={styles} add={() => setPromptOpen(true)} hide={snapshot.isDraggingOver || snapshot.draggingFromThisWith} />\n              </div>\n              {provided.placeholder}\n            </React.Fragment>\n          )}\n        </Droppable>\n      </DragDropContext>\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title=\"Add column\" label=\"Name\" />\n      )}\n    </View>\n  );\n}\n\nconst Column = ({ styles, col, index }) => {\n  const { id, items, name } = col;\n\n  const [editingNew, setEditingNew] = React.useState(false);\n  const [editingValue, setEditingValue] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const addCard = () => {\n    if (editingValue.length)\n      dispatch(duck.addCard({\n        content: editingValue,\n        colID: id\n      }));\n    setEditingValue(\"\");\n    setEditingNew(false);\n  };\n  const addButton = () => {\n    if (editingNew)\n      setEditingValue(\"\");\n    setEditingNew(!editingNew);\n  };\n  const menuButton = () => {\n    console.log('pressed menu button');\n  };\n\n  const internals = (\n    <Droppable droppableId={id} style={{ flexGrow: 1, height: \"100%\" }} type=\"card\" ignoreContainerClipping>\n      {(provided, snapshot) => (\n        <React.Fragment>\n          <div style={{\n              width: cardWidth, overflowY: 'auto', overflowX: 'hidden',\n              // 1) height is -20px to avoid bottom being clipped off\n              // 2) 100px padding and -100px height while dragging to give a 100px buffer of\n              // droppable space to avoid glitching due to dynamic resizing while moving\n              // cards to the bottom\n              height: snapshot.isDraggingOver ? \"calc(100% - 120px)\" : \"calc(100% - 20px)\",\n              paddingBottom: snapshot.isDraggingOver ? 100 : 0\n            }} ref={provided.innerRef}>\n            {editingNew && (\n              <EditingCard value={editingValue} setValue={setEditingValue}\n                add={addCard} cancel={() => { setEditingValue(\"\"); setEditingNew(false) }} />\n            )}\n            {items.map((card, index) => <Card card={card} styles={styles} index={index} key={card.id} />)}\n          </div>\n          {provided.placeholder}\n        </React.Fragment>\n      )}\n    </Droppable>\n  );\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided, snapshot) => (\n        <div ref={provided.innerRef}\n          {...provided.draggableProps}\n          className={styles.columnContainer + (snapshot.isDragging ? \" \"+styles.draggingColumn : \"\")}\n          style={provided.draggableProps.style}>\n          <div className={styles.column}>\n            <div {...provided.dragHandleProps}>\n              <ColumnHeader styles={styles} col={col} add={addButton} menu={menuButton} />\n            </div>\n            {internals}\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n}\n\nconst EditingCard = ({ value, setValue, add, cancel }) => {\n  return (\n    <div>\n      <TextField\n        label=\"New Card\"\n        multiline\n        rowsMax={6}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        variant=\"filled\"\n        style={{ width: \"100%\" }} />\n      <ButtonGroup variant=\"contained\" size='small'\n        style={{marginBottom: 8, boxShadow: \"0px 4px 2px -2px rgba(0,0,0,0.15)\", width: \"100%\"}}>\n        <Button style={{flexGrow: 1}} variant='contained' onClick={add}>\n          Done\n        </Button>\n        <Button onClick={cancel}><DeleteIcon style={{color: '#555'}} /></Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\n// header name, add button, chips for each addon (WIP limit, EBS time estimate, etc), menu button\nconst ColumnHeader = ({ styles, col, add, menu }) => {\n  const dispatch = useDispatch();\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => setConfirmOpen(false) ||\n    res && dispatch(duck.deleteColumn(col.id));\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = res => setPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.renameColumn({ colID: col.id, name: res }));\n\n  const archiveAll = () => dispatch(duck.archiveCardsInColumn(col.id));\n\n  return (\n    <div>\n      <div className={styles.columnHeaderContainer}>\n        <div className={styles.columnHeaderText}>\n          {col.name}\n        </div>\n        <div>\n          {/*\n            // TODO: column powerup API with Chip indicators\n            <Chip size='small' label=\"0/6\" />\n            <Chip size='small' label=\"3h\" />\n          */}\n          <IconButton size='small' onClick={() => add()}>\n            <AddIcon />\n          </IconButton>\n          <PopoverMenu map={{\n            \"Archive all\": () => archiveAll(),\n            \"Rename\": () => setPromptOpen(true),\n            \"Delete\": () => setConfirmOpen(true),\n          }}>\n            <IconButton size='small'>\n              <MoreVertIcon />\n            </IconButton>\n          </PopoverMenu>\n        </div>\n      </div>\n      <hr className={styles.columnHeaderRule} />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this column?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title={`Rename column \"${col.name}\"`} subtitle=\"Don't worry, this action can be undone.\"\n          label=\"Name\" placeholder={col.name} />\n      )}\n    </div>\n  );\n};\n\nconst Card = ({ card, styles, index }) => {\n  const { id, content } = card;\n  const dispatch = useDispatch();\n  // TODO: refactor this to board level\n  const [loc, setLoc] = useHashLocation();\n  // editing card if URL is /board/CARD_ID/edit\n  const promptOpen = loc.split(\"/\")[3] === card.id && loc.split(\"/\")[4] === \"edit\";\n  const tabName = useSelector(s => {\n    const state = sel.boards(s);\n    const colID = Object.values(state.columns).filter(col => col.items.indexOf(id) !== -1)[0].id;\n    return Object.values(state.tabs).filter(tab => tab.columns.indexOf(colID) !== -1)[0].name.toLowerCase();\n  });\n  const cards = useSelector(selectors.boards.cards);\n  const setPromptOpen = yes => yes ? setLoc(`/boards/${tabName}/${id}/edit`) : setLoc(`/boards/${loc.split(\"/\")[2]}`);\n\n  return (\n    <React.Fragment>\n      <Draggable draggableId={id} index={index}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={styles.card + (snapshot.isDragging ? \" \"+styles.draggingCard : \"\")}\n            style={provided.draggableProps.style}\n            onClick={() => setPromptOpen(true)}>\n            <Markdown source={content} cards={cards} />\n            <Description.Indicator card={card} />\n            <DateTime.Indicator    card={card} />\n            <EBS.Indicator         card={card} />\n          </div>\n        )}\n      </Draggable>\n      {promptOpen && (\n        <CardEditDialog respond={() => setPromptOpen(false)} card={card} />\n      )}\n    </React.Fragment>\n  );\n}\n\nconst AddColumn = ({ styles, add, hide }) => {\n  return (\n    <div className={styles.addColumnContainer} style={{\n      marginLeft: hide ? cardWidth + 4*grid + 2 : 0 }}>\n      <div className={styles.addColumn}>\n        <IconButton onClick={add}>\n          <AddIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TabView, UndoRedo } from '../components';\nimport BoardView from './boardview';\nimport * as duck from '../ducks/kanban';\nimport { selectors } from '../store';\nimport { PopoverMenu, ConfirmDialog, PromptDialog } from '../components';\nimport { useHashLocation } from '../common/utils';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const [loc, setLoc] = useHashLocation();\n  // {id:{name, id, columns (ids)},...}\n  const tabs = useSelector(selectors.boards.tabs);\n  const tabOrder = useSelector(selectors.boards.tabOrder);\n  let currentTab = tabOrder.map(tabID => tabs[tabID].name.toLowerCase() === loc.split(\"/\")[2]).indexOf(true);\n  const setCurrentTab = num => setLoc(\"/boards/\"+tabs[tabOrder[num]].name.toLowerCase());\n  if (currentTab < 0) currentTab = 0;\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => setConfirmOpen(false) ||\n    res && (dispatch(duck.deleteTab(currentTab)), setCurrentTab(Math.max(0,currentTab-1)));\n\n  const [addPromptOpen, setAddPromptOpen] = React.useState(false);\n  const addPromptRespond = res => setAddPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.addTab(res));\n\n  const [renamePromptOpen, setRenamePromptOpen] = React.useState(false);\n  const renamePromptRespond = res => setRenamePromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.renameTab({ tabID: tabOrder[currentTab], name: res }));\n\n  return (\n    <React.Fragment>\n      <TabView\n        tabs={tabOrder.map(tabID => tabs[tabID].name)}\n        render={i => <BoardView tabInfo={{ tab: tabs[tabOrder[i]], index: i }} />}\n        addTab={() => setAddPromptOpen(true)}\n        renameTab={() => setRenamePromptOpen(true)}\n        deleteTab={() => Object.values(tabs).length > 1 ? setConfirmOpen(true) : alert(\"Cannot delete only tab\")}\n        moveTab={data => dispatch(duck.moveTab(data))}\n        children={<UndoRedo />}\n        index={currentTab} setIndex={setCurrentTab}\n      />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this tab?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {addPromptOpen && (\n        <PromptDialog open respond={addPromptRespond} title=\"Add tab\" label=\"Name\" />\n      )}\n      {renamePromptOpen && (\n        <PromptDialog open respond={renamePromptRespond}\n          title={`Rename tab ${tabs[tabOrder[currentTab]].name}`} label=\"Name\" />\n      )}\n    </React.Fragment>\n  );\n}\n","\nimport * as React from 'react';\nimport { useHashLocation, parseWikilinks, generateID } from '../common/utils';\nimport { selectors } from '../store';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Markdown } from '../components';\nimport { makeStyles, TextField, Button, ButtonGroup } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport * as duck from '../ducks/kanban.js';\n\nexport default () => {\n  const [loc, setLoc] = useHashLocation();\n  const dispatch = useDispatch();\n\n  const currentCardID = loc.split('/')[2] || 'main'; //#/notes/ID\n  const setCurrentCardID = id => setLoc(`/notes/${id}`);\n\n  const editing = loc.split('/')[3] === 'edit'; //#/notes/ID/edit\n  const setEditing = yes => yes ? setLoc(`/notes/${currentCardID}/edit`) : setLoc(`/notes/${currentCardID}`);\n\n  const cards = useSelector(selectors.boards.cards);\n\n  // the deleteZettel action won't work for cards in the Kanban board as it assumes no columns contain it\n  const deleteZettel = () => (dispatch(duck.deleteCard(currentCardID)), setLoc('/notes/main'));\n  const saveZettel = zettel => dispatch(duck.editZettel({ zettel }));\n\n  const addZettel = () => {\n    // create a new card and navigate to editing it\n    setEditing(false);\n    const id = generateID();\n    dispatch(duck.addZettel({ zettel: { content: 'New note', description: '...', id } }));\n    // TODO: there *must* be a better way to do this...\n    setTimeout(() => (setContent(\"New note\"), setDescription(\"...\"), setLoc(`/notes/${id}/edit`)), 500);\n  };\n\n  const card = cards[currentCardID];\n  const [content, setContent] = React.useState(card ? card.content : '');\n  const [description, setDescription] = React.useState(card ? card.description : '');\n  if (!card) return null;\n\n  // TODO: <Zettel> is the wrong abstraction; merge it back into this component to avoid passing down every prop ever made\n  return (\n    <div>\n      <Zettel card={card} cards={cards} editing={editing}\n        setEditing={setEditing} deleteZettel={deleteZettel} saveZettel={saveZettel}\n        addZettel={addZettel} content={content} setContent={setContent}\n        description={description} setDescription={setDescription} />\n    </div>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    background: '#DFEEEE',\n    position: 'absolute',\n    top: 0, left: 0, bottom: 0, right: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    padding: 10,\n  },\n  zettel: {\n    background: 'white',\n    borderRadius: 5,\n    width: 650,\n    margin: 10,\n    marginTop: 70,\n    boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)',\n    padding: 16,\n    paddingTop: 8, paddingBottom: 12,\n    '&>p': {margin: 0},\n  },\n  zettelTitle: {\n    marginBottom: 8,\n    marginTop: 8,\n    fontSize: 24,\n    fontWeight: 600,\n    textAlign: 'center',\n  },\n  editingButtons: {\n    float: 'right',\n  },\n  buttons: {\n    position: 'absolute',\n    top: 15, left: 0, right: 0,\n    display: 'flex', justifyContent: 'center',\n  },\n}));\n\nconst Zettel = ({ card, cards, editing, setEditing, deleteZettel, saveZettel, addZettel,\n  content, setContent, description, setDescription }) => {\n  const styles = useStyles();\n\n  const cancel = () => setEditing(false);\n  const save = () => (saveZettel({ ...card, content, description }), cancel());\n\n  return (\n    <React.Fragment>\n      <div className={styles.container}>\n        {editing && (\n          <div className={styles.zettel}>\n            <TextField margin=\"dense\" autoFocus fullWidth\n              multiline rowsMax={3} value={content} onChange={e => setContent(e.target.value)} />\n            <TextField margin=\"dense\" fullWidth variant=\"outlined\"\n              multiline rows={6} rowsMax={16} value={description} onChange={e => setDescription(e.target.value)} />\n            <div className={styles.editingButtons}>\n              <Button onClick={cancel} color=\"primary\">Cancel</Button>\n              <Button onClick={save} color=\"primary\" variant=\"contained\">Save</Button>\n            </div>\n          </div>\n        )}\n        <div className={styles.zettel + (editing ? ' notes-editing' : '')}>\n          <div className={styles.zettelTitle}>\n            {editing ? content : card.content}\n          </div>\n          <Markdown source={editing ? description : card.description} cards={cards} />\n        </div>\n      </div>\n      <div className={styles.buttons} id='zettel-buttons-container'>\n        <ButtonGroup variant='contained' color='primary'>\n          {!editing && (\n            <Button onClick={() => setEditing(true)}>\n              <EditIcon />\n            </Button>\n          )}\n          {card.id !== 'main' && (\n            <Button onClick={deleteZettel}>\n              <DeleteIcon />\n            </Button>\n          )}\n          <Button onClick={addZettel}>\n            <AddIcon />\n          </Button>\n        </ButtonGroup>\n      </div>\n    </React.Fragment>\n  );\n};\n","\n/**\n * app.js\n * Main JSX source file for the app\n * Details like screen size and renderer are abstracted away by index.[platform].js\n * and ../index.js\n */\n\nimport React from 'react';\nimport { StyleSheet, Text, View, Platform } from 'react-native';\nimport { Provider } from 'react-redux';\nimport { useHashLocation } from './common/utils';\n// import { createMuiTheme, ThemeProvider } from '@material-ui/core';\n\nimport { Button, MenuBar } from './components';\nimport Kanban from './kanban';\nimport Zettelkasten from './zettelkasten';\nimport store, { globalSelectors as sel } from './store';\n\nconst screenNames = [\"/board\", \"/notes\"];\nconst getScreen = loc => {\n  const name = \"/\" + loc.split(\"/\")[1]; // strip to / or /board, etc\n  return Math.max(screenNames.indexOf(name), 0);\n};\nconst getScreenName = n => {\n  if (n === 0) {\n    // boards get special treatment of /board/FIRST_TAB\n    const state = sel.boards(store.getState());\n    return \"/board/\" + state.tabs[state.tabOrder[0]].name.toLowerCase();;\n  } else return screenNames[n];\n}\n\n// const theme = createMuiTheme({\n//   palette: {\n//     // primary: { main: '#1976d2', dark: '#1466b8' },\n//   },\n// });\n\nexport default () => {\n  const [loc, setLoc] = useHashLocation();\n  const active = getScreen(loc);\n  const setActive = n => setLoc(getScreenName(n));\n  const style = Platform.OS === \"web\"\n    ? { height: \"calc(100% - 48px)\" }\n    : { flexGrow: 1 };\n\n  return (\n    <Provider store={store}>\n      {/*<ThemeProvider theme={theme}>*/}\n        <View style={{ top: 0, left: 0, height: \"100%\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n\n          <View style={style}>\n            { active === 0 && (\n              <Kanban />\n            )}\n            { active === 1 && (\n              <Zettelkasten />\n            )}\n          </View>\n\n          <MenuBar active={active} setActive={setActive} />\n\n        </View>\n      {/*</ThemeProvider>*/}\n    </Provider>\n  );\n}\n","\nimport { registerRootComponent } from 'expo';\n\nimport Application from './src/index';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(Application);\n","\n/**\n * index.web.js\n * Simple Application wrapper that implements web-specific functionality\n */\n\nimport React from 'react';\nimport Application from './app';\n\nexport default props => (\n  <Application style={{ top: 0, left: 0, height: \"100%\", width: \"100%\" }} />\n);\n"],"sourceRoot":""}