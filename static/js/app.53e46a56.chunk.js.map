{"version":3,"sources":["web-build/register-service-worker.js","src/components/tabview.js","src/components/button.js","src/components/menubar.js","src/components/popovermenu.js","src/components/undoredo.js","src/components/dialogs.js","src/common/utils.js","src/ducks/kanban.js","src/kanban/boardview.js","src/kanban/index.js","src/store.js","src/app.js","src/index.web.js","index.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","TabPanel","show","children","hidden","tabs","render","React","value","setValue","style","flex","AppBar","position","backgroundColor","zIndex","Tabs","onChange","event","newValue","indicatorColor","textColor","map","tab","Tab","label","key","View","flexGrow","i","makeStyles","theme","button","active","setActive","Fragment","color","top","bottom","Toolbar","minHeight","IconButton","edge","onClick","log","e","val","TabIndicatorProps","verticalAlign","anchorEl","setAnchorEl","handleClose","keepMounted","open","Boolean","onClose","Object","entries","name","func","MenuItem","currentTarget","dispatch","useDispatch","ActionCreators","undo","redo","ConfirmDialog","respond","title","subtitle","labels","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","variant","autoFocus","PromptDialog","inputType","placeholder","buttons","done","x","TextField","margin","fullWidth","type","target","generateID","Math","random","toString","substring","dummyState","initial","id","colnums","numcards","reduce","a","b","cards","push","content","columns","cnt","length","items","slice","card","dummyCols","colIDs","col","transferCard","createAction","reorderCard","addCard","editCardContent","deleteCard","addColumn","deleteColumn","renameColumn","_getCardByID","state","filter","indexFromID","list","item","indexOf","deleteByID","splice","deleteInList","elem","index","initialState","localStorage","hasOwnProperty","JSON","parse","getItem","loadState","reducer","createReducer","s","srcColIdx","payload","srcColID","dstColIdx","dstColID","srcCol","dstCol","srcIndex","removed","dstIndex","colIdx","colID","newitems","cardID","unshift","forEach","tabID","undoable","useStyles","root","height","display","flexDirection","flexWrap","padding","column","background","paddingBottom","width","border","borderRadius","maxHeight","overflow","draggingOverColumn","columnHeaderContainer","justifyContent","columnHeaderText","marginBottom","fontFamily","fontWeight","fontSize","columnHeaderRule","cardWidth","marginLeft","userSelect","grid","boxShadow","draggingCard","tabInfo","tabObj","styles","useSelector","_getColByID","duck","boards","present","promptOpen","setPromptOpen","onDragEnd","res","destination","source","droppableId","className","add","Column","editingNew","setEditingNew","editingValue","setEditingValue","addButton","menuButton","provided","snapshot","ref","innerRef","classNames","isDraggingOver","menu","overflowY","overflowX","cancel","EditingCard","multiline","rowsMax","ButtonGroup","size","ColumnHeader","confirmOpen","setConfirmOpen","Chip","Card","draggableId","draggableProps","dragHandleProps","isDragging","split","AddColumn","alignItems","combineReducers","store","configureStore","document","ctrlKey","which","UndoActionCreators","shiftKey","subscribe","serialised","stringify","setItem","saveState","getState","useState","Platform","OS","left","registerRootComponent","props"],"mappings":"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","file":"static/js/app.53e46a56.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/Mirror/expo-service-worker.js', { scope: '/Mirror/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","\n/**\n * TabView component\n *\n * <TabView\n *   tabs={[\"one\", \"two\", \"three\"]}\n *   render={i => (<SomeComponent index={i} />)}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { AppBar, Tabs, Tab, Typography, Box } from '@material-ui/core';\n\nconst TabPanel = ({ show, children }) => (\n  <div hidden={!show}>\n    {show && children}\n  </div>\n);\n\nexport default ({ tabs, render, children }) => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => setValue(newValue);\n\n  return (\n    <div style={{ flex: 1 }}>\n      <AppBar position=\"static\" style={{\n          backgroundColor: \"white\",\n          zIndex: 2, position: 'relative'\n        }}>\n        <Tabs value={value} onChange={handleChange}\n          indicatorColor=\"primary\" textColor=\"primary\">\n          {tabs.map(tab => (\n            <Tab label={tab} key={tab} />\n          ))}\n          <View style={{flexGrow: 1}}></View>\n          {children}\n        </Tabs>\n      </AppBar>\n      {tabs.map((tab, i) => (\n        <TabPanel show={value === i} key={tab}>\n          {value === i && render(i)}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({ button: {} }));\n\nexport default props => (\n  <Button className={useStyles().button} variant=\"contained\" color=\"primary\" {...props} />\n);\n","\n/**\n * MenuBar component\n *\n * <MenuBar active={0} setActive={...} />\n *  (active is index of current screen)\n *\n */\n\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Tabs, Tab } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport NotesIcon from '@material-ui/icons/Notes';\n\nexport default ({ active, setActive }) => {\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" style={{ top: 'auto', bottom: 0 }}>\n        <Toolbar style={{ minHeight: 0 }}>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => console.log(\"open menu\")}>\n            <MenuIcon />\n          </IconButton>\n          <Tabs\n            value={active} onChange={(e, val) => setActive(val)}\n            TabIndicatorProps={{ style: { backgroundColor: 'white' } }}\n          >\n            <Tab label={<div><DeveloperBoardIcon style={{verticalAlign: 'middle'}} /> Board</div>}  />\n            <Tab label={<div><NotesIcon style={{verticalAlign: 'middle'}} /> Notes</div>}  />\n          </Tabs>\n          <div style={{ flexGrow: 1 }} />\n          <IconButton edge=\"end\" color=\"inherit\">\n            <MoreIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","\n// Popover menu (web)\nimport * as React from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\n\n\nexport default ({ map, children }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => setAnchorEl(null);\n\n  return (\n    <React.Fragment>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}>\n        {Object.entries(map).map(([name, func]) => (\n          <MenuItem key={name}\n            onClick={() => { handleClose(); func() }}>\n            {name}\n          </MenuItem>\n        ))}\n      </Menu>\n      {React.cloneElement(children, {\n        onClick: e => setAnchorEl(e.currentTarget)\n      })}\n    </React.Fragment>\n  );\n}\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport { ActionCreators } from 'redux-undo'\n\nexport default () => {\n  const dispatch = useDispatch();\n  return (\n    <React.Fragment>\n      <IconButton onClick={() => dispatch(ActionCreators.undo())}>\n        <UndoIcon />\n      </IconButton>\n      <IconButton onClick={() => dispatch(ActionCreators.redo())}>\n        <RedoIcon />\n      </IconButton>\n    </React.Fragment>\n  );\n};\n","\nimport * as React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent,\n         DialogContentText, DialogTitle, TextField } from '@material-ui/core';\n\n// TODO: can we have a promise API for generating dialogs on the fly and getting their results?\n// This method means the user has to manage 'open' state\nexport const ConfirmDialog = ({ open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"] }) => {\n  return (\n    <Dialog open={open} onClose={() => respond(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {subtitle}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => respond(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => respond(true)} color=\"primary\" variant=\"contained\" autoFocus>\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const PromptDialog = ({\n  open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"],\n  label, inputType = \"text\", placeholder = \"\", buttons = null\n}) => {\n  const [value, setValue] = React.useState(placeholder);\n  const done = x => { respond(x); setValue(placeholder) };\n  return (\n    <Dialog open={open} onClose={() => done(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        {typeof subtitle === \"string\" && (\n          <DialogContentText>\n            {subtitle}\n          </DialogContentText>\n        )}\n        <TextField autoFocus margin=\"dense\" fullWidth\n          label={label} type={inputType} value={value} onChange={e => setValue(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        {buttons}\n        <Button onClick={() => done(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => done(value)} color=\"primary\" variant=\"contained\">\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","\n// random ID: base64 encoded 8 char string of random number and current time\nexport const generateID = () => Math.random().toString().substring(15);\n\n// generate { cards, columns } where each column has colnum[i] cards\n// both of these are objects where the keys are unique IDs\n// cards are { id, content } structs\n// todo: make them arrays containing their IDs and write selectors instead\n// columns are { id, items: [ id ] } structs\n// Example: {\n//   cards: [{ id: \"a\", content: \"Item 1\" }],\n//   columns: [{ id: \"b\", items: [\"a\"] }],\n//   tabs: [{ name: \"Main\", columns: [\"b\"] }]\n// }\nexport const dummyCols = colnums => {\n  let numcards = colnums.reduce((a, b) => a + b, 0);\n  let cards = [];\n  for (let i = 0; i < numcards; i++) {\n    let id = (i+1).toString() + \"-\" + generateID();\n    cards.push({ id, content: `Item ${i+1}` });\n  }\n  let columns = [];\n  for (let i = 0, cnt = 0; i < colnums.length; i++) {\n    let items = cards.slice(cnt, cnt + colnums[i]).map(card => card.id);\n    let id = (i + 1).toString() + \"-\" + generateID();\n    columns.push({ id, items, name: `Column (${id})` });\n    cnt += colnums[i];\n  }\n  return { cards, columns };\n};\n\nexport const dummyState = () => {\n  let initial = {\n    tabs: [{ name: \"Main\", id: generateID() }, { name: \"Secondary\", id: generateID() }],\n    ...dummyCols([12,9,6,8,10])\n  };\n  const colIDs = initial.columns.map(col => col.id);\n  initial.tabs[0].columns = [colIDs[0], colIDs[1], colIDs[2]];\n  initial.tabs[1].columns = [colIDs[3], colIDs[4]];\n  return initial;\n}\n\n// load persisted state\nexport const loadState = () => {\n  try {\n    // web\n    if (localStorage.hasOwnProperty(\"kanban\"))\n      return JSON.parse(localStorage.getItem(\"kanban\"));\n    else\n      return dummyState();\n  } catch (e) {\n    // native\n    return dummyState();\n  }\n}\n\nexport const saveState = state => {\n  try {\n    if (localStorage) {\n      const serialised = JSON.stringify(state);\n      localStorage.setItem(\"kanban\", serialised);\n    }\n  } catch (e) {}\n}\n","\n/**\n * Kanban boards core Redux logic\n *\n * State is normalised as { tabs, columns, cards }\n *  where each tab has several columns which contain cards\n *  each has a unique ID as a key in the respective object\n */\n\nimport { createReducer, createAction, createSelector } from '@reduxjs/toolkit';\nimport undoable from 'redux-undo';\nimport { loadState, generateID } from '../common/utils';\n\n// Action creators\n\nexport const transferCard = createAction('kanban/TRANSFER_CARD');\nexport const reorderCard = createAction('kanban/REORDER_CARD');\nexport const addCard = createAction('kanban/ADD_CARD'); // takes { content, colID }\nexport const editCardContent = createAction('kanban/EDIT_CARD_CONTENT');//takes {content, cardID}\nexport const deleteCard = createAction('kanban/DELETE_CARD');//takes cardID\n\nexport const moveCard = (srcColID, dstColID, srcIndex, dstIndex) =>\n  srcColID === dstColID\n    ? reorderCard({ colID: srcColID, srcIndex, dstIndex })\n    : transferCard({ srcColID, dstColID, srcIndex, dstIndex });\n\nexport const addColumn = createAction('kanban/ADD_COLUMN'); // takes { name, tabID }\nexport const deleteColumn = createAction('kanban/DELETE_COLUMN'); // takes string column ID\nexport const renameColumn = createAction('kanban/RENAME_COLUMN'); // takes { colID, name }\n\n// Selectors\n\nconst _getColByID = state => id => state.columns.filter(col => col.id === id)[0];\nconst _getCardByID = state => id => state.cards.filter(card => card.id === id)[0];\n\nconst indexFromID = (list, id) => list.map(item => item.id === id).indexOf(true);\nconst deleteByID = list => id => list.splice(indexFromID(list, id), 1);\nconst deleteInList = (list, elem) => {\n  let index = list.indexOf(elem);\n  if (index !== -1) list.splice(index, 1); // undesired behaviour when splicing at (-1, 1)\n};\n\n// higher order function which creates a selector for a specific tab\n// it un-normalises the state for that tab, returning:\n// return :: List[column], column :: { id, items: List[card] }, card :: { id, content }\nexport const getColumnsInTab = tab => state =>\n  state.tabs[tab].columns.map(_getColByID(state))\n    .map(col => ({\n      ...col, items: col.items.map(_getCardByID(state))\n    }));\n\n// Reducers\n\nconst initialState = loadState();\n\nconst reducer = createReducer(initialState, {\n  [transferCard]: (s, a) => {\n    const srcColIdx = indexFromID(s.columns, a.payload.srcColID);\n    const dstColIdx = indexFromID(s.columns, a.payload.dstColID);\n\n    let srcCol = s.columns[srcColIdx].items;\n    let dstCol = s.columns[dstColIdx].items;\n    const [removed] = srcCol.splice(a.payload.srcIndex, 1);\n    dstCol.splice(a.payload.dstIndex, 0, removed);\n  },\n  [reorderCard]: (s, a) => {\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    let newitems = s.columns[colIdx].items;\n    const [removed] = newitems.splice(a.payload.srcIndex, 1);\n    newitems.splice(a.payload.dstIndex, 0, removed);\n    s.columns[colIdx].items = newitems;\n  },\n  [addCard]: (s, a) => {\n    const { content, colID } = a.payload;\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    const cardID = generateID();\n    s.cards.push({ id: cardID, content });   // add to cards list\n    s.columns[colIdx].items.unshift(cardID); // add to top of column\n  },\n  [deleteColumn]: (s, a) => {\n    const colIdx = indexFromID(s.columns, a.payload);\n    s.columns[colIdx].items.forEach(deleteByID(s.cards));\n    s.tabs.forEach(tab => deleteInList(tab.columns, a.payload));\n    deleteByID(s.columns)(a.payload);\n  },\n  [renameColumn]: (s, a) => {\n    s.columns[indexFromID(s.columns, a.payload.colID)].name = a.payload.name;\n  },\n  [editCardContent]: (s, a) => {\n    s.cards[indexFromID(s.cards, a.payload.cardID)].content = a.payload.content;\n  },\n  [deleteCard]: (s, a) => {\n    const cardIdx = indexFromID(s.cards, a.payload);\n    s.columns.forEach(col => deleteInList(col.items, a.payload));\n    deleteByID(s.cards)(a.payload);\n  },\n  [addColumn]: (s, a) => {\n    const id = generateID();\n    s.columns.push({ id, items: [], name: a.payload.name });\n    s.tabs[indexFromID(s.tabs, a.payload.tabID)].columns.push(id);\n  },\n});\n\nexport default undoable(reducer);\n","\n/**\n * BoardView component\n *\n * <BoardView\n *   tab={tabIndex}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\nimport { View, Text } from 'react-native';\nimport { makeStyles, Button, IconButton, ButtonGroup, TextField, Chip } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport classNames from 'classnames';\nimport { PopoverMenu, ConfirmDialog, PromptDialog } from '../components';\n\nconst grid = 8;\nconst cardWidth = 350;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    padding: grid\n  },\n  column: {\n    background: '#DFEEEE',\n    padding: grid,\n    paddingBottom: 24,\n    width: cardWidth,\n    border: '1px solid #CCDCDC',\n    borderRadius: 5,\n    margin: grid,\n\n    // TODO: install react-custom-scrollbars and use this instead with autohide\n    // there is a bug where moving cards to the tallest column leads to a scrollbar flashing up\n    // and we don't want the scrollbar to take up horizontal space and force the cards to reflow\n\n    maxHeight: 'calc(100vh - 160px)',\n    overflow: 'hidden'\n  },\n  draggingOverColumn: {\n    background: '#DAEBEB',\n    border: '1px solid #BBCBCB'\n  },\n  columnHeaderContainer: {\n    padding: \"8 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  columnHeaderText: {\n    marginBottom: 4,\n    fontFamily: 'sans-serif',\n    fontWeight: 500,\n    fontSize: '1.2em'\n  },\n  columnHeaderRule: {\n    overflow: \"hidden\",\n    border: \"none\",\n    color: \"#CCDCDC\",\n    backgroundColor: \"#CCDCDC\",\n    height: \"1px\",\n    width: cardWidth + grid * 2 + 1, //+1 is border\n    marginLeft: -(grid+1)\n  },\n  card: {\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    background: 'white',\n    borderRadius: 5,\n    overflow: 'hidden',\n    \"&:hover, &:focus\": {\n      boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n    },\n    \"&>p\": {\n      margin: 0\n    }\n  },\n  draggingCard: {\n    background: 'rgba(255, 255, 255, 0.6)',\n    boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n  }\n}));\n\nexport default ({ tabInfo }) => {\n  const tab = tabInfo.index;\n  const tabObj = tabInfo.tab;\n  const dispatch = useDispatch();\n  const styles = useStyles();\n\n  // TODO: is there a way to memoise these higher order selectors?\n  // TODO: how do we deal with .boards namespace being only needed part of the time\n  const columns = useSelector(state => duck.getColumnsInTab(tab)(state.boards.present));\n\n  // dispatch move card action\n  const onDragEnd = res => res.destination ? dispatch(duck.moveCard(\n    res.source.droppableId, res.destination.droppableId,\n    res.source.index, res.destination.index\n  )) : null;\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = name => setPromptOpen(false) ||\n    typeof name === \"string\" && name.length &&\n      dispatch(duck.addColumn({ tabID: tabObj.id, name }));\n\n  return (\n    <View>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div className={styles.root}>\n          {columns.map(col => <Column col={col} styles={styles} key={col.id} />)}\n          <AddColumn styles={styles} add={() => setPromptOpen(true)} />\n        </div>\n      </DragDropContext>\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title=\"Add column\" label=\"Name\" />\n      )}\n    </View>\n  );\n}\n\nconst Column = ({ styles, col }) => {\n  const { id, items, name } = col;\n\n  const [editingNew, setEditingNew] = React.useState(false);\n  const [editingValue, setEditingValue] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const addCard = () => {\n    if (editingValue.length)\n      dispatch(duck.addCard({\n        content: editingValue,\n        colID: id\n      }));\n    setEditingValue(\"\");\n    setEditingNew(false);\n  };\n  const addButton = () => {\n    if (editingNew)\n      setEditingValue(\"\");\n    setEditingNew(!editingNew);\n  };\n  const menuButton = () => {\n    console.log('pressed menu button');\n  };\n\n  return (\n    <Droppable droppableId={id} style={{ flexGrow: 1 }}>\n      {(provided, snapshot) => (\n        <div ref={provided.innerRef}\n          className={classNames(\n            styles.column,\n            {[styles.draggingOverColumn]: snapshot.isDraggingOver }\n          )}>\n          <ColumnHeader styles={styles} col={col} add={addButton} menu={menuButton} />\n          <div style={{ width: cardWidth, overflowY: 'auto', overflowX: 'hidden', height: \"100%\" }}>\n            {editingNew && (\n              <EditingCard value={editingValue} setValue={setEditingValue}\n                add={addCard} cancel={() => { setEditingValue(\"\"); setEditingNew(false) }} />\n            )}\n            <div style={{ width: cardWidth }}> {/* could -20 to avoid clipping cards */}\n              {items.map((card, index) => <Card card={card} styles={styles} index={index} key={card.id} />)}\n            </div>\n          </div>\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  );\n}\n\nconst EditingCard = ({ value, setValue, add, cancel }) => {\n  return (\n    <div>\n      <TextField\n        label=\"New Card\"\n        multiline\n        rowsMax={6}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        variant=\"filled\"\n        style={{ width: \"100%\" }} />\n      <ButtonGroup variant=\"contained\" size='small'\n        style={{marginBottom: 8, boxShadow: \"0px 4px 2px -2px rgba(0,0,0,0.15)\", width: \"100%\"}}>\n        <Button style={{flexGrow: 1}} variant='contained' onClick={add}>\n          Done\n        </Button>\n        <Button onClick={cancel}><DeleteIcon style={{color: '#555'}} /></Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\n// header name, add button, chips for each addon (WIP limit, EBS time estimate, etc), menu button\nconst ColumnHeader = ({ styles, col, add, menu }) => {\n  const dispatch = useDispatch();\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => setConfirmOpen(false) ||\n    res === true && dispatch(duck.deleteColumn(col.id));\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = res => setPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.renameColumn({ colID: col.id, name: res }));\n\n  return (\n    <div>\n      <div className={styles.columnHeaderContainer}>\n        <div className={styles.columnHeaderText}>\n          {col.name}\n        </div>\n        <div>\n          <Chip size='small' label=\"0/6\" />\n          <Chip size='small' label=\"3h\" />\n          <IconButton size='small' onClick={() => add()}>\n            <AddIcon />\n          </IconButton>\n          <PopoverMenu map={{\n            \"Rename\": () => setPromptOpen(true),\n            \"Delete\": () => setConfirmOpen(true),\n          }}>\n            <IconButton size='small'>\n              <MoreVertIcon />\n            </IconButton>\n          </PopoverMenu>\n        </div>\n      </div>\n      <hr className={styles.columnHeaderRule} />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this column?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title={`Rename column \"${col.name}\"`} subtitle=\"Don't worry, this action can be undone.\"\n          label=\"Name\" placeholder={col.name} />\n      )}\n    </div>\n  );\n};\n\nconst Card = ({ card, styles, index }) => {\n  const { id, content } = card;\n  const dispatch = useDispatch();\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = res => setPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.editCardContent({ cardID: id, content: res }));\n\n  const deleteCard = () => dispatch(duck.deleteCard(id));\n\n  return (\n    <React.Fragment>\n      <Draggable draggableId={id} index={index}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={classNames(styles.card, { [styles.draggingCard]: snapshot.isDragging })}\n            style={provided.draggableProps.style}\n            onClick={() => setPromptOpen(true)}>\n            {content.split('\\n').map((x,i)=><p key={i}>{x}</p>)}\n          </div>\n        )}\n      </Draggable>\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title=\"Edit card\" label=\"Contents\" placeholder={content}\n          buttons={<Button onClick={deleteCard}>Delete</Button>} />\n      )}\n    </React.Fragment>\n  );\n}\n\nconst AddColumn = ({ styles, add }) => {\n  return (\n    <div className={styles.column} style={{\n        width: cardWidth, display: 'flex', justifyContent: 'center',\n        alignItems: 'center', height: '100px'\n      }}>\n      <IconButton onClick={add}>\n        <AddIcon />\n      </IconButton>\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { TabView, UndoRedo } from '../components';\nimport BoardView from './boardview';\n\nexport default () => {\n  // -> [{name, id, columns (ids)},...]\n  const tabs = useSelector(state => state.boards.present.tabs);\n  return (\n    <TabView\n      tabs={tabs.map(tab => tab.name)}\n      render={i => (<BoardView tabInfo={{ tab: tabs[i], index: i }} />)}\n      children={<UndoRedo />}/>\n  );\n}\n","\nimport { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport boards from './ducks/kanban';\nimport { saveState } from './common/utils';\n\nconst reducer = combineReducers({\n  boards,\n  // notes,\n});\n\nconst store = configureStore({ reducer });\n\n// Undo/redo keyboard shortcuts if supported\ntry {\n  document.addEventListener('keyup', e => {\n    if (e.ctrlKey && e.which === 90)\n      store.dispatch(UndoActionCreators.undo());\n    else if (e.ctrlKey && e.shiftKey && e.which === 90 || e.ctrlKey && e.which === 89)\n      store.dispatch(UndoActionCreators.redo());\n  });\n} catch (e) {}\n\n// Save board state (excluding history)\n// TODO: how can we include history? We cannot serialise all state easily with our combineReducers\n// approach unfortunately\nstore.subscribe(() => saveState(store.getState().boards.present));\n\nexport default store;\n","\n/**\n * app.js\n * Main JSX source file for the app\n * Details like screen size and renderer are abstracted away by index.[platform].js\n * and ../index.js\n */\n\nimport React from 'react';\nimport { StyleSheet, Text, View, Platform } from 'react-native';\nimport { Provider } from 'react-redux';\n\nimport { Button, MenuBar } from './components';\nimport Kanban from './kanban';\nimport store from './store';\n\nexport default () => {\n  const [active, setActive] = React.useState(0);\n  const style = Platform.OS === \"web\"\n    ? { maxHeight: \"calc(100% - 48px)\" }\n    : { flexGrow: 1 };\n\n  return (\n    <Provider store={store}>\n      <View style={{ top: 0, left: 0, height: \"100%\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n\n        <View style={style}>\n          { active === 0 && (\n            <Kanban />\n          )}\n        </View>\n\n        <MenuBar active={active} setActive={setActive} />\n\n      </View>\n    </Provider>\n  );\n}\n","\n/**\n * index.web.js\n * Simple Application wrapper that implements web-specific functionality\n */\n\nimport React from 'react';\nimport Application from './app';\n\n// Simple hack to customize the title because we cannot edit the HTML itself.\ntry {\n  document.title = \"Mirror App\";\n} catch (e) {}\n\nexport default props => (\n  <Application style={{ top: 0, left: 0, height: \"100%\", width: \"100%\" }} />\n);\n","\nimport { registerRootComponent } from 'expo';\n\nimport Application from './src/index';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(Application);\n"],"sourceRoot":""}