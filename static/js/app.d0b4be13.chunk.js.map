{"version":3,"sources":["web-build/register-service-worker.js","src/components/popovermenu.js","src/components/tabview.js","src/components/button.js","src/components/menubar.js","src/components/undoredo.js","src/common/utils.js","src/ducks/kanban.js","src/store.js","src/components/dialogs.js","src/kanban/boardview.js","src/kanban/index.js","src/app.js","index.js","src/index.web.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","map","children","React","anchorEl","setAnchorEl","handleClose","Menu","keepMounted","open","Boolean","onClose","Object","entries","name","func","MenuItem","key","onClick","e","currentTarget","TabPanel","show","hidden","style","height","tabs","render","index","setIndex","addTab","renameTab","deleteTab","moveTab","handleChange","event","newValue","length","flex","AppBar","position","backgroundColor","zIndex","Tabs","value","onChange","indicatorColor","textColor","tab","Tab","label","View","flexGrow","IconButton","i","makeStyles","theme","button","active","setActive","Fragment","color","top","bottom","Toolbar","minHeight","edge","log","val","TabIndicatorProps","verticalAlign","prompt","localStorage","kanban","clear","dispatch","useDispatch","ActionCreators","undo","redo","generateID","Math","random","toString","substring","dummyState","initial","id","colnums","colnames","numcards","reduce","a","b","cards","sampleCards","push","content","floor","columns","cnt","items","slice","card","dummyCols","colIDs","col","prettyPrintDate","epochMilliseconds","date","Date","now","time","getHours","getMinutes","fn","getTime","diff","getDate","transferCard","createAction","reorderCard","addCard","editCardContent","editCard","deleteCard","addColumn","deleteColumn","renameColumn","moveColumn","archiveCardsInColumn","indexFromID","list","item","indexOf","deleteByID","splice","deleteInList","elem","selectors","getColumnsInTabs","state","_","archivedCards","filter","keys","activeCards","initialState","hasOwnProperty","JSON","parse","getItem","loadState","_deleteColumn","s","colIdx","forEach","cardID","reducer","createReducer","srcColIdx","payload","srcColID","dstColIdx","dstColID","srcCol","dstCol","srcIndex","removed","dstIndex","colID","newitems","unshift","tabID","srcIdx","dstIdx","tabIdx","archived","undoable","limit","combineReducers","boards","store","configureStore","document","ctrlKey","which","UndoActionCreators","shiftKey","localStorageSubscriber","serialised","stringify","setItem","saveState","getState","present","subscribe","object","mapFn","globalSelectors","boardSelectors","localSelector","result","ConfirmDialog","respond","title","subtitle","labels","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","variant","autoFocus","PromptDialog","inputType","placeholder","buttons","setValue","done","x","TextField","margin","fullWidth","type","target","CardEditDialog","currentColID","useSelector","sel","newCard","setCard","setContent","setDateTime","editingDescription","setEditingDescription","labelIDs","maxWidth","InputLabel","Select","labelId","flatMap","ListSubheader","getColIdxByID","multiline","rowsMax","ClickAwayListener","onClickAway","rows","description","undefined","marginTop","source","utils","DateFnsUtils","DateTimePicker","newDate","showTodayButton","format","float","duck","useStyles","root","display","flexDirection","flexWrap","padding","fontSize","flexShrink","column","background","paddingBottom","width","border","borderRadius","transition","overflow","columnHeaderContainer","justifyContent","columnHeaderText","paddingLeft","columnHeaderRule","cardWidth","marginLeft","userSelect","boxShadow","draggingCard","opacity","columnContainer","draggingColumn","tabInfo","tabObj","styles","promptOpen","setPromptOpen","overflowX","onDragEnd","res","destination","droppableId","direction","provided","snapshot","className","ref","innerRef","add","hide","isDraggingOver","draggingFromThisWith","Column","editingNew","setEditingNew","editingValue","setEditingValue","addButton","menuButton","internals","ignoreContainerClipping","overflowY","cancel","draggableId","draggableProps","isDragging","dragHandleProps","menu","EditingCard","ButtonGroup","size","marginBottom","ColumnHeader","confirmOpen","setConfirmOpen","Chip","Card","icons","NotesIcon","AccessTimeIcon","Icon","icon","split","join","AddColumn","alignItems","currentTab","setCurrentTab","addPromptOpen","setAddPromptOpen","renamePromptOpen","setRenamePromptOpen","alert","data","max","useState","Platform","OS","left","registerRootComponent","props"],"mappings":"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","file":"static/js/app.d0b4be13.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/Mirror/expo-service-worker.js', { scope: '/Mirror/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","\n// Popover menu (web)\nimport * as React from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\n\n\nexport default ({ map, children }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => setAnchorEl(null);\n\n  return (\n    <React.Fragment>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}>\n        {Object.entries(map).map(([name, func]) => (\n          <MenuItem key={name}\n            onClick={() => { handleClose(); func() }}>\n            {name}\n          </MenuItem>\n        ))}\n      </Menu>\n      {React.cloneElement(children, {\n        onClick: e => setAnchorEl(e.currentTarget)\n      })}\n    </React.Fragment>\n  );\n}\n","\n/**\n * TabView component\n *\n * <TabView\n *   tabs={[\"one\", \"two\", \"three\"]}\n *   render={i => (<SomeComponent index={i} />)}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { AppBar, Tabs, Tab, IconButton } from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport PopoverMenu from './popovermenu';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst TabPanel = ({ show, children }) => (\n  <div hidden={!show} style={{ height: 'calc(100% - 48px)' }}>\n    {show && children}\n  </div>\n);\n\nexport default ({\n  tabs, render, children, index, setIndex,\n  addTab, renameTab, deleteTab, moveTab\n}) => {\n  const handleChange = (event, newValue) => newValue >= 0 && newValue < tabs.length && setIndex(newValue);\n\n  return (\n    <div style={{ flex: 1 }}>\n      <AppBar position=\"static\" style={{\n          backgroundColor: \"white\",\n          zIndex: 2, position: 'relative'\n        }}>\n        <Tabs value={index} onChange={handleChange}\n          indicatorColor=\"primary\" textColor=\"primary\">\n          {tabs.map(tab => (\n            <Tab label={tab} key={tab} />\n          ))}\n          <View style={{flexGrow: 1}}></View>\n          <PopoverMenu map={{\n            \"Add tab\": () => addTab(),\n            \"Rename tab\": () => renameTab(index),\n            \"Delete tab\": () => deleteTab(index),\n            \"Move tab left\": () => (moveTab([index, index-1]), handleChange(null, index-1)),\n            \"Move tab right\": () => (moveTab([index, index+1]), handleChange(null, index+1)),\n          }}>\n            <IconButton>\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n          {children}\n        </Tabs>\n      </AppBar>\n      {tabs.map((tab, i) => (\n        <TabPanel show={index === i} key={tab}>\n          {index === i && render(i)}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({ button: {} }));\n\nexport default props => (\n  <Button className={useStyles().button} variant=\"contained\" color=\"primary\" {...props} />\n);\n","\n/**\n * MenuBar component\n *\n * <MenuBar active={0} setActive={...} />\n *  (active is index of current screen)\n *\n */\n\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Tabs, Tab } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport PopoverMenu from './popovermenu';\n\nexport default ({ active, setActive }) => {\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" style={{ top: 'auto', bottom: 0 }}>\n        <Toolbar style={{ minHeight: 0 }}>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => console.log(\"open menu\")}>\n            <MenuIcon />\n          </IconButton>\n          <Tabs\n            value={active} onChange={(e, val) => setActive(val)}\n            TabIndicatorProps={{ style: { backgroundColor: 'white' } }}\n          >\n            <Tab label={<div><DeveloperBoardIcon style={{verticalAlign: 'middle'}} /> Board</div>}  />\n            <Tab label={<div><NotesIcon style={{verticalAlign: 'middle'}} /> Notes</div>}  />\n          </Tabs>\n          <div style={{ flexGrow: 1 }} />\n          <PopoverMenu map={{\n            \"Export state\": () => window.prompt(\"Copy/paste this into a file\", localStorage.kanban),\n            \"Import state\": () => { localStorage.kanban = window.prompt(\"Paste your exported state here. Press cancel (or the undo button after pressing OK) to revert. Refresh the page to confirm and reload state.\") },\n            \"Clear saved state\": () => window.prompt(\"Delete all saved state? Pressing undo will fix this. Type YES to confirm\", \"NO\") === \"YES\" && localStorage.clear(),\n          }}>\n            <IconButton edge=\"end\" color=\"inherit\">\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport { ActionCreators } from 'redux-undo'\n\nexport default () => {\n  const dispatch = useDispatch();\n  return (\n    <React.Fragment>\n      <IconButton onClick={() => dispatch(ActionCreators.undo())}>\n        <UndoIcon />\n      </IconButton>\n      <IconButton onClick={() => dispatch(ActionCreators.redo())}>\n        <RedoIcon />\n      </IconButton>\n    </React.Fragment>\n  );\n};\n","\nimport * as fn from 'date-fns';\n\nexport const generateID = () => Math.random().toString().substring(2);\n\n// generate { cards, columns } where each column has colnum[i] cards\n// both of these are objects where the keys are unique IDs\n// cards are { id, content } structs\n// todo: make them arrays containing their IDs and write selectors instead\n// columns are { id, items: [ id ] } structs\n// Example: {\n//   cards: [{ id: \"a\", content: \"Item 1\" }],\n//   columns: [{ id: \"b\", items: [\"a\"] }],\n//   tabs: [{ name: \"Main\", columns: [\"b\"] }]\n// }\nexport const dummyCols = (colnums, colnames) => {\n  let numcards = colnums.reduce((a, b) => a + b, 0);\n  let cards = [];\n  let sampleCards = [\n    \"Wash the dishes\",\n    \"Make cool app\",\n    \"Run out of ideas for sample tasks for the app you're making\",\n    \"Cook pizza for dinner\",\n    \"Finish your chemistry homework\",\n    \"Write a tutorial explaining how monads are isomorphic to burritos in the category of food\",\n    \"Forget to wrap a line at 300 characters\",\n    \"Learn Common Lisp\",\n    \"Do normal human things\",\n    \"Prove P=NP for N=1\",\n    \"Eat some chocolate\",\n    \"Stop eating so much chocolate\",\n    \"Write witty comment\",\n    \"🙂\"];\n  for (let i = 0; i < numcards; i++) {\n    let id = (i+1).toString() + \"-\" + generateID();\n    cards.push({ id, content: sampleCards[Math.floor(Math.random()*sampleCards.length)] });\n  }\n  let columns = [];\n  for (let i = 0, cnt = 0; i < colnums.length; i++) {\n    let items = cards.slice(cnt, cnt + colnums[i]).map(card => card.id);\n    let id = (i + 1).toString() + \"-\" + generateID();\n    columns.push({ id, items, name: colnames[i] });\n    cnt += colnums[i];\n  }\n  return { cards, columns };\n};\n\n// generate initial dummy state\nexport const dummyState = () => {\n  let initial = {\n    tabs: [{ name: \"Main\", id: generateID() }, { name: \"Secondary\", id: generateID() }],\n    ...dummyCols([9,2,6,5,4], [\"To Do\",\"Doing\",\"Done\",\"Misc 1\",\"Misc 2\"])\n  };\n  const colIDs = initial.columns.map(col => col.id);\n  initial.tabs[0].columns = [colIDs[0], colIDs[1], colIDs[2]];\n  initial.tabs[1].columns = [colIDs[3], colIDs[4]];\n  return initial;\n}\n\n// load persisted state\nexport const loadState = () => {\n  try {\n    // web\n    if (localStorage.hasOwnProperty(\"kanban\")) {\n      const state = JSON.parse(localStorage.getItem(\"kanban\"));\n      if (state !== null) return state;\n    } else return dummyState();\n  } catch (e) {\n    // native\n    return dummyState();\n  }\n}\n\nexport const saveState = state => {\n  try {\n    if (localStorage) {\n      const serialised = JSON.stringify(state);\n      localStorage.setItem(\"kanban\", serialised);\n    }\n  } catch (e) {}\n}\n\n// Source: https://stackoverflow.com/a/14810722/4642943\n// returns a new object with the values at each key mapped using mapFn(value)\nexport const objectMap = (object, mapFn) =>\n  Object.keys(object).reduce(function(result, key) {\n    result[key] = mapFn(object[key])\n    return result\n  }, {});\n\n/**\n * Returns a heavily abbreviated pretty printed date using date-fns\n * - Only includes time if within a week and not midnight\n * - Only includes minutes if nonzero\n * - Replaces date with \"Tomorrow\" or \"Next Fri\" for days within a fortnight\n */\nexport const prettyPrintDate = epochMilliseconds => {\n  const date = new Date(epochMilliseconds);\n  const now = new Date();\n\n  const getDate = date => {\n    const diff = fn.differenceInCalendarDays(date, now);\n    if (diff === 0) return \"Today\";\n    else if (diff === -1) return \"Yesterday\";\n    else if (diff === 1) return \"Tomorrow\";\n    else if (diff > 0 && diff < 7) return fn.format(date, \"EEE\"); // ex: Wed\n    // else if (diff < 14) return fn.format(date, \"EEE\") + \" Week\"; // ex: Fri Week\n    else if (diff > -7 && diff < 0) return \"Last \" + fn.format(date, \"EEE\"); // ex: Last Fri\n    return fn.format(date, \"MMM do\"); // ex: Sep 17th\n  }\n\n  const getTime = date => {\n    if (date.getHours() === 0 && date.getMinutes() === 0) return null; // ignore time if midnight\n    if (date.getMinutes() === 0) return fn.format(date, \"haaa\"); // ex: 4PM\n    return fn.format(date, \"h:mmaaa\");\n  }\n\n  const time = getTime(date);\n  return getDate(date) + (time ? \" \" + time : \"\");\n};\n","\n/**\n * Kanban boards core Redux logic\n *\n * State is normalised as { tabs, columns, cards }\n *  where each tab has several columns which contain cards\n *  each has a unique ID as a key in the respective object\n */\n\nimport { createReducer, createAction, createSelector } from '@reduxjs/toolkit';\nimport undoable from 'redux-undo';\nimport { loadState, generateID } from '../common/utils';\n\n// Action creators\n\nexport const transferCard = createAction('kanban/TRANSFER_CARD');\nexport const reorderCard = createAction('kanban/REORDER_CARD');\nexport const addCard = createAction('kanban/ADD_CARD'); // takes { content, colID }\nexport const editCardContent = createAction('kanban/EDIT_CARD_CONTENT');//takes {content, cardID}\nexport const editCard = createAction('kanban/EDIT_CARD'); // takes a card object; allows editing all of a card's params\nexport const deleteCard = createAction('kanban/DELETE_CARD');//takes cardID\n\nexport const moveCard = ([srcColID, dstColID, srcIndex, dstIndex]) =>\n  srcColID === dstColID\n    ? reorderCard({ colID: srcColID, srcIndex, dstIndex })\n    : transferCard({ srcColID, dstColID, srcIndex, dstIndex });\n\nexport const addColumn = createAction('kanban/ADD_COLUMN'); // takes { name, tabID }\nexport const deleteColumn = createAction('kanban/DELETE_COLUMN'); // takes string column ID\nexport const renameColumn = createAction('kanban/RENAME_COLUMN'); // takes { colID, name }\nexport const moveColumn = createAction('kanban/MOVE_COLUMN'); // takes [srcIdx, dstIdx, tabIdx]\nexport const archiveCardsInColumn = createAction('kanban/ARCHIVE_ALL_COLUMN'); // takes colID\n\nexport const addTab = createAction('kanban/ADD_TAB'); // takes name\nexport const deleteTab = createAction('kanban/DELETE_TAB'); // takes tabIdx\nexport const renameTab = createAction('kanban/RENAME_TAB'); // takes { tabID, name }\nexport const moveTab = createAction('kanban/MOVE_TAB'); // takes [srcIdx, dstIdx]\n\n// Helpers\n\nconst indexFromID = (list, id) => list.map(item => item.id === id).indexOf(true);\nconst deleteByID = (list, id) => list.splice(indexFromID(list, id), 1);\nconst deleteInList = (list, elem) => {\n  let index = list.indexOf(elem);\n  if (index !== -1) list.splice(index, 1); // undesired behaviour when splicing at (-1, 1)\n};\n\n// Selectors\n\nexport const selectors = {\n  // higher order function which creates a selector for a specific tab\n  // it un-normalises the state for that tab, returning:\n  // return :: List[column], column :: { id, items: List[card] }, card :: { id, content }\n  getColumnsInTabs: state =>\n    state.tabs.map((_, tab) => state.tabs[tab].columns.map(col => state.columns[indexFromID(state.columns, col)])\n      .map(col => ({\n        ...col, items: col.items.map(card => state.cards[indexFromID(state.cards, card)])\n      }))),\n  columns: state => state.columns,\n  tabs: state => state.tabs,\n  cards: state => state.cards,\n  archivedCards: state => state.cards.filter(card => Object.keys(card).indexOf(\"archived\") !== -1),\n  activeCards:   state => state.cards.filter(card => Object.keys(card).indexOf(\"archived\") === -1),\n};\n\n// Reducers\n\nconst initialState = loadState();\n\nconst _deleteColumn = (s, id) => {\n  const colIdx = indexFromID(s.columns, id);\n  s.columns[colIdx].items.forEach(cardID => deleteByID(s.cards, cardID));\n  s.tabs.forEach(tab => deleteInList(tab.columns, id));\n  deleteByID(s.columns, id);\n};\n\nconst reducer = createReducer(initialState, {\n  [transferCard]: (s, a) => {\n    const srcColIdx = indexFromID(s.columns, a.payload.srcColID);\n    const dstColIdx = indexFromID(s.columns, a.payload.dstColID);\n\n    let srcCol = s.columns[srcColIdx].items;\n    let dstCol = s.columns[dstColIdx].items;\n    const [removed] = srcCol.splice(a.payload.srcIndex, 1);\n    dstCol.splice(a.payload.dstIndex, 0, removed);\n  },\n  [reorderCard]: (s, a) => {\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    let newitems = s.columns[colIdx].items;\n    const [removed] = newitems.splice(a.payload.srcIndex, 1);\n    newitems.splice(a.payload.dstIndex, 0, removed);\n    s.columns[colIdx].items = newitems;\n  },\n  [addCard]: (s, a) => {\n    const { content, colID } = a.payload;\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    const cardID = generateID();\n    s.cards.push({ id: cardID, content });   // add to cards list\n    s.columns[colIdx].items.unshift(cardID); // add to top of column\n  },\n  [deleteColumn]: (s, a) => {\n    _deleteColumn(s, a.payload);\n  },\n  [renameColumn]: (s, a) => {\n    s.columns[indexFromID(s.columns, a.payload.colID)].name = a.payload.name;\n  },\n  [editCardContent]: (s, a) => {\n    s.cards[indexFromID(s.cards, a.payload.cardID)].content = a.payload.content;\n  },\n  [deleteCard]: (s, a) => {\n    const cardIdx = indexFromID(s.cards, a.payload);\n    s.columns.forEach(col => deleteInList(col.items, a.payload));\n    deleteByID(s.cards, a.payload);\n  },\n  [addColumn]: (s, a) => {\n    const id = generateID();\n    s.columns.push({ id, items: [], name: a.payload.name });\n    s.tabs[indexFromID(s.tabs, a.payload.tabID)].columns.push(id);\n  },\n  [editCard]: (s, a) => {\n    s.cards[indexFromID(s.cards, a.payload.card.id)] = a.payload.card;\n    const srcColIdx = s.columns.map(col => col.items.indexOf(a.payload.card.id) !== -1).indexOf(true);\n    const dstColIdx = indexFromID(s.columns, a.payload.colID);\n    if (srcColIdx !== dstColIdx) {\n      deleteInList(s.columns[srcColIdx].items, a.payload.card.id);\n      s.columns[dstColIdx].items.unshift(a.payload.card.id);\n    }\n  },\n  [deleteTab]: (s, a) => {\n    while (s.tabs[a.payload].columns.length)\n      _deleteColumn(s, s.tabs[a.payload].columns[0]);\n    s.tabs.splice(a.payload, 1);\n  },\n  [addTab]: (s, a) => {\n    s.tabs.push({ name: a.payload, id: generateID(), columns: [] });\n  },\n  [renameTab]: (s, a) => {\n    s.tabs[indexFromID(s.tabs, a.payload.tabID)].name = a.payload.name;\n  },\n  [moveColumn]: (s, a) => {\n    const [srcIdx, dstIdx, tabIdx] = a.payload;\n    let newitems = s.tabs[tabIdx].columns;\n    const [removed] = newitems.splice(srcIdx, 1);\n    newitems.splice(dstIdx, 0, removed);\n    s.tabs[tabIdx].columns = newitems;\n  },\n  [moveTab]: (s, a) => {\n    const [srcIdx, dstIdx] = a.payload;\n    if (dstIdx < 0 || dstIdx >= s.tabs.length) return;\n    let newitems = s.tabs;\n    const [removed] = newitems.splice(srcIdx, 1);\n    newitems.splice(dstIdx, 0, removed);\n    s.tabs = newitems;\n  },\n  [archiveCardsInColumn]: (s, a) => {\n    // archived cards still exist in memory but are not listed in a column's items\n    // they do have a archived: {date, colID} field added however for future use\n    const colIdx = indexFromID(s.columns, a.payload);\n    s.columns[colIdx].items.forEach(cardID => {\n      let card = s.cards[indexFromID(s.cards, cardID)];\n      card.archived = { date: new Date().getTime(), colID: a.payload };\n    });\n    s.columns[colIdx].items = [];\n  },\n});\n\nexport default undoable(reducer, {limit:50});\n","\nimport { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport boards, { selectors as boardSelectors } from './ducks/kanban';\nimport { saveState, objectMap } from './common/utils';\n\nconst reducer = combineReducers({\n  boards,\n  // notes,\n});\n\nconst store = configureStore({ reducer });\n\n// Undo/redo keyboard shortcuts if supported\ntry {\n  document.addEventListener('keyup', e => {\n    if (e.ctrlKey && e.which === 90)\n      store.dispatch(UndoActionCreators.undo());\n    else if (e.ctrlKey && e.shiftKey && e.which === 90 || e.ctrlKey && e.which === 89)\n      store.dispatch(UndoActionCreators.redo());\n  });\n} catch (e) {}\n\n// Save board state (excluding history)\n// TODO: how can we include history? We cannot serialise all state easily with our combineReducers\n// approach unfortunately\nconst localStorageSubscriber = () => saveState(store.getState().boards.present);\nstore.subscribe(localStorageSubscriber);\nlocalStorageSubscriber(); // save data generated on first run\n\nexport default store;\n\n// produce global selectors\nexport const globalSelectors = {\n  boards: state => state.boards.present\n}\nexport const selectors = {\n  boards: objectMap(boardSelectors, localSelector => state => localSelector(globalSelectors.boards(state)))\n};\n","\nimport * as React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n         TextField, InputLabel, Select, MenuItem, ClickAwayListener,\n         ListSubheader } from '@material-ui/core';\nimport * as duck from '../ducks/kanban';\nimport { globalSelectors as sel, selectors } from '../store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { generateID } from '../common/utils';\nimport ReactMarkdown from 'react-markdown';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\n// TODO: can we have a promise API for generating dialogs on the fly and getting their results?\n// This method means the user has to manage 'open' state\nexport const ConfirmDialog = ({ open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"] }) => {\n  return (\n    <Dialog open={open} onClose={() => respond(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {subtitle}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => respond(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => respond(true)} color=\"primary\" variant=\"contained\" autoFocus>\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const PromptDialog = ({\n  open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"],\n  label, inputType = \"text\", placeholder = \"\", buttons = null\n}) => {\n  const [value, setValue] = React.useState(placeholder);\n  const done = x => { respond(x); setValue(placeholder) };\n  return (\n    <Dialog open={open} onClose={() => done(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        {typeof subtitle === \"string\" && (\n          <DialogContentText>\n            {subtitle}\n          </DialogContentText>\n        )}\n        <TextField autoFocus margin=\"dense\" fullWidth\n          label={label} type={inputType} value={value} onChange={e => setValue(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        {buttons}\n        <Button onClick={() => done(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => done(value)} color=\"primary\" variant=\"contained\">\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const CardEditDialog = ({ respond, card }) => {\n  const dispatch = useDispatch();\n\n  const currentColID = useSelector(state => sel.boards(state).columns\n      .filter(col => col.items.indexOf(card.id) !== -1)[0].id);\n\n  const [newCard, setCard] = React.useState({ card: {...card}, colID: currentColID });\n  const setColID = colID => setCard({ ...newCard, colID });\n  const setContent = content => setCard({ ...newCard, card: {...newCard.card, content} });\n  const setDescription = description => setCard({ ...newCard, card: {...newCard.card, description: description.length ? description : undefined} });\n  const setDateTime = time => setCard({ ...newCard, card: {...newCard.card, time } })\n  const [editingDescription, setEditingDescription] = React.useState(false);\n\n  const columns = [...useSelector(selectors.boards.columns)];\n  const tabs = useSelector(selectors.boards.tabs);\n  const getTabIdxByColID = colID => tabs.map(tab => tab.columns.indexOf(colID) !== -1).indexOf(true);\n  // // order columns by tab and column orders (compareFunction returns -1 if colA is before colB)\n  // columns.sort((colA, colB) => {\n  //   const [tabA, tabB] = [getTabIdxByColID(colA.id), getTabIdxByColID(colB.id)];\n  //   if (tabA < tabB) return -1;\n  //   else if (tabA > tabB) return 1;\n  //   // tabA == tabB, so sort in left-to-right order in tab\n  //   return tabs[tabA].columns.indexOf(colA.id) - tabs[tabA].columns.indexOf(colB.id);\n  // });\n  const getColIdxByID = colID => columns.map(col => col.id === colID).indexOf(true);\n\n  const done = () => (respond(), setContent(card.content));\n  // save and then delete so you can undo the delete without losing your unsaved draft of a card\n  const deleteCard = () => (dispatch(duck.editCard(newCard)), dispatch(duck.deleteCard(card.id)), done());\n  const editCard = () => (dispatch(duck.editCard(newCard)), done());\n\n  const labelIDs = [generateID()];\n  return (\n    <Dialog open onClose={() => done(null)} fullWidth maxWidth='md'>\n      <DialogTitle>Edit card</DialogTitle>\n      <DialogContent>\n        <InputLabel id={labelIDs[0]}>Column</InputLabel>\n        <Select labelId={labelIDs[0]} value={newCard.colID} onChange={e => setColID(e.target.value)}>\n          {tabs.flatMap(tab => ([\n            // the subheader can be clicked so we add the following CSS hack (per mui#18200)\n            // .MuiListSubheader-root { pointer-events: none; }\n            <ListSubheader key={tab.id}>{tab.name}</ListSubheader>,\n            ...tab.columns.map(colID => {\n              const col = columns[getColIdxByID(colID)];\n              return (<MenuItem value={colID} key={colID}>{col.name}</MenuItem>);\n            })\n          ]))}\n        </Select>\n\n        <TextField label=\"Title\" margin=\"dense\" autoFocus fullWidth variant=\"filled\"\n          multiline rowsMax={3} value={newCard.card.content} onChange={e => setContent(e.target.value)} />\n        {!editingDescription ? (\n          <div onClick={() => setEditingDescription(true)} style={{marginTop: 8}}>\n            <span style={{color: 'grey'}}>Description</span>\n            <ReactMarkdown source={newCard.card.description} />\n          </div>\n        ) : (\n          <ClickAwayListener onClickAway={() => setEditingDescription(false)}>\n            <TextField label=\"Description\" margin=\"dense\" autoFocus fullWidth variant=\"outlined\"\n              multiline rows={6} rowsMax={16} value={newCard.card.description} onChange={e => setDescription(e.target.value)} />\n          </ClickAwayListener>\n        )}\n        {newCard.card.time ? (\n          <div style={{marginTop: 10}}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <DateTimePicker\n                value={new Date(newCard.card.time)}\n                onChange={newDate => setDateTime(newDate.getTime())}\n                label=\"Due date / event time\"\n                showTodayButton\n                format=\"MMMM do hh:mm aaa\"\n              />\n          </MuiPickersUtilsProvider>\n          <Button color=\"primary\" variant=\"outlined\" style={{float:'right',marginTop:12}} onClick={() => setDateTime(null)}>Reset date</Button>\n          </div>\n        ) : (\n          <span style={{color: 'grey'}} onClick={() => setDateTime(new Date().getTime())}>Due date / event time</span>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={deleteCard}>Delete</Button>\n        <Button onClick={done} color=\"primary\">Cancel</Button>\n        <Button onClick={editCard} color=\"primary\" variant=\"contained\">OK</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","\n/**\n * BoardView component\n *\n * <BoardView\n *   tab={tabIndex}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\nimport { selectors } from '../store';\nimport { View, Text } from 'react-native';\nimport { makeStyles, Button, IconButton, ButtonGroup, TextField, Chip } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { PopoverMenu, ConfirmDialog, PromptDialog, CardEditDialog } from '../components';\nimport ReactMarkdown from 'react-markdown';\nimport { format } from 'date-fns';\nimport { prettyPrintDate } from '../common/utils';\n\nconst grid = 8;\nconst cardWidth = 300;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    padding: grid,\n    fontSize: \"14px\",\n    \"& *\": {flexShrink: 0}\n  },\n  column: {\n    background: '#DFEEEE',\n    padding: grid,\n    paddingBottom: 24,\n    width: cardWidth,\n    border: '1px solid #CCDCDC',\n    borderRadius: 5,\n    margin: grid,\n    transition: \"border 0.2s\",\n\n    // TODO: install react-custom-scrollbars and use this instead with autohide\n    // there is a bug where moving cards to the tallest column leads to a scrollbar flashing up\n    // and we don't want the scrollbar to take up horizontal space and force the cards to reflow\n\n    height: 'calc(100vh - 160px)',\n    overflow: 'hidden'\n  },\n  columnHeaderContainer: {\n    padding: \"8 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  columnHeaderText: {\n    paddingLeft: 8,\n    paddingBottom: 0,\n    fontSize: '1.4em'\n  },\n  columnHeaderRule: {\n    overflow: \"hidden\",\n    border: \"none\",\n    color: \"#CCDCDC\",\n    backgroundColor: \"#CCDCDC\",\n    height: \"1px\",\n    width: cardWidth + grid * 2 + 1, //+1 is border\n    marginLeft: -(grid+1)\n  },\n  card: {\n    userSelect: 'none',\n    padding: \"10px 13px\",\n    margin: `0 0 ${grid}px 0`,\n    background: 'white',\n    borderRadius: 5,\n    transition: \"opacity 0.3s\",\n    overflow: 'hidden',\n    \"&:hover, &:focus\": {\n      boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n    },\n    \"&>p\": {\n      margin: 0\n    }\n  },\n  draggingCard: {\n    opacity: 0.7,\n    boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n  },\n  columnContainer: {\n    transition: \"opacity 0.6s\",\n  },\n  draggingColumn: {\n    opacity: 0.7,\n  },\n}));\n\nexport default ({ tabInfo }) => {\n  const tab = tabInfo.index;\n  const tabObj = tabInfo.tab;\n  const dispatch = useDispatch();\n  const styles = useStyles();\n\n  const columns = useSelector(selectors.boards.getColumnsInTabs)[tab];\n\n  // dispatch move card action\n  const onDragEnd = res => {\n    if (!res.destination) return;\n    if (res.type === \"card\") {\n      dispatch(duck.moveCard([\n        res.source.droppableId, res.destination.droppableId,\n        res.source.index, res.destination.index\n      ]));\n    } else if (res.type === \"column\") {\n      dispatch(duck.moveColumn([\n        res.source.index, res.destination.index, tab\n      ]));\n    }\n  };\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = name => setPromptOpen(false) ||\n    typeof name === \"string\" && name.length &&\n      dispatch(duck.addColumn({ tabID: tabObj.id, name }));\n\n  return (\n    <View style={{ width: '100vw', overflowX: 'auto', height: '100%' }}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"default\" style={{ flexGrow: 1, height: \"100%\" }} direction=\"horizontal\" type=\"column\">\n          {(provided, snapshot) => (\n            <React.Fragment>\n              <div className={styles.root} ref={provided.innerRef}>\n                {columns.map((col, i) => <Column col={col} styles={styles} key={col.id} index={i} />)}\n                <AddColumn styles={styles} add={() => setPromptOpen(true)} hide={snapshot.isDraggingOver || snapshot.draggingFromThisWith} />\n              </div>\n              {provided.placeholder}\n            </React.Fragment>\n          )}\n        </Droppable>\n      </DragDropContext>\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title=\"Add column\" label=\"Name\" />\n      )}\n    </View>\n  );\n}\n\nconst Column = ({ styles, col, index }) => {\n  const { id, items, name } = col;\n\n  const [editingNew, setEditingNew] = React.useState(false);\n  const [editingValue, setEditingValue] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const addCard = () => {\n    if (editingValue.length)\n      dispatch(duck.addCard({\n        content: editingValue,\n        colID: id\n      }));\n    setEditingValue(\"\");\n    setEditingNew(false);\n  };\n  const addButton = () => {\n    if (editingNew)\n      setEditingValue(\"\");\n    setEditingNew(!editingNew);\n  };\n  const menuButton = () => {\n    console.log('pressed menu button');\n  };\n\n  const internals = (\n    <Droppable droppableId={id} style={{ flexGrow: 1, height: \"100%\" }} type=\"card\" ignoreContainerClipping>\n      {(provided, snapshot) => (\n        <React.Fragment>\n          <div style={{\n              width: cardWidth, overflowY: 'auto', overflowX: 'hidden',\n              // 1) height is -20px to avoid bottom being clipped off\n              // 2) 100px padding and -100px height while dragging to give a 100px buffer of\n              // droppable space to avoid glitching due to dynamic resizing while moving\n              // cards to the bottom\n              height: snapshot.isDraggingOver ? \"calc(100% - 120px)\" : \"calc(100% - 20px)\",\n              paddingBottom: snapshot.isDraggingOver ? 100 : 0\n            }} ref={provided.innerRef}>\n            {editingNew && (\n              <EditingCard value={editingValue} setValue={setEditingValue}\n                add={addCard} cancel={() => { setEditingValue(\"\"); setEditingNew(false) }} />\n            )}\n            {items.map((card, index) => <Card card={card} styles={styles} index={index} key={card.id} />)}\n          </div>\n          {provided.placeholder}\n        </React.Fragment>\n      )}\n    </Droppable>\n  );\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided, snapshot) => (\n        <div ref={provided.innerRef}\n          {...provided.draggableProps}\n          className={styles.columnContainer + (snapshot.isDragging ? \" \"+styles.draggingColumn : \"\")}\n          style={provided.draggableProps.style}>\n          <div className={styles.column}>\n            <div {...provided.dragHandleProps}>\n              <ColumnHeader styles={styles} col={col} add={addButton} menu={menuButton} />\n            </div>\n            {internals}\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n}\n\nconst EditingCard = ({ value, setValue, add, cancel }) => {\n  return (\n    <div>\n      <TextField\n        label=\"New Card\"\n        multiline\n        rowsMax={6}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        variant=\"filled\"\n        style={{ width: \"100%\" }} />\n      <ButtonGroup variant=\"contained\" size='small'\n        style={{marginBottom: 8, boxShadow: \"0px 4px 2px -2px rgba(0,0,0,0.15)\", width: \"100%\"}}>\n        <Button style={{flexGrow: 1}} variant='contained' onClick={add}>\n          Done\n        </Button>\n        <Button onClick={cancel}><DeleteIcon style={{color: '#555'}} /></Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\n// header name, add button, chips for each addon (WIP limit, EBS time estimate, etc), menu button\nconst ColumnHeader = ({ styles, col, add, menu }) => {\n  const dispatch = useDispatch();\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => setConfirmOpen(false) ||\n    res && dispatch(duck.deleteColumn(col.id));\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = res => setPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.renameColumn({ colID: col.id, name: res }));\n\n  const archiveAll = () => dispatch(duck.archiveCardsInColumn(col.id));\n\n  return (\n    <div>\n      <div className={styles.columnHeaderContainer}>\n        <div className={styles.columnHeaderText}>\n          {col.name}\n        </div>\n        <div>\n          <Chip size='small' label=\"0/6\" />\n          <Chip size='small' label=\"3h\" />\n          <IconButton size='small' onClick={() => add()}>\n            <AddIcon />\n          </IconButton>\n          <PopoverMenu map={{\n            \"Archive all\": () => archiveAll(),\n            \"Rename\": () => setPromptOpen(true),\n            \"Delete\": () => setConfirmOpen(true),\n          }}>\n            <IconButton size='small'>\n              <MoreVertIcon />\n            </IconButton>\n          </PopoverMenu>\n        </div>\n      </div>\n      <hr className={styles.columnHeaderRule} />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this column?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title={`Rename column \"${col.name}\"`} subtitle=\"Don't worry, this action can be undone.\"\n          label=\"Name\" placeholder={col.name} />\n      )}\n    </div>\n  );\n};\n\nconst Card = ({ card, styles, index }) => {\n  const { id, content } = card;\n  const dispatch = useDispatch();\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const icons = {\n    description: NotesIcon,\n    time: AccessTimeIcon,\n  }\n\n  return (\n    <React.Fragment>\n      <Draggable draggableId={id} index={index}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={styles.card + (snapshot.isDragging ? \" \"+styles.draggingCard : \"\")}\n            style={provided.draggableProps.style}\n            onClick={() => setPromptOpen(true)}>\n            <ReactMarkdown source={content} />\n            {card.description && (() => {\n              const Icon = icons.description;\n              return <Chip size='small' icon={Icon ? <Icon/> : null}\n                label=\"\"\n                style={{ borderRadius: 3, background: 'white' }}\n                title={card.description.split(\"\\n\\n\").join(\"\\n\").substring(0,256)\n                  + (card.description.length > 256 ? \"...\" : \"\")}\n                variant=\"outlined\" />\n            })()}\n            {card.time && (() => {\n              const Icon = icons.time;\n              return <Chip size='small' icon={Icon ? <Icon/> : null}\n                label={prettyPrintDate(card.time)}\n                title={format(new Date(card.time), \"dd/MM/yyyy hh:mmaaa\")}\n                style={{ borderRadius: 3, background: 'white' }}\n                variant=\"outlined\" />\n            })()}\n          </div>\n        )}\n      </Draggable>\n      {promptOpen && (\n        <CardEditDialog respond={() => setPromptOpen(false)} card={card} />\n      )}\n    </React.Fragment>\n  );\n}\n\nconst AddColumn = ({ styles, add, hide }) => {\n  return (\n    <div className={styles.column} style={{\n        width: cardWidth, display: 'flex', justifyContent: 'center',\n        alignItems: 'center', height: '100px',\n        marginLeft: hide ? cardWidth + 5*grid + 2 : grid\n      }}>\n      <IconButton onClick={add}>\n        <AddIcon />\n      </IconButton>\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TabView, UndoRedo } from '../components';\nimport BoardView from './boardview';\nimport * as duck from '../ducks/kanban';\nimport { selectors } from '../store';\nimport { PopoverMenu, ConfirmDialog, PromptDialog } from '../components';\n\n// TODO: tabview should not handle tab no state\n\nexport default () => {\n  const dispatch = useDispatch();\n  const [currentTab, setCurrentTab] = React.useState(0);\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => setConfirmOpen(false) ||\n    res && (dispatch(duck.deleteTab(currentTab)), setCurrentTab(Math.max(0,currentTab-1)));\n\n  const [addPromptOpen, setAddPromptOpen] = React.useState(false);\n  const addPromptRespond = res => setAddPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.addTab(res));\n\n  const [renamePromptOpen, setRenamePromptOpen] = React.useState(false);\n  const renamePromptRespond = res => setRenamePromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.renameTab({ tabID: tabs[currentTab].id, name: res }));\n\n  // [{name, id, columns (ids)},...]\n  const tabs = useSelector(selectors.boards.tabs);\n  return (\n    <React.Fragment>\n      <TabView\n        tabs={tabs.map(tab => tab.name)}\n        render={i => <BoardView tabInfo={{ tab: tabs[i], index: i }} />}\n        addTab={() => setAddPromptOpen(true)}\n        renameTab={() => setRenamePromptOpen(true)}\n        deleteTab={() => tabs.length > 1 ? setConfirmOpen(true) : alert(\"Cannot delete only tab\")}\n        moveTab={data => dispatch(duck.moveTab(data))}\n        children={<UndoRedo />}\n        index={currentTab} setIndex={setCurrentTab}\n      />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this tab?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {addPromptOpen && (\n        <PromptDialog open respond={addPromptRespond} title=\"Add tab\" label=\"Name\" />\n      )}\n      {renamePromptOpen && (\n        <PromptDialog open respond={renamePromptRespond}\n          title={`Rename tab ${tabs[currentTab].name}`} label=\"Name\" />\n      )}\n    </React.Fragment>\n  );\n}\n","\n/**\n * app.js\n * Main JSX source file for the app\n * Details like screen size and renderer are abstracted away by index.[platform].js\n * and ../index.js\n */\n\nimport React from 'react';\nimport { StyleSheet, Text, View, Platform } from 'react-native';\nimport { Provider } from 'react-redux';\n\nimport { Button, MenuBar } from './components';\nimport Kanban from './kanban';\nimport store from './store';\n\nexport default () => {\n  const [active, setActive] = React.useState(0);\n  const style = Platform.OS === \"web\"\n    ? { height: \"calc(100% - 48px)\" }\n    : { flexGrow: 1 };\n\n  return (\n    <Provider store={store}>\n      <View style={{ top: 0, left: 0, height: \"100%\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n\n        <View style={style}>\n          { active === 0 && (\n            <Kanban />\n          )}\n        </View>\n\n        <MenuBar active={active} setActive={setActive} />\n\n      </View>\n    </Provider>\n  );\n}\n","\nimport { registerRootComponent } from 'expo';\n\nimport Application from './src/index';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(Application);\n","\n/**\n * index.web.js\n * Simple Application wrapper that implements web-specific functionality\n */\n\nimport React from 'react';\nimport Application from './app';\n\nexport default props => (\n  <Application style={{ top: 0, left: 0, height: \"100%\", width: \"100%\" }} />\n);\n"],"sourceRoot":""}