{"version":3,"sources":["web-build/register-service-worker.js","src/components/popovermenu.js","src/components/tabview.js","src/components/button.js","src/components/menubar.js","src/components/undoredo.js","src/common/utils.js","src/ducks/kanban.js","src/components/dialogs.js","src/kanban/boardview.js","src/kanban/index.js","src/store.js","src/app.js","index.js","src/index.web.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","map","children","React","anchorEl","setAnchorEl","handleClose","Menu","keepMounted","open","Boolean","onClose","Object","entries","name","func","MenuItem","key","onClick","e","currentTarget","TabPanel","show","hidden","style","height","tabs","render","index","setIndex","addTab","renameTab","deleteTab","flex","AppBar","position","backgroundColor","zIndex","Tabs","value","onChange","event","newValue","indicatorColor","textColor","tab","Tab","label","View","flexGrow","IconButton","i","makeStyles","theme","button","active","setActive","Fragment","color","top","bottom","Toolbar","minHeight","edge","log","val","TabIndicatorProps","verticalAlign","localStorage","clear","dispatch","useDispatch","ActionCreators","undo","redo","generateID","Math","random","toString","substring","dummyState","initial","id","colnums","colnames","numcards","reduce","a","b","cards","sampleCards","push","content","floor","length","columns","cnt","items","slice","card","dummyCols","colIDs","col","transferCard","createAction","reorderCard","addCard","editCardContent","editCard","deleteCard","addColumn","deleteColumn","renameColumn","moveColumn","_getCardByID","state","filter","indexFromID","list","item","indexOf","deleteByID","splice","deleteInList","elem","initialState","hasOwnProperty","JSON","parse","getItem","loadState","_deleteColumn","s","colIdx","forEach","reducer","createReducer","srcColIdx","payload","srcColID","dstColIdx","dstColID","srcCol","dstCol","srcIndex","removed","dstIndex","colID","newitems","cardID","unshift","tabID","srcIdx","dstIdx","tabIdx","undoable","limit","ConfirmDialog","respond","title","subtitle","labels","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","variant","autoFocus","PromptDialog","inputType","placeholder","buttons","setValue","done","x","TextField","margin","fullWidth","type","target","CardEditDialog","currentColID","useSelector","boards","present","newCard","setCard","setContent","labelIDs","maxWidth","InputLabel","Select","labelId","multiline","rowsMax","duck","useStyles","root","display","flexDirection","flexWrap","padding","fontSize","flexShrink","column","background","paddingBottom","width","border","borderRadius","transition","overflow","columnHeaderContainer","justifyContent","columnHeaderText","paddingLeft","columnHeaderRule","cardWidth","marginLeft","userSelect","boxShadow","draggingCard","opacity","columnContainer","draggingColumn","tabInfo","tabObj","styles","_getColByID","promptOpen","setPromptOpen","overflowX","onDragEnd","res","destination","source","droppableId","direction","provided","snapshot","className","ref","innerRef","add","hide","isDraggingOver","draggingFromThisWith","Column","editingNew","setEditingNew","editingValue","setEditingValue","addButton","menuButton","internals","overflowY","cancel","draggableId","draggableProps","isDragging","dragHandleProps","menu","EditingCard","ButtonGroup","size","marginBottom","ColumnHeader","confirmOpen","setConfirmOpen","Chip","Card","split","AddColumn","alignItems","currentTab","setCurrentTab","addPromptOpen","setAddPromptOpen","renamePromptOpen","setRenamePromptOpen","alert","max","combineReducers","store","configureStore","document","ctrlKey","which","UndoActionCreators","shiftKey","localStorageSubscriber","serialised","stringify","setItem","saveState","getState","subscribe","useState","Platform","OS","left","registerRootComponent","props"],"mappings":"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","file":"static/js/app.a0a1ed74.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/Mirror/expo-service-worker.js', { scope: '/Mirror/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","\n// Popover menu (web)\nimport * as React from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\n\n\nexport default ({ map, children }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => setAnchorEl(null);\n\n  return (\n    <React.Fragment>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}>\n        {Object.entries(map).map(([name, func]) => (\n          <MenuItem key={name}\n            onClick={() => { handleClose(); func() }}>\n            {name}\n          </MenuItem>\n        ))}\n      </Menu>\n      {React.cloneElement(children, {\n        onClick: e => setAnchorEl(e.currentTarget)\n      })}\n    </React.Fragment>\n  );\n}\n","\n/**\n * TabView component\n *\n * <TabView\n *   tabs={[\"one\", \"two\", \"three\"]}\n *   render={i => (<SomeComponent index={i} />)}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { AppBar, Tabs, Tab, IconButton } from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport PopoverMenu from './popovermenu';\n\nconst TabPanel = ({ show, children }) => (\n  <div hidden={!show} style={{ height: 'calc(100% - 48px)' }}>\n    {show && children}\n  </div>\n);\n\nexport default ({ tabs, render, children, index, setIndex, addTab, renameTab, deleteTab }) => {\n  const handleChange = (event, newValue) => setIndex(newValue);\n\n  return (\n    <div style={{ flex: 1 }}>\n      <AppBar position=\"static\" style={{\n          backgroundColor: \"white\",\n          zIndex: 2, position: 'relative'\n        }}>\n        <Tabs value={index} onChange={handleChange}\n          indicatorColor=\"primary\" textColor=\"primary\">\n          {tabs.map(tab => (\n            <Tab label={tab} key={tab} />\n          ))}\n          <View style={{flexGrow: 1}}></View>\n          <PopoverMenu map={{\n            \"Add tab\": () => addTab(),\n            \"Rename tab\": () => renameTab(index),\n            \"Delete tab\": () => deleteTab(index),\n          }}>\n            <IconButton>\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n          {children}\n        </Tabs>\n      </AppBar>\n      {tabs.map((tab, i) => (\n        <TabPanel show={index === i} key={tab}>\n          {index === i && render(i)}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({ button: {} }));\n\nexport default props => (\n  <Button className={useStyles().button} variant=\"contained\" color=\"primary\" {...props} />\n);\n","\n/**\n * MenuBar component\n *\n * <MenuBar active={0} setActive={...} />\n *  (active is index of current screen)\n *\n */\n\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Tabs, Tab } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport PopoverMenu from './popovermenu';\n\nexport default ({ active, setActive }) => {\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" style={{ top: 'auto', bottom: 0 }}>\n        <Toolbar style={{ minHeight: 0 }}>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => console.log(\"open menu\")}>\n            <MenuIcon />\n          </IconButton>\n          <Tabs\n            value={active} onChange={(e, val) => setActive(val)}\n            TabIndicatorProps={{ style: { backgroundColor: 'white' } }}\n          >\n            <Tab label={<div><DeveloperBoardIcon style={{verticalAlign: 'middle'}} /> Board</div>}  />\n            <Tab label={<div><NotesIcon style={{verticalAlign: 'middle'}} /> Notes</div>}  />\n          </Tabs>\n          <div style={{ flexGrow: 1 }} />\n          <PopoverMenu map={{\n            \"Clear saved state\": () => localStorage.clear(), // need lambda because of binding\n          }}>\n            <IconButton edge=\"end\" color=\"inherit\">\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport { ActionCreators } from 'redux-undo'\n\nexport default () => {\n  const dispatch = useDispatch();\n  return (\n    <React.Fragment>\n      <IconButton onClick={() => dispatch(ActionCreators.undo())}>\n        <UndoIcon />\n      </IconButton>\n      <IconButton onClick={() => dispatch(ActionCreators.redo())}>\n        <RedoIcon />\n      </IconButton>\n    </React.Fragment>\n  );\n};\n","\nexport const generateID = () => Math.random().toString().substring(2);\n\n// generate { cards, columns } where each column has colnum[i] cards\n// both of these are objects where the keys are unique IDs\n// cards are { id, content } structs\n// todo: make them arrays containing their IDs and write selectors instead\n// columns are { id, items: [ id ] } structs\n// Example: {\n//   cards: [{ id: \"a\", content: \"Item 1\" }],\n//   columns: [{ id: \"b\", items: [\"a\"] }],\n//   tabs: [{ name: \"Main\", columns: [\"b\"] }]\n// }\nexport const dummyCols = (colnums, colnames) => {\n  let numcards = colnums.reduce((a, b) => a + b, 0);\n  let cards = [];\n  let sampleCards = [\n    \"Wash the dishes\",\n    \"Make cool app\",\n    \"Run out of ideas for sample tasks for the app you're making\",\n    \"Cook pizza for dinner\",\n    \"Finish your chemistry homework\",\n    \"Write a tutorial explaining how monads are isomorphic to burritos in the category of food\",\n    \"Forget to wrap a line at 300 characters\",\n    \"Learn Common Lisp\",\n    \"Do normal human things\",\n    \"Prove P=NP for N=1\",\n    \"Eat some chocolate\",\n    \"Stop eating so much chocolate\",\n    \"Write witty comment\",\n    \"🙂\"];\n  for (let i = 0; i < numcards; i++) {\n    let id = (i+1).toString() + \"-\" + generateID();\n    cards.push({ id, content: sampleCards[Math.floor(Math.random()*sampleCards.length)] });\n  }\n  let columns = [];\n  for (let i = 0, cnt = 0; i < colnums.length; i++) {\n    let items = cards.slice(cnt, cnt + colnums[i]).map(card => card.id);\n    let id = (i + 1).toString() + \"-\" + generateID();\n    columns.push({ id, items, name: colnames[i] });\n    cnt += colnums[i];\n  }\n  return { cards, columns };\n};\n\n// generate initial dummy state\nexport const dummyState = () => {\n  let initial = {\n    tabs: [{ name: \"Main\", id: generateID() }, { name: \"Secondary\", id: generateID() }],\n    ...dummyCols([9,2,6,5,4], [\"To Do\",\"Doing\",\"Done\",\"Misc 1\",\"Misc 2\"])\n  };\n  const colIDs = initial.columns.map(col => col.id);\n  initial.tabs[0].columns = [colIDs[0], colIDs[1], colIDs[2]];\n  initial.tabs[1].columns = [colIDs[3], colIDs[4]];\n  return initial;\n}\n\n// load persisted state\nexport const loadState = () => {\n  try {\n    // web\n    if (localStorage.hasOwnProperty(\"kanban\"))\n      return JSON.parse(localStorage.getItem(\"kanban\"));\n    else\n      return dummyState();\n  } catch (e) {\n    // native\n    return dummyState();\n  }\n}\n\nexport const saveState = state => {\n  try {\n    if (localStorage) {\n      const serialised = JSON.stringify(state);\n      localStorage.setItem(\"kanban\", serialised);\n    }\n  } catch (e) {}\n}\n","\n/**\n * Kanban boards core Redux logic\n *\n * State is normalised as { tabs, columns, cards }\n *  where each tab has several columns which contain cards\n *  each has a unique ID as a key in the respective object\n */\n\nimport { createReducer, createAction, createSelector } from '@reduxjs/toolkit';\nimport undoable from 'redux-undo';\nimport { loadState, generateID } from '../common/utils';\n\n// Action creators\n\nexport const transferCard = createAction('kanban/TRANSFER_CARD');\nexport const reorderCard = createAction('kanban/REORDER_CARD');\nexport const addCard = createAction('kanban/ADD_CARD'); // takes { content, colID }\nexport const editCardContent = createAction('kanban/EDIT_CARD_CONTENT');//takes {content, cardID}\nexport const editCard = createAction('kanban/EDIT_CARD'); // takes a card object; allows editing all of a card's params\nexport const deleteCard = createAction('kanban/DELETE_CARD');//takes cardID\n\nexport const moveCard = ([srcColID, dstColID, srcIndex, dstIndex]) =>\n  srcColID === dstColID\n    ? reorderCard({ colID: srcColID, srcIndex, dstIndex })\n    : transferCard({ srcColID, dstColID, srcIndex, dstIndex });\n\nexport const addColumn = createAction('kanban/ADD_COLUMN'); // takes { name, tabID }\nexport const deleteColumn = createAction('kanban/DELETE_COLUMN'); // takes string column ID\nexport const renameColumn = createAction('kanban/RENAME_COLUMN'); // takes { colID, name }\nexport const moveColumn = createAction('kanban/MOVE_COLUMN'); // takes [srcIdx, dstIdx, tabIdx]\n\nexport const addTab = createAction('kanban/ADD_TAB'); // takes name\nexport const deleteTab = createAction('kanban/DELETE_TAB'); // takes tabIdx\nexport const renameTab = createAction('kanban/RENAME_TAB'); // takes { tabID, name }\n\n// Helpers\n\nconst _getColByID = state => id => state.columns.filter(col => col.id === id)[0];\nconst _getCardByID = state => id => state.cards.filter(card => card.id === id)[0];\n\nconst indexFromID = (list, id) => list.map(item => item.id === id).indexOf(true);\nconst deleteByID = list => id => list.splice(indexFromID(list, id), 1);\nconst deleteInList = (list, elem) => {\n  let index = list.indexOf(elem);\n  if (index !== -1) list.splice(index, 1); // undesired behaviour when splicing at (-1, 1)\n};\n\n// Selectors\n\n// higher order function which creates a selector for a specific tab\n// it un-normalises the state for that tab, returning:\n// return :: List[column], column :: { id, items: List[card] }, card :: { id, content }\nexport const getColumnsInTab = tab => state =>\n  state.tabs[tab].columns.map(_getColByID(state))\n    .map(col => ({\n      ...col, items: col.items.map(_getCardByID(state))\n    }));\n\n// Reducers\n\nconst initialState = loadState();\n\nconst _deleteColumn = (s, id) => {\n  const colIdx = indexFromID(s.columns, id);\n  s.columns[colIdx].items.forEach(deleteByID(s.cards));\n  s.tabs.forEach(tab => deleteInList(tab.columns, id));\n  deleteByID(s.columns)(id);\n};\n\nconst reducer = createReducer(initialState, {\n  [transferCard]: (s, a) => {\n    const srcColIdx = indexFromID(s.columns, a.payload.srcColID);\n    const dstColIdx = indexFromID(s.columns, a.payload.dstColID);\n\n    let srcCol = s.columns[srcColIdx].items;\n    let dstCol = s.columns[dstColIdx].items;\n    const [removed] = srcCol.splice(a.payload.srcIndex, 1);\n    dstCol.splice(a.payload.dstIndex, 0, removed);\n  },\n  [reorderCard]: (s, a) => {\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    let newitems = s.columns[colIdx].items;\n    const [removed] = newitems.splice(a.payload.srcIndex, 1);\n    newitems.splice(a.payload.dstIndex, 0, removed);\n    s.columns[colIdx].items = newitems;\n  },\n  [addCard]: (s, a) => {\n    const { content, colID } = a.payload;\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    const cardID = generateID();\n    s.cards.push({ id: cardID, content });   // add to cards list\n    s.columns[colIdx].items.unshift(cardID); // add to top of column\n  },\n  [deleteColumn]: (s, a) => {\n    _deleteColumn(s, a.payload);\n  },\n  [renameColumn]: (s, a) => {\n    s.columns[indexFromID(s.columns, a.payload.colID)].name = a.payload.name;\n  },\n  [editCardContent]: (s, a) => {\n    s.cards[indexFromID(s.cards, a.payload.cardID)].content = a.payload.content;\n  },\n  [deleteCard]: (s, a) => {\n    const cardIdx = indexFromID(s.cards, a.payload);\n    s.columns.forEach(col => deleteInList(col.items, a.payload));\n    deleteByID(s.cards)(a.payload);\n  },\n  [addColumn]: (s, a) => {\n    const id = generateID();\n    s.columns.push({ id, items: [], name: a.payload.name });\n    s.tabs[indexFromID(s.tabs, a.payload.tabID)].columns.push(id);\n  },\n  [editCard]: (s, a) => {\n    s.cards[indexFromID(s.cards, a.payload.card.id)] = a.payload.card;\n    const srcColIdx = s.columns.map(col => col.items.indexOf(a.payload.card.id) !== -1).indexOf(true);\n    const dstColIdx = indexFromID(s.columns, a.payload.colID);\n    if (srcColIdx !== dstColIdx) {\n      deleteInList(s.columns[srcColIdx].items, a.payload.card.id);\n      s.columns[dstColIdx].items.unshift(a.payload.card.id);\n    }\n  },\n  [deleteTab]: (s, a) => {\n    while (s.tabs[a.payload].columns.length)\n      _deleteColumn(s, s.tabs[a.payload].columns[0]);\n    s.tabs.splice(a.payload, 1);\n  },\n  [addTab]: (s, a) => {\n    s.tabs.push({ name: a.payload, id: generateID(), columns: [] });\n  },\n  [renameTab]: (s, a) => {\n    s.tabs[indexFromID(s.tabs, a.payload.tabID)].name = a.payload.name;\n  },\n  [moveColumn]: (s, a) => {\n    const [srcIdx, dstIdx, tabIdx] = a.payload;\n    let newitems = s.tabs[tabIdx].columns;\n    const [removed] = newitems.splice(srcIdx, 1);\n    newitems.splice(dstIdx, 0, removed);\n    s.tabs[tabIdx].columns = newitems;\n  },\n});\n\nexport default undoable(reducer, {limit:10});\n","\nimport * as React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n         TextField, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport * as duck from '../ducks/kanban';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { generateID } from '../common/utils';\n\n// TODO: can we have a promise API for generating dialogs on the fly and getting their results?\n// This method means the user has to manage 'open' state\nexport const ConfirmDialog = ({ open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"] }) => {\n  return (\n    <Dialog open={open} onClose={() => respond(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {subtitle}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => respond(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => respond(true)} color=\"primary\" variant=\"contained\" autoFocus>\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const PromptDialog = ({\n  open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"],\n  label, inputType = \"text\", placeholder = \"\", buttons = null\n}) => {\n  const [value, setValue] = React.useState(placeholder);\n  const done = x => { respond(x); setValue(placeholder) };\n  return (\n    <Dialog open={open} onClose={() => done(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        {typeof subtitle === \"string\" && (\n          <DialogContentText>\n            {subtitle}\n          </DialogContentText>\n        )}\n        <TextField autoFocus margin=\"dense\" fullWidth\n          label={label} type={inputType} value={value} onChange={e => setValue(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        {buttons}\n        <Button onClick={() => done(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => done(value)} color=\"primary\" variant=\"contained\">\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const CardEditDialog = ({ respond, card }) => {\n  const dispatch = useDispatch();\n\n  const currentColID = useSelector(state =>\n    state.boards.present.columns\n      .filter(col => col.items.indexOf(card.id) !== -1)[0].id);\n\n  const [newCard, setCard] = React.useState({ card: {...card}, colID: currentColID });\n  const setColID = colID => setCard({ ...newCard, colID });\n  const setContent = content => setCard({ ...newCard, card: {...newCard.card, content} });\n\n  //TODO: extract global boards selector so we can change state.boards.present to anything\n  // else we need as new requirements arise without causing serious problems\n  const columns = useSelector(state => state.boards.present.columns);\n\n  const done = () => (respond(), setContent(card.content));\n  const deleteCard = () => (dispatch(duck.deleteCard(card.id)), done());\n  const editCard = () => (dispatch(duck.editCard(newCard)), done());\n\n  const labelIDs = [generateID()];\n  return (\n    <Dialog open onClose={() => done(null)} fullWidth maxWidth='md'>\n      <DialogTitle>Edit card</DialogTitle>\n      <DialogContent>\n        <InputLabel id={labelIDs[0]}>Column</InputLabel>\n        <Select labelId={labelIDs[0]} value={newCard.colID} onChange={e => setColID(e.target.value)}>\n          {columns.map(col => (\n            <MenuItem value={col.id} key={col.id}>{col.name}</MenuItem>\n          ))}\n        </Select>\n\n        <TextField label=\"Title\" margin=\"dense\" autoFocus fullWidth variant=\"filled\"\n          multiline rowsMax={6} value={newCard.card.content} onChange={e => setContent(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={deleteCard}>Delete</Button>\n        <Button onClick={done} color=\"primary\">Cancel</Button>\n        <Button onClick={editCard} color=\"primary\" variant=\"contained\">OK</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","\n/**\n * BoardView component\n *\n * <BoardView\n *   tab={tabIndex}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\nimport { View, Text } from 'react-native';\nimport { makeStyles, Button, IconButton, ButtonGroup, TextField, Chip } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { PopoverMenu, ConfirmDialog, PromptDialog, CardEditDialog } from '../components';\n\nconst grid = 8;\nconst cardWidth = 300;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    padding: grid,\n    fontSize: \"14px\",\n    \"& *\": {flexShrink: 0}\n  },\n  column: {\n    background: '#DFEEEE',\n    padding: grid,\n    paddingBottom: 24,\n    width: cardWidth,\n    border: '1px solid #CCDCDC',\n    borderRadius: 5,\n    margin: grid,\n    transition: \"border 0.2s\",\n\n    // TODO: install react-custom-scrollbars and use this instead with autohide\n    // there is a bug where moving cards to the tallest column leads to a scrollbar flashing up\n    // and we don't want the scrollbar to take up horizontal space and force the cards to reflow\n\n    height: 'calc(100vh - 160px)',\n    overflow: 'hidden'\n  },\n  columnHeaderContainer: {\n    padding: \"8 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  columnHeaderText: {\n    paddingLeft: 8,\n    paddingBottom: 0,\n    fontSize: '1.4em'\n  },\n  columnHeaderRule: {\n    overflow: \"hidden\",\n    border: \"none\",\n    color: \"#CCDCDC\",\n    backgroundColor: \"#CCDCDC\",\n    height: \"1px\",\n    width: cardWidth + grid * 2 + 1, //+1 is border\n    marginLeft: -(grid+1)\n  },\n  card: {\n    userSelect: 'none',\n    padding: \"10px 13px\",\n    margin: `0 0 ${grid}px 0`,\n    background: 'white',\n    borderRadius: 5,\n    transition: \"opacity 0.3s\",\n    overflow: 'hidden',\n    \"&:hover, &:focus\": {\n      boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n    },\n    \"&>p\": {\n      margin: 0\n    }\n  },\n  draggingCard: {\n    opacity: 0.7,\n    boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n  },\n  columnContainer: {\n    transition: \"opacity 0.6s\",\n  },\n  draggingColumn: {\n    opacity: 0.7,\n  },\n}));\n\nexport default ({ tabInfo }) => {\n  const tab = tabInfo.index;\n  const tabObj = tabInfo.tab;\n  const dispatch = useDispatch();\n  const styles = useStyles();\n\n  // TODO: is there a way to memoise these higher order selectors?\n  // TODO: how do we deal with .boards namespace being only needed part of the time\n  const columns = useSelector(state => duck.getColumnsInTab(tab)(state.boards.present));\n\n  // dispatch move card action\n  const onDragEnd = res => {\n    if (!res.destination) return;\n    if (res.type === \"card\") {\n      dispatch(duck.moveCard([\n        res.source.droppableId, res.destination.droppableId,\n        res.source.index, res.destination.index\n      ]));\n    } else if (res.type === \"column\") {\n      dispatch(duck.moveColumn([\n        res.source.index, res.destination.index, tab\n      ]));\n    }\n  };\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = name => setPromptOpen(false) ||\n    typeof name === \"string\" && name.length &&\n      dispatch(duck.addColumn({ tabID: tabObj.id, name }));\n\n  return (\n    <View style={{ width: '100vw', overflowX: 'auto', height: '100%' }}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"default\" style={{ flexGrow: 1, height: \"100%\" }} direction=\"horizontal\" type=\"column\">\n          {(provided, snapshot) => (\n            <React.Fragment>\n              <div className={styles.root} ref={provided.innerRef}>\n                {columns.map((col, i) => <Column col={col} styles={styles} key={col.id} index={i} />)}\n                <AddColumn styles={styles} add={() => setPromptOpen(true)} hide={snapshot.isDraggingOver || snapshot.draggingFromThisWith} />\n              </div>\n              {provided.placeholder}\n            </React.Fragment>\n          )}\n        </Droppable>\n      </DragDropContext>\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title=\"Add column\" label=\"Name\" />\n      )}\n    </View>\n  );\n}\n\nconst Column = ({ styles, col, index }) => {\n  const { id, items, name } = col;\n\n  const [editingNew, setEditingNew] = React.useState(false);\n  const [editingValue, setEditingValue] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const addCard = () => {\n    if (editingValue.length)\n      dispatch(duck.addCard({\n        content: editingValue,\n        colID: id\n      }));\n    setEditingValue(\"\");\n    setEditingNew(false);\n  };\n  const addButton = () => {\n    if (editingNew)\n      setEditingValue(\"\");\n    setEditingNew(!editingNew);\n  };\n  const menuButton = () => {\n    console.log('pressed menu button');\n  };\n\n  const internals = (\n    <Droppable droppableId={id} style={{ flexGrow: 1, height: \"100%\" }} type=\"card\">\n      {(provided, snapshot) => (\n        <React.Fragment>\n          <div style={{\n              width: cardWidth, overflowY: 'auto', overflowX: 'hidden', height: \"100%\"\n            }} ref={provided.innerRef}>\n            {editingNew && (\n              <EditingCard value={editingValue} setValue={setEditingValue}\n                add={addCard} cancel={() => { setEditingValue(\"\"); setEditingNew(false) }} />\n            )}\n            {items.map((card, index) => <Card card={card} styles={styles} index={index} key={card.id} />)}\n          </div>\n          {provided.placeholder}\n        </React.Fragment>\n      )}\n    </Droppable>\n  );\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided, snapshot) => (\n        <div ref={provided.innerRef}\n          {...provided.draggableProps}\n          className={styles.columnContainer + (snapshot.isDragging ? \" \"+styles.draggingColumn : \"\")}\n          style={provided.draggableProps.style}>\n          <div className={styles.column}>\n            <div {...provided.dragHandleProps}>\n              <ColumnHeader styles={styles} col={col} add={addButton} menu={menuButton} />\n            </div>\n            {internals}\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n}\n\nconst EditingCard = ({ value, setValue, add, cancel }) => {\n  return (\n    <div>\n      <TextField\n        label=\"New Card\"\n        multiline\n        rowsMax={6}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        variant=\"filled\"\n        style={{ width: \"100%\" }} />\n      <ButtonGroup variant=\"contained\" size='small'\n        style={{marginBottom: 8, boxShadow: \"0px 4px 2px -2px rgba(0,0,0,0.15)\", width: \"100%\"}}>\n        <Button style={{flexGrow: 1}} variant='contained' onClick={add}>\n          Done\n        </Button>\n        <Button onClick={cancel}><DeleteIcon style={{color: '#555'}} /></Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\n// header name, add button, chips for each addon (WIP limit, EBS time estimate, etc), menu button\nconst ColumnHeader = ({ styles, col, add, menu }) => {\n  const dispatch = useDispatch();\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => setConfirmOpen(false) ||\n    res && dispatch(duck.deleteColumn(col.id));\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = res => setPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.renameColumn({ colID: col.id, name: res }));\n\n  return (\n    <div>\n      <div className={styles.columnHeaderContainer}>\n        <div className={styles.columnHeaderText}>\n          {col.name}\n        </div>\n        <div>\n          <Chip size='small' label=\"0/6\" />\n          <Chip size='small' label=\"3h\" />\n          <IconButton size='small' onClick={() => add()}>\n            <AddIcon />\n          </IconButton>\n          <PopoverMenu map={{\n            \"Rename\": () => setPromptOpen(true),\n            \"Delete\": () => setConfirmOpen(true),\n          }}>\n            <IconButton size='small'>\n              <MoreVertIcon />\n            </IconButton>\n          </PopoverMenu>\n        </div>\n      </div>\n      <hr className={styles.columnHeaderRule} />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this column?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title={`Rename column \"${col.name}\"`} subtitle=\"Don't worry, this action can be undone.\"\n          label=\"Name\" placeholder={col.name} />\n      )}\n    </div>\n  );\n};\n\nconst Card = ({ card, styles, index }) => {\n  const { id, content } = card;\n  const dispatch = useDispatch();\n  const [promptOpen, setPromptOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Draggable draggableId={id} index={index}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={styles.card + (snapshot.isDragging ? \" \"+styles.draggingCard : \"\")}\n            style={provided.draggableProps.style}\n            onClick={() => setPromptOpen(true)}>\n            {content.split('\\n').map((x,i)=><p key={i}>{x}</p>)}\n          </div>\n        )}\n      </Draggable>\n      {promptOpen && (\n        <CardEditDialog respond={() => setPromptOpen(false)} card={card} />\n      )}\n    </React.Fragment>\n  );\n}\n\nconst AddColumn = ({ styles, add, hide }) => {\n  return (\n    <div className={styles.column} style={{\n        width: cardWidth, display: 'flex', justifyContent: 'center',\n        alignItems: 'center', height: '100px', opacity: hide ? 0 : 1\n      }}>\n      <IconButton onClick={add}>\n        <AddIcon />\n      </IconButton>\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TabView, UndoRedo } from '../components';\nimport BoardView from './boardview';\nimport * as duck from '../ducks/kanban';\nimport { PopoverMenu, ConfirmDialog, PromptDialog } from '../components';\n\n// TODO: tabview should not handle tab no state\n\nexport default () => {\n  const dispatch = useDispatch();\n  const [currentTab, setCurrentTab] = React.useState(0);\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => setConfirmOpen(false) ||\n    res && (dispatch(duck.deleteTab(currentTab)), setCurrentTab(Math.max(0,currentTab-1)));\n\n  const [addPromptOpen, setAddPromptOpen] = React.useState(false);\n  const addPromptRespond = res => setAddPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.addTab(res));\n\n  const [renamePromptOpen, setRenamePromptOpen] = React.useState(false);\n  const renamePromptRespond = res => setRenamePromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.renameTab({ tabID: tabs[currentTab].id, name: res }));\n\n  // [{name, id, columns (ids)},...]\n  const tabs = useSelector(state => state.boards.present.tabs);\n  return (\n    <React.Fragment>\n      <TabView\n        tabs={tabs.map(tab => tab.name)}\n        render={i => <BoardView tabInfo={{ tab: tabs[i], index: i }} />}\n        addTab={() => setAddPromptOpen(true)}\n        renameTab={() => setRenamePromptOpen(true)}\n        deleteTab={() => tabs.length > 1 ? setConfirmOpen(true) : alert(\"Cannot delete only tab\")}\n        children={<UndoRedo />}\n        index={currentTab} setIndex={setCurrentTab}\n      />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this tab?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {addPromptOpen && (\n        <PromptDialog open respond={addPromptRespond} title=\"Add tab\" label=\"Name\" />\n      )}\n      {renamePromptOpen && (\n        <PromptDialog open respond={renamePromptRespond}\n          title={`Rename tab ${tabs[currentTab].name}`} label=\"Name\" />\n      )}\n    </React.Fragment>\n  );\n}\n","\nimport { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport boards from './ducks/kanban';\nimport { saveState } from './common/utils';\n\nconst reducer = combineReducers({\n  boards,\n  // notes,\n});\n\nconst store = configureStore({ reducer });\n\n// Undo/redo keyboard shortcuts if supported\ntry {\n  document.addEventListener('keyup', e => {\n    if (e.ctrlKey && e.which === 90)\n      store.dispatch(UndoActionCreators.undo());\n    else if (e.ctrlKey && e.shiftKey && e.which === 90 || e.ctrlKey && e.which === 89)\n      store.dispatch(UndoActionCreators.redo());\n  });\n} catch (e) {}\n\n// Save board state (excluding history)\n// TODO: how can we include history? We cannot serialise all state easily with our combineReducers\n// approach unfortunately\nconst localStorageSubscriber = () => saveState(store.getState().boards.present);\nstore.subscribe(localStorageSubscriber);\nlocalStorageSubscriber(); // save data generated on first run\n\nexport default store;\n","\n/**\n * app.js\n * Main JSX source file for the app\n * Details like screen size and renderer are abstracted away by index.[platform].js\n * and ../index.js\n */\n\nimport React from 'react';\nimport { StyleSheet, Text, View, Platform } from 'react-native';\nimport { Provider } from 'react-redux';\n\nimport { Button, MenuBar } from './components';\nimport Kanban from './kanban';\nimport store from './store';\n\nexport default () => {\n  const [active, setActive] = React.useState(0);\n  const style = Platform.OS === \"web\"\n    ? { height: \"calc(100% - 48px)\" }\n    : { flexGrow: 1 };\n\n  return (\n    <Provider store={store}>\n      <View style={{ top: 0, left: 0, height: \"100%\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n\n        <View style={style}>\n          { active === 0 && (\n            <Kanban />\n          )}\n        </View>\n\n        <MenuBar active={active} setActive={setActive} />\n\n      </View>\n    </Provider>\n  );\n}\n","\nimport { registerRootComponent } from 'expo';\n\nimport Application from './src/index';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(Application);\n","\n/**\n * index.web.js\n * Simple Application wrapper that implements web-specific functionality\n */\n\nimport React from 'react';\nimport Application from './app';\n\nexport default props => (\n  <Application style={{ top: 0, left: 0, height: \"100%\", width: \"100%\" }} />\n);\n"],"sourceRoot":""}