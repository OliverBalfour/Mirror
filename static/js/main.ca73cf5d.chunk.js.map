{"version":3,"sources":["common/utils.js","components/popovermenu.js","components/tabview.js","components/button.js","ducks/kanban.js","store.js","components/markdown.js","components/autocomplete-editor.js","kanban/attributes/description.js","kanban/attributes/datetime.js","kanban/attributes/ebs.js","kanban/attributes/index.js","components/dialogs.js","components/menubar.js","components/undoredo.js","kanban/column-header.js","kanban/card.js","kanban/column.js","kanban/boardview.js","kanban/index.js","zettelkasten/index.js","app.js","serviceWorker.js","index.js"],"names":["__lastGeneratedID","generateID","format","newID","fn","Date","substring","length","parseInt","dummyState","epochms","getTime","ids","initial","tabs","name","id","created","edited","colnums","colnames","numcards","reduce","a","b","cards","sampleCards","i","type","content","Math","floor","random","moved","columns","cnt","items","Object","keys","slice","dummyCols","colIDs","tabOrder","description","modifyVersion","oldSemver","newSemver","mutation","localStorage","version","state","JSON","parse","kanban","stringify","objectMap","object","mapFn","result","key","prettyPrintDate","epochMilliseconds","date","now","time","getHours","getMinutes","diff","weekDiff","weekStartsOn","yearDiff","day","getDate","currentLoc","window","location","hash","replace","useHashLocation","React","loc","setLoc","handler","addEventListener","removeEventListener","to","history","replaceState","undefined","linkName","card","firstLine","split","mergeRefs","refs","filteredRefs","filter","Boolean","inst","ref","current","ReloadProtect","shouldProtect","onbeforeunload","e","map","children","anchorEl","setAnchorEl","handleClose","Menu","keepMounted","open","onClose","entries","func","MenuItem","onClick","currentTarget","TabPanel","show","hidden","style","height","render","index","setIndex","addTab","renameTab","deleteTab","moveTab","handleChange","event","newValue","Grow","flexGrow","flex","AppBar","position","backgroundColor","zIndex","Tabs","value","onChange","indicatorColor","textColor","tab","Tab","label","IconButton","makeStyles","theme","button","transferCard","createAction","reorderCard","addCard","editCardContent","editCard","deleteCard","addColumn","deleteColumn","renameColumn","moveColumn","archiveCardsInColumn","addZettel","editZettel","deleteZettel","toggleZettelStarred","deleteInList","list","elem","indexOf","splice","selectors","getColumnsInTabs","colID","col","archivedCards","values","activeCards","starredZettels","cardsByTab","flatMap","initialState","Error","cardID","numCols","hasOwnProperty","loadState","reducer","createReducer","s","payload","srcColID","dstColID","srcIndex","dstIndex","srcCol","dstCol","removed","newitems","unshift","tabIdx","forEach","tabID","push","shift","srcIdx","dstIdx","archived","archivedFromColID","zettel","undoable","limit","store","configureStore","boards","middleware","getDefault","concat","thunk","document","activeElement","tagName","toLowerCase","ctrlKey","which","shiftKey","dispatch","UndoActionCreators","undo","redo","globalSelectors","present","boardSelectors","localSelector","localStorageSubscriber","serialised","setItem","saveState","getState","subscribe","props","source","m","prefix","regex","exec","lastIndex","parseable","match","before","link","after","parseWikilinks","escapeHtml","setValue","autoFocus","addNote","rows","rowsMax","inputRef","useSelector","editor","TextareaEditor","strategy","context","beforeCursor","search","term","callback","matches","tl","includes","searchCards","cache","template","setTimeout","textcomplete","Textcomplete","dropdown","rotate","maxCount","destroy","TextField","margin","fullWidth","variant","multiline","target","inputProps","Edit","setCard","editingDescription","setEditingDescription","InputLabel","className","ClickAwayListener","onClickAway","width","marginTop","Indicator","title","join","icon","enAU","weekStart","setDateTime","utils","DateFnsUtils","locale","DateTimePicker","newDate","showTodayButton","Button","color","float","startOfToday","setEBS","ebsFields","ebs","prettySeconds","estimate","estStr","setEstStr","elapsed","elapStr","setElapStr","historical","sel","setEBSEstimate","str","unprettySeconds","computed","computeEstimate","invalid","marginRight","error","helperText","setEBSElapsed","FormControlLabel","control","Checkbox","checked","exact","size","ratio","acc","seconds","abs","round","hours","minutes","groups","x","pf","k","parseFloat","useStyles","padding","header","marginBottom","IndicatorBuilder","Chip","classes","borderRadius","background","AttributeHeader","ConfirmDialog","respond","subtitle","labels","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","PromptDialog","inputType","placeholder","buttons","done","CardEditDialog","useDispatch","currentColID","setColID","newCard","setContent","maxWidth","disableBackdropClick","Select","labelId","ListSubheader","duck","AboutDialog","href","active","setActive","useState","aboutOpen","setAboutOpen","Fragment","top","bottom","Toolbar","minHeight","edge","console","log","val","TabIndicatorProps","verticalAlign","prompt","clear","filename","createElement","blob","Blob","URL","createObjectURL","download","click","downloadData","ActionCreators","add","menu","confirmOpen","setConfirmOpen","promptOpen","setPromptOpen","res","setEditingCard","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","isDragging","editingNew","setEditingNew","editingValue","setEditingValue","addButton","scrollContainerRef","scrollTop","menuButton","internals","droppableId","ignoreContainerClipping","isDraggingOver","cancel","EditingCard","cb","ButtonGroup","AddColumn","hide","tabInfo","tabObj","editingCard","tabIDfromCardID","onDragEnd","destination","direction","draggingFromThisWith","currentTab","setCurrentTab","num","addPromptOpen","setAddPromptOpen","renamePromptOpen","setRenamePromptOpen","alert","data","max","setLocNoHist","starred","currentCardID","setNewCard","part","editing","setEditing","yes","starZettel","screenNames","getScreen","left","display","flexDirection","n","getScreenName","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ca73cf5d.chunk.js","sourcesContent":["\nimport * as fn from 'date-fns';\nimport * as React from 'react';\n\nlet __lastGeneratedID = null;\nexport const generateID = () => {\n  const format = \"yyyyMMdd-hhmmss\";\n  let newID = fn.format(new Date(), format);\n  // if we generate multiple IDs in one second, we add \"-n\" where n is 1,2,...\n  // the only time this causes collisions is if you add a card, refresh, add a card within 1s\n  if (__lastGeneratedID !== null && __lastGeneratedID.substring(0, format.length) === newID) {\n    if (__lastGeneratedID.length === format.length) newID += \"-1\";\n    else newID += '-' + (parseInt(__lastGeneratedID.substring(format.length + 1, __lastGeneratedID.length)) + 1)\n  }\n  __lastGeneratedID = newID;\n  return newID;\n}\n\n// generate { cards, columns } where each column has colnum[i] cards\n// both of these are objects where the keys are unique IDs\n// cards are { id, content } structs\n// todo: make them arrays containing their IDs and write selectors instead\n// columns are { id, items: [ id ] } structs\n// Example: {\n//   cards: [{ id: \"a\", content: \"Item 1\" }],\n//   columns: [{ id: \"b\", items: [\"a\"] }],\n//   tabs: [{ name: \"Main\", columns: [\"b\"] }]\n// }\nexport const dummyCols = (colnums, colnames) => {\n  let numcards = colnums.reduce((a, b) => a + b, 0);\n  let cards = {};\n  let sampleCards = [\n    \"Wash the dishes\",\n    \"Make cool app\",\n    \"Run out of ideas for sample tasks for the app you're making\",\n    \"Cook pizza for dinner\",\n    \"Finish your chemistry homework\",\n    \"Write a tutorial explaining how monads are isomorphic to burritos in the category of food\",\n    \"Forget to wrap a line at 300 characters\",\n    \"Learn Common Lisp\",\n    \"Do normal human things\",\n    \"Prove P=NP for N=1\",\n    \"Eat some chocolate\",\n    \"Stop eating so much chocolate\",\n    \"Write witty comment\",\n    \"🙂\"];\n  const epochms = new Date().getTime();\n  for (let i = 0; i < numcards; i++) {\n    let id = generateID();\n    cards[id] = { id, type: 0, content: sampleCards[Math.floor(Math.random()*sampleCards.length)],\n      created: epochms, edited: epochms, moved: epochms };\n  }\n  let columns = {};\n  for (let i = 0, cnt = 0; i < colnums.length; i++) {\n    let items = Object.keys(cards).slice(cnt, cnt + colnums[i]);\n    let id = generateID();\n    columns[id] = { id, items, name: colnames[i], created: epochms, edited: epochms };\n    cnt += colnums[i];\n  }\n  return { cards, columns };\n};\n\n// generate initial dummy state\nexport const dummyState = () => {\n  const epochms = new Date().getTime();\n  const ids = [generateID(), generateID()];\n  let initial = {\n    tabs: {\n      [ids[0]]: { name: \"Main\",      id: ids[0], created: epochms, edited: epochms },\n      [ids[1]]: { name: \"Secondary\", id: ids[1], created: epochms, edited: epochms }\n    },\n    ...dummyCols([9,2,6,5,4], [\"To Do\",\"Doing\",\"Done\",\"Misc 1\",\"Misc 2\"])\n  };\n  const colIDs = Object.keys(initial.columns);\n  initial.tabs[ids[0]].columns = [colIDs[0], colIDs[1], colIDs[2]];\n  initial.tabs[ids[1]].columns = [colIDs[3], colIDs[4]];\n  initial.tabOrder = ids;\n  initial.cards['main'] = { id:'main', content: 'Welcome', type: 1, description: 'Welcome to your Zettelkasten! You can edit this and use `[[wikilink]]` syntax to link to other nodes.',\n    created: epochms, edited: epochms }\n  return initial;\n}\n\nconst modifyVersion = (oldSemver, newSemver, mutation) => {\n  if (localStorage.version === oldSemver) {\n    let state = JSON.parse(localStorage.kanban);\n    mutation(state);\n    localStorage.kanban = JSON.stringify(state);\n    localStorage.version = newSemver;\n  }\n};\n\n// load persisted state\nconst currentVersion = \"0.2.1\"; // IMPORTANT\nexport const loadState = () => {\n  try {\n\n    // web\n    if (!localStorage.version) throw new Error();\n\n    // avert breaking changes\n    modifyVersion(\"0.1.0\", \"0.2.0\", state => {\n      const epochms = new Date().getTime();\n      state.cards['main'] = { id:'main', content: 'Welcome', description: 'Welcome to your Zettelkasten! You can edit this and use `[[wikilink]]` syntax to link to other nodes.',\n      created: epochms, edited: epochms }\n      return state;\n    });\n    modifyVersion(\"0.2.0\", \"0.2.1\", state => {\n      for (const cardID in state.cards) {\n        const numCols = Object.values(state.columns).filter(col => col.items.indexOf(cardID) !== -1).length;\n        state.cards[cardID].type = numCols ? 0 : 1;\n      }\n      state.cards['main'].type = 1;\n      return state;\n    });\n\n    if (localStorage.hasOwnProperty('kanban'))\n      return JSON.parse(localStorage.kanban) || dummyState();\n\n  } catch (e) {}\n  return dummyState();\n}\n\nexport const saveState = state => {\n  try {\n    if (localStorage) {\n      const serialised = JSON.stringify(state);\n      localStorage.setItem(\"kanban\", serialised);\n      localStorage.setItem(\"version\", currentVersion);\n    }\n  } catch (e) {}\n}\n\n// Source: https://stackoverflow.com/a/14810722/4642943\n// returns a new object with the values at each key mapped using mapFn(value)\nexport const objectMap = (object, mapFn) =>\n  Object.keys(object).reduce(function(result, key) {\n    result[key] = mapFn(object[key])\n    return result\n  }, {});\n\n/**\n * Returns a heavily abbreviated pretty printed date using date-fns\n * - Only includes time if within a week and not midnight\n * - Only includes minutes if nonzero\n * - Replaces date with \"Tomorrow\", \"Next Fri\" or \"Last Wed\", etc.\n */\nexport const prettyPrintDate = epochMilliseconds => {\n  const date = new Date(epochMilliseconds);\n  const now = new Date();\n\n  const getDate = date => {\n    const diff = fn.differenceInCalendarDays(date, now);\n    const weekDiff = fn.differenceInCalendarWeeks(date, now, { weekStartsOn: 1 });\n    const yearDiff = fn.differenceInCalendarYears(date, now);\n\n    // Relative dates are quite ambiguous in English\n    // If today is Wednesday 23 September 2020, then the following mappings are adhered to:\n\n    // 15/9/19: 15 Sep 2019\n    // 15/9/20: 15 Sep\n    // 16/9/20: Last Wed\n    // 21/9/20: Last Mon\n    // 22/9/20: Yesterday\n    // 23/9/20: Today\n    // 24/9/20: Tomorrow\n    // 25/9/20: Fri\n    // 27/9/20: Sun\n    // 28/9/20: Next Mon\n    // 7/10/20: Wed Week\n\n    if (diff ===  0) return \"Today\";\n    if (diff === -1) return \"Yesterday\";\n    if (diff ===  1) return \"Tomorrow\";\n\n    const day = fn.format(date, \"EEE\"); // eg Mon, Thu\n\n    if (weekDiff === 0 && diff >= 0) return day;\n\n    if (diff >= -7 && diff <   0) return `Last ${day}`;\n    if (diff >   0 && diff <=  7) return `Next ${day}`;\n    if (diff >   7 && diff <= 14) return `${day} Week`;\n\n    if (yearDiff === 0)\n      return fn.format(date, \"MMM do\"); // eg: Sep 17th\n    else\n      return fn.format(date, \"MMM do yyyy\"); // eg: Sep 17th 2021 if it's 2020\n  }\n\n  const getTime = date => {\n    // ignore time if midnight\n    if (date.getHours() === 0 && date.getMinutes() === 0) return null;\n    // No minutes; eg 4PM\n    if (date.getMinutes() === 0) return fn.format(date, \"haaa\");\n    return fn.format(date, \"h:mmaaa\");\n  }\n\n  const time = getTime(date);\n  return getDate(date) + (time ? \" \" + time : \"\");\n};\n\n// Web: Download content as filename with specificed MIME type\nexport const downloadData = (content, filename, type) => {\n    if(!type) type = 'application/octet-stream';\n    const a = document.createElement('a');\n    const blob = new Blob([content], { type });\n    a.href = window.URL.createObjectURL(blob);\n    a.download = filename;\n    a.click();\n}\n\n// Web: returns the current hash location (excluding the '#' symbol)\n// Based on https://codesandbox.io/s/wouter-hash-based-hook-5fp9g\nconst currentLoc = () => window.location.hash.replace(\"#\", \"\") || \"/\";\nexport const useHashLocation = () => {\n  const [loc, setLoc] = React.useState(currentLoc());\n  React.useEffect(() => {\n    const handler = () => setLoc(currentLoc());\n    window.addEventListener(\"hashchange\", handler);\n    return () => window.removeEventListener(\"hashchange\", handler);\n  }, []);\n  const navigate = React.useCallback(to => window.location.hash = to, []);\n  const navigateNoHistory = React.useCallback(to => {\n    history.replaceState(undefined, undefined, \"#\"+to);\n    setLoc(to); // because handler does not detect replaceState\n  }, []);\n  return [loc, navigate, navigateNoHistory];\n};\n\nexport const linkName = card => {\n  if (!card) return 'unknown';\n  const firstLine = card.content.split('\\n')[0];\n  if (firstLine.length > 40) return firstLine.substring(0,37) + '...';\n  return firstLine;\n};\nexport const parseWikilinks = (source, cards, prefix = '#/notes/') => {\n  const regex = /(\\[\\[[A-Za-z0-9_-]+\\]\\])/gm; // assumes card IDs are alphanumeric + dash + underscore\n  let m;\n  while ((m = regex.exec(source)) !== null) {\n    if (m.index === regex.lastIndex) regex.lastIndex++;\n    // m.index is the index in 'source'\n    const parseable = (source.substring(0, m.index).match(/`/gm) || []).length % 2 === 0;\n    if (!parseable) continue;\n\n    // m[1] is the actual match\n    let cardID = m[1].substring(2, m[1].length - 2);\n\n    // replace [[CARD_ID]] with [CARD_NAME](#/notes/CARD_ID)\n    let before = source.substring(0, m.index),\n        name = linkName(cards[cardID]),\n        link = prefix + cardID,\n        after = source.substring(m.index + m[1].length, source.length);\n    source = before + `[${name}](${link})` + after;\n  }\n  return source;\n};\n\n// Source: https://www.davedrinks.coffee/how-do-i-use-two-react-refs/\nexport const mergeRefs = (...refs) => {\n  const filteredRefs = refs.filter(Boolean);\n  if (!filteredRefs.length) return null;\n  if (filteredRefs.length === 0) return filteredRefs[0];\n  return inst => {\n    for (const ref of filteredRefs) {\n      if (typeof ref === 'function') {\n        ref(inst);\n      } else if (ref) {\n        ref.current = inst;\n      }\n    }\n  };\n};\n\n// Simple card search; searches titles then descriptions then IDs for case insensitive exact matches\nexport const searchCards = (term, cards, limit=10) => {\n  let matches = [];\n  let tl = term.toLowerCase();\n  for (const cardID in cards) {\n    if (cards[cardID].content.toLowerCase().includes(tl)) {\n      matches.push(cardID);\n      if (matches.length === limit) return matches;\n    }\n  }\n  for (const cardID in cards) {\n    if (cards[cardID].description && cards[cardID].description.toLowerCase().includes(tl)) {\n      matches.push(cardID);\n      if (matches.length === limit) return matches;\n    }\n  }\n  for (const cardID in cards) {\n    if (cardID.toLowerCase().includes(tl)) {\n      matches.push(cardID);\n      if (matches.length === limit) return matches;\n    }\n  }\n  return matches;\n}\n\n// Note: ReloadProtect does not prevent hash changes. Be warned!\nexport const ReloadProtect = ({ shouldProtect = true }) => {\n  React.useEffect(() => {\n    // componentDidMount\n    if (shouldProtect)\n      window.onbeforeunload = e => \"Are you sure you want to quit?\";\n    // componentWillUnmount\n    return () => window.onbeforeunload = null;\n  });\n  return null;\n}\n","\n// Popover menu (web)\nimport * as React from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\n\n\nexport default ({ map, children }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => setAnchorEl(null);\n\n  return (\n    <React.Fragment>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}>\n        {Object.entries(map).map(([name, func]) => (\n          <MenuItem key={name}\n            onClick={() => { handleClose(); func() }}>\n            {name}\n          </MenuItem>\n        ))}\n      </Menu>\n      {React.cloneElement(children, {\n        onClick: e => setAnchorEl(e.currentTarget)\n      })}\n    </React.Fragment>\n  );\n}\n","\n/**\n * TabView component\n *\n * <TabView\n *   tabs={[\"one\", \"two\", \"three\"]}\n *   render={i => (<SomeComponent index={i} />)}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { AppBar, Tabs, Tab, IconButton } from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport PopoverMenu from './popovermenu';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst TabPanel = ({ show, children }) => (\n  <div hidden={!show} style={{ height: 'calc(100% - 48px)' }}>\n    {show && children}\n  </div>\n);\n\nexport default ({\n  tabs, render, children, index, setIndex,\n  addTab, renameTab, deleteTab, moveTab\n}) => {\n  const handleChange = (event, newValue) => newValue >= 0 && newValue < tabs.length && setIndex(newValue);\n  const Grow = () => <div style={{ flexGrow: 1 }} />;\n\n  return (\n    <div style={{ flex: 1 }}>\n      <AppBar position=\"static\" style={{\n          backgroundColor: \"white\",\n          zIndex: 2, position: 'relative'\n        }}>\n        <Tabs value={index} onChange={handleChange}\n          indicatorColor=\"primary\" textColor=\"primary\">\n          {tabs.map(tab => (\n            <Tab label={tab} key={tab} />\n          ))}\n          <Grow />\n          <PopoverMenu map={{\n            \"Add tab\": () => addTab(),\n            \"Rename tab\": () => renameTab(index),\n            \"Delete tab\": () => deleteTab(index),\n            \"Move tab left\": () => (moveTab([index, index-1]), handleChange(null, index-1)),\n            \"Move tab right\": () => (moveTab([index, index+1]), handleChange(null, index+1)),\n          }}>\n            <IconButton>\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n          {children}\n        </Tabs>\n      </AppBar>\n      {tabs.map((tab, i) => (\n        <TabPanel show={index === i} key={tab}>\n          {index === i && render(i)}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({ button: {} }));\n\nexport default props => (\n  <Button className={useStyles().button} variant=\"contained\" color=\"primary\" {...props} />\n);\n","\n/**\n * Kanban boards core Redux logic\n *\n * State is normalised as { tabs, columns, cards }\n *  where each tab has several columns which contain cards\n *  each has a unique ID as a key in the respective object\n */\n\nimport { createReducer, createAction, createSelector } from '@reduxjs/toolkit';\nimport undoable from 'redux-undo';\nimport { loadState, generateID, objectMap } from '../common/utils';\n\n// Action creators\n\nexport const transferCard = createAction('kanban/TRANSFER_CARD');\nexport const reorderCard = createAction('kanban/REORDER_CARD');\nexport const addCard = createAction('kanban/ADD_CARD'); // takes { content, colID }\nexport const editCardContent = createAction('kanban/EDIT_CARD_CONTENT');//takes {content, cardID}\nexport const editCard = createAction('kanban/EDIT_CARD'); // takes a card object; allows editing all of a card's params\nexport const deleteCard = createAction('kanban/DELETE_CARD');//takes cardID\n\nexport const moveCard = ([srcColID, dstColID, srcIndex, dstIndex]) =>\n  srcColID === dstColID\n    ? reorderCard({ colID: srcColID, srcIndex, dstIndex })\n    : transferCard({ srcColID, dstColID, srcIndex, dstIndex });\n\nexport const addColumn = createAction('kanban/ADD_COLUMN'); // takes { name, tabID }\nexport const deleteColumn = createAction('kanban/DELETE_COLUMN'); // takes string column ID\nexport const renameColumn = createAction('kanban/RENAME_COLUMN'); // takes { colID, name }\nexport const moveColumn = createAction('kanban/MOVE_COLUMN'); // takes [srcIdx, dstIdx, tabIdx]\nexport const archiveCardsInColumn = createAction('kanban/ARCHIVE_ALL_COLUMN'); // takes colID\n\nexport const addTab = createAction('kanban/ADD_TAB'); // takes name\nexport const deleteTab = createAction('kanban/DELETE_TAB'); // takes tabIdx\nexport const renameTab = createAction('kanban/RENAME_TAB'); // takes { tabID, name }\nexport const moveTab = createAction('kanban/MOVE_TAB'); // takes [srcIdx, dstIdx]\n\nexport const addZettel = createAction('zettelkasten/ADD_ZETTEL'); // takes { zettel: {...} }\nexport const editZettel = createAction('zettelkasten/EDIT_ZETTEL'); // takes { zettel }\nexport const deleteZettel = createAction('zettelkasten/DELETE_ZETTEL'); // takes zettelID\nexport const toggleZettelStarred = createAction('zettelkasten/TOGGLE_STARRED'); // takes zettelID\n\n// Helpers\n\n// const indexFromID = (list, id) => list.map(item => item.id === id).indexOf(true);\n// const deleteByID = (list, id) => list.splice(indexFromID(list, id), 1);\nconst deleteInList = (list, elem) => {\n  let index = list.indexOf(elem);\n  if (index !== -1) list.splice(index, 1); // undesired behaviour when splicing at (-1, 1)\n  return index !== -1;\n};\n// const _deleteColumn = (s, id) => {\n//   const colIdx = indexFromID(s.columns, id);\n//   s.columns[colIdx].items.forEach(cardID => deleteByID(s.cards, cardID));\n//   s.tabs.forEach(tab => deleteInList(tab.columns, id));\n//   deleteByID(s.columns, id);\n// };\n\n// Selectors\n\nexport const selectors = {\n  // Map[TabID, Column], Column :: { id, items: List[Card] }, not List[CardID]\n  getColumnsInTabs: state =>\n    objectMap(state.tabs, tab =>\n      tab.columns.map(colID => state.columns[colID]).map(col => ({\n        ...col, items: col.items.map(card => state.cards[card])\n      }))),\n  columns: state => state.columns,\n  tabs: state => state.tabs,\n  tabOrder: state => state.tabOrder,\n  cards: state => state.cards,\n  archivedCards: state => Object.values(state.cards).filter(card => Object.keys(card).indexOf(\"archived\") !== -1),\n  activeCards:   state => Object.values(state.cards).filter(card => Object.keys(card).indexOf(\"archived\") === -1),\n  starredZettels: state => state.starredZettels ? state.starredZettels : [],\n  // gets { [tabID]: list_of_cardIDs }\n  cardsByTab: state => objectMap(state.tabs, tab =>\n    tab.columns.flatMap(colID => state.columns[colID].items)),\n};\n\n// Reducers\n\nexport const\n  KANBAN_CARD_TYPE = 0,\n  ZETTEL_NOTE_TYPE = 1;\n\nconst initialState = loadState();\n\nconst reducer = createReducer(initialState, {\n  [transferCard]: (s, a) => {\n    const { srcColID, dstColID, srcIndex, dstIndex } = a.payload;\n    let srcCol = s.columns[srcColID].items;\n    let dstCol = s.columns[dstColID].items;\n    const [removed] = srcCol.splice(srcIndex, 1);\n    const epochms = new Date().getTime();\n    s.cards[removed].moved = epochms;\n    s.columns[srcColID].edited = epochms;\n    s.columns[dstColID].edited = epochms;\n    dstCol.splice(dstIndex, 0, removed);\n  },\n  [reorderCard]: (s, a) => {\n    const { colID, srcIndex, dstIndex } = a.payload;\n    const epochms = new Date().getTime();\n    s.columns[colID].edited = epochms;\n    let newitems = s.columns[colID].items;\n    const [removed] = newitems.splice(srcIndex, 1);\n    s.cards[removed].moved = epochms;\n    newitems.splice(dstIndex, 0, removed);\n    s.columns[colID].items = newitems;\n  },\n  [addCard]: (s, a) => {\n    const { content, colID } = a.payload;\n    const id = generateID();\n    const epochms = new Date().getTime();\n    // add to cards list\n    s.cards[id] = { id, content, type: KANBAN_CARD_TYPE,\n      created: epochms,  edited: epochms, moved: epochms };\n    s.columns[colID].items.unshift(id); // add to top of column\n    s.columns[colID].edited = epochms;\n  },\n  [deleteColumn]: (s, a) => {\n    const colID = a.payload;\n    const tabIdx = Object.values(s.tabs).map(tab => tab.columns.indexOf(a.payload) !== -1).indexOf(true);\n    if (tabIdx >= 0) s.tabs[s.tabOrder[tabIdx]].edited = new Date().getTime();\n    s.columns[colID].items.forEach(cardID => delete s.cards[cardID]);\n    Object.values(s.tabs).forEach(tab => deleteInList(tab.columns, colID));\n    delete s.columns[colID];\n  },\n  [renameColumn]: (s, a) => {\n    const { colID, name } = a.payload;\n    s.columns[colID].name = name;\n    s.columns[colID].edited = new Date().getTime();\n  },\n  [editCardContent]: (s, a) => {\n    const { cardID, content } = a.payload;\n    s.cards[cardID].content = content;\n    s.cards[cardID].edited = new Date().getTime();\n  },\n  [deleteCard]: (s, a) => {\n    Object.values(s.columns).forEach(col => {\n      if (deleteInList(col.items, a.payload))\n        col.edited = new Date().getTime();\n    });\n    delete s.cards[a.payload];\n  },\n  [addColumn]: (s, a) => {\n    const { tabID, name } = a.payload;\n    const id = generateID();\n    const epochms = new Date().getTime();\n    s.columns[id] = { id, items: [], name, created: epochms, edited: epochms };\n    s.tabs[tabID].columns.push(id);\n    s.tabs[tabID].edited = epochms;\n  },\n  [editCard]: (s, a) => {\n    const { card, colID } = a.payload;\n    const epochms = new Date().getTime();\n    s.cards[card.id] = a.payload.card;\n    s.cards[card.id].edited = epochms;\n    const srcColID = Object.keys(s.columns).filter(colID => s.columns[colID].items.indexOf(card.id) !== -1)[0];\n    const dstColID = colID;\n    if (srcColID !== dstColID) {\n      deleteInList(s.columns[srcColID].items, card.id);\n      s.columns[dstColID].items.unshift(card.id);\n      s.columns[srcColID].edited = s.columns[dstColID].edited = epochms;\n    }\n  },\n  [deleteTab]: (s, a) => {\n    const tabIdx = a.payload;\n    const tab = s.tabs[s.tabOrder[tabIdx]];\n    while (tab.columns.length) {\n      const colID = tab.columns[0];\n      s.columns[colID].items.forEach(cardID => delete s.cards[cardID]);\n      delete s.columns[colID];\n      tab.columns.shift();\n    }\n    delete s.tabs[s.tabOrder[tabIdx]];\n    s.tabOrder.splice(tabIdx, 1);\n  },\n  [addTab]: (s, a) => {\n    const id = generateID();\n    const name = a.payload;\n    s.tabs[id] = { name, id, columns: [], created: new Date().getTime() };\n    s.tabOrder.push(id);\n  },\n  [renameTab]: (s, a) => {\n    const { tabID, name } = a.payload;\n    s.tabs[tabID].name = name;\n    s.tabs[tabID].edited = new Date().getTime();\n  },\n  [moveColumn]: (s, a) => {\n    const [srcIdx, dstIdx, tabIdx] = a.payload;\n    const tabID = s.tabOrder[tabIdx];\n    let newitems = s.tabs[tabID].columns;\n    const [removed] = newitems.splice(srcIdx, 1);\n    newitems.splice(dstIdx, 0, removed);\n    s.tabs[tabID].columns = newitems;\n    s.tabs[tabID].edited = new Date().getTime();\n  },\n  [moveTab]: (s, a) => {\n    const [srcIdx, dstIdx] = a.payload;\n    if (dstIdx < 0 || dstIdx >= s.tabs.length) return;\n    let newitems = s.tabOrder;\n    const [removed] = newitems.splice(srcIdx, 1);\n    newitems.splice(dstIdx, 0, removed);\n    s.tabOrder = newitems;\n  },\n  [archiveCardsInColumn]: (s, a) => {\n    // archived cards still exist in memory but are not listed in a column's items\n    const colID = a.payload;\n    const epochms = new Date().getTime();\n    s.columns[colID].items.forEach(cardID => {\n      let card = s.cards[cardID];\n      card.moved = card.edited = card.archived = epochms;\n      card.archivedFromColID = a.payload;\n    });\n    s.columns[colID].items = [];\n    s.columns[colID].edited = epochms;\n  },\n  [addZettel]: (s, a) => {\n    const { zettel } = a.payload;\n    const id = zettel.id || generateID();\n    const epochms = new Date().getTime();\n    s.cards[id] = { id, type: ZETTEL_NOTE_TYPE, created: epochms,  edited: epochms, moved: epochms,\n      ...zettel };\n  },\n  [editZettel]: (s, a) => {\n    const { zettel } = a.payload;\n    const epochms = new Date().getTime();\n    // editZettel does not add new zettels\n    if (Object.keys(s.cards).indexOf(zettel.id) === -1) return;\n    s.cards[zettel.id] = zettel;\n    s.cards[zettel.id].edited = epochms;\n  },\n  [deleteZettel]: (s, a) => {\n    // TODO: clean up links?\n    delete s.cards[a.payload];\n  },\n  [toggleZettelStarred]: (s, a) => {\n    if (!s.starredZettels) s.starredZettels = [];\n    if (s.starredZettels.indexOf(a.payload) === -1)\n      s.starredZettels.push(a.payload);\n    else\n      deleteInList(s.starredZettels, a.payload);\n  },\n});\n\nexport default undoable(reducer, {limit:20});\n","\nimport { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport boards, { selectors as boardSelectors } from './ducks/kanban';\nimport { saveState, objectMap } from './common/utils';\n\nconst store = configureStore({\n  reducer: boards,\n  middleware: getDefault => getDefault().concat(thunk),\n});\n\n// Undo/redo keyboard shortcuts if supported\ntry {\n  document.addEventListener('keyup', e => {\n    const ignored = ['input', 'textarea'];\n    if (ignored.indexOf(document.activeElement.tagName.toLowerCase()) !== -1) return;\n    if (e.ctrlKey && e.which === 90 && !e.shiftKey)\n      store.dispatch(UndoActionCreators.undo());\n    else if (e.ctrlKey && e.shiftKey && e.which === 90 || e.ctrlKey && e.which === 89)\n      store.dispatch(UndoActionCreators.redo());\n  });\n} catch (e) {}\n\nexport default store;\n\n// produce global selectors\nexport const globalSelectors = {\n  boards: state => state.present\n}\nexport const selectors = {\n  boards: objectMap(boardSelectors, localSelector => state => localSelector(globalSelectors.boards(state)))\n};\n\n// Save board state (excluding history)\n// to save history efficiently we would need to store a state 50 states ago, the 50 actions since,\n// and the current state; this would require a rewrite of redux-undo\nconst localStorageSubscriber = () => saveState(globalSelectors.boards(store.getState()));\nstore.subscribe(localStorageSubscriber);\nlocalStorageSubscriber(); // save data generated on first run\n","\nimport * as React from 'react';\nimport ReactMarkdown from 'react-markdown';\n// import htmlParser from 'react-markdown/plugins/html-parser';\nimport { parseWikilinks } from '../common/utils';\n\n// // See https://github.com/aknuds1/html-to-react#with-custom-processing-instructions for docs\n// const parseHtml = htmlParser({\n//   isValidNode: node => ['script', 'style', 'iframe'].indexOf(node.type) === -1\n// });\n\n// TODO: how can we add titles to the links which display some of the zettel contents?\n\n// parses wikilinks if the cards prop is present\nexport default props => {\n  const source = props.cards ? parseWikilinks(props.source, props.cards) : props.source;\n  return (\n    <ReactMarkdown\n      source={source}\n      escapeHtml={false}\n    />\n  );\n};\n","\nimport * as React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { Textcomplete } from '@textcomplete/core';\nimport { TextareaEditor } from '@textcomplete/textarea';\nimport { selectors } from '../store';\nimport { useSelector } from 'react-redux';\nimport { searchCards, linkName, generateID } from '../common/utils';\n\n// If addNote is a function an 'Add note' option will appear\n// It inserts a link to a note with a generated ID, and invokes\n// addNote on the generated ID.\nexport default ({ value, setValue, autoFocus = false, addNote, rows, rowsMax }) => {\n\n  const inputRef = React.useRef(null);\n  const cards = useSelector(selectors.boards.cards);\n\n  React.useEffect(() => {\n    const editor = new TextareaEditor(inputRef.current);\n    const strategy = {\n      // String -> Bool -- whether to proceed to matching phase\n      context: beforeCursor => beforeCursor.indexOf('[[') >= 0,\n      match: /\\[\\[([A-Za-z0-9_ -]+)$/, // captures the X in \"abc [[X\"\n      // term is captured substring; can use async (t, cb) => cb(await something(term));\n      search: (term, callback, match) => callback([...searchCards(term, cards), 0]),\n      cache: true,\n      // these take the input to the search callback\n      template: cardID => cardID === 0 ? (addNote ? `<em>Add note</em>` : '') : linkName(cards[cardID]),\n      replace: cardID => {\n        if (cardID === 0 && addNote) {\n          const id = generateID();\n          // run addNote after replacing text\n          setTimeout(() => addNote(id), 0);\n          return `[[${id}]]`;\n        } else {\n          return `[[${cardID}]]`;\n        }\n      },\n    }\n    const options = {\n      dropdown: {\n        rotate: true, // this means vertical wrapping under up/down arrows\n        maxCount: 10,\n      }\n    };\n    const textcomplete = new Textcomplete(editor, [strategy], options);\n    // cleanup\n    return () => {\n      textcomplete.destroy();\n      delete window['__addNote']\n    }\n    // eslint-disable-next-line\n  }, []); // passing dependencies breaks it\n\n  return (\n    <TextField margin=\"dense\" fullWidth variant=\"outlined\" autoFocus={autoFocus}\n      multiline rows={rows} rowsMax={rowsMax} value={value} onChange={e => setValue(e.target.value)}\n      inputProps={{ ref: inputRef }} />\n  );\n};\n","\nimport * as React from 'react';\nimport Markdown from '../../components/markdown';\nimport { ClickAwayListener, InputLabel } from '@material-ui/core';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport { IndicatorBuilder, AttributeHeader } from '.';\nimport { selectors } from '../../store';\nimport AutocompleteEditor from '../../components/autocomplete-editor';\nimport { useSelector } from 'react-redux';\n\nexport const Edit = ({ card, setCard }) => {\n  const [editingDescription, setEditingDescription] = React.useState(false);\n  const setDescription = description => setCard({...card,\n      description: description.length ? description : undefined});\n  const cards = useSelector(selectors.boards.cards);\n\n  if (!editingDescription && typeof card.description !== 'string')\n    return (\n      <AttributeHeader onClick={() => setEditingDescription(true)}>\n        Add description\n      </AttributeHeader>\n    );\n\n  return !editingDescription ? (\n    <div style={{marginTop: 8}}>\n      <div onClick={() => setEditingDescription(true)}>\n        <InputLabel className=\"custom-label\">Description</InputLabel>\n      </div>\n      <Markdown source={card.description} cards={cards} />\n    </div>\n  ) : (\n    <React.Fragment>\n      <InputLabel className=\"custom-label\">Description</InputLabel>\n      <ClickAwayListener onClickAway={() => setEditingDescription(false)}>\n        <div style={{width:'100%',height:'100%'}}>\n          <AutocompleteEditor value={card.description} setValue={setDescription}\n            autoFocus rows={6} rowsMax={24} />\n        </div>\n      </ClickAwayListener>\n    </React.Fragment>\n  );\n};\n\nexport const Indicator = ({ card }) => {\n  if (card.description) {\n    const limit = 500; // crop after this with ellisis\n    const title = card.description.split(\"\\n\\n\").join(\"\\n\").substring(0, limit)\n      + (card.description.length > limit ? \"...\" : \"\");\n\n    return <IndicatorBuilder label={null} title={title} icon={<NotesIcon />} />;\n  } else return null;\n};\n","\nimport * as React from 'react';\nimport { Button, InputLabel } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { format, startOfToday } from 'date-fns';\nimport { enAU } from 'date-fns/locale';\nimport { prettyPrintDate } from '../../common/utils';\nimport { IndicatorBuilder, AttributeHeader } from '.';\n\nenAU.weekStart = 1;\n\nexport const Edit = ({ card, setCard }) => {\n  const setDateTime = time => setCard({...card, time});\n\n  return card.time ? (\n    <div style={{marginTop: 10}}>\n      <InputLabel className=\"custom-label\">Date &amp; time</InputLabel>\n      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={enAU}>\n        <DateTimePicker\n          value={new Date(card.time)}\n          onChange={newDate => setDateTime(newDate.getTime())}\n          showTodayButton\n          format=\"MMMM do hh:mm aaa\" />\n      </MuiPickersUtilsProvider>\n      <Button color=\"primary\" variant=\"outlined\" style={{float:'right',marginTop:12}}\n        onClick={() => setDateTime(null)}>Reset date</Button>\n    </div>\n  ) : (\n    <AttributeHeader onClick={() => setDateTime(startOfToday())}>\n      Add date &amp; time\n    </AttributeHeader>\n  );\n};\n\nexport const Indicator = ({ card }) => {\n  if (card.time) {\n    return <IndicatorBuilder\n      icon={<AccessTimeIcon />}\n      label={prettyPrintDate(card.time)}\n      title={format(new Date(card.time), \"dd/MM/yyyy hh:mmaaa\")} />\n  } else return null;\n};\n","\n/**\n * Evidence Based Scheduling card attribute\n * See: https://www.joelonsoftware.com/2007/10/26/evidence-based-scheduling/\n */\n\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, TextField, FormControlLabel, Checkbox, InputLabel } from '@material-ui/core';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport HourglassFullIcon from '@material-ui/icons/HourglassFull';\nimport { globalSelectors as sel } from '../../store';\nimport { IndicatorBuilder, AttributeHeader } from '.';\n\nexport const Edit = ({ card, setCard }) => {\n  // edit a subset of the EBS fields\n  const setEBS = ebsFields => setCard({...card, ebs: {...card.ebs, ...ebsFields}});\n  const [estStr, setEstStr] = React.useState(card.ebs ? prettySeconds(card.ebs.estimate) : \"\");\n  const [elapStr, setElapStr] = React.useState(card.ebs ? prettySeconds(card.ebs.elapsed) : \"\");\n\n  // list of EBS objects for all cards\n  const historical = useSelector(s => Object.values(sel.boards(s).cards)\n    .filter(card => card.hasOwnProperty('ebs') && card.ebs !== null)\n    .filter(card => card.ebs.elapsed && card.ebs.estimate)\n    .map(card => card.ebs));\n\n  const setEBSEstimate = str => {\n    setEstStr(str);\n    const estimate = unprettySeconds(str);\n    if (typeof estimate === \"number\")\n      setEBS({estimate, computed: computeEstimate(estimate, historical)});\n  }\n  const setEBSElapsed = str => {\n    setElapStr(str);\n    const elapsed = unprettySeconds(str);\n    if (typeof elapsed === \"number\")\n      setEBS({elapsed});\n  }\n  const resetEBS = () => (setEstStr(\"\"), setElapStr(\"\"), setCard({...card, ebs: null}));\n\n  if (!card.ebs)\n    return (\n      <AttributeHeader onClick={() => setEBSEstimate('1h')}>\n        Add time estimate\n      </AttributeHeader>\n    );\n\n  // ebs :: { estimate :: seconds, computed :: seconds, elapsed :: seconds,\n  //   done :: boolean, exact :: boolean }\n  // estimate is user estimate, computed is a function of historical estimation accuracy\n  // and elapsed is current time spent on the task, and exact is whether the estimate is exact (eg duration)\n  // TODO: add timer feature or column powerup to automatically time\n\n  const getPrettyPredicted = () => prettySeconds(computeEstimate(unprettySeconds(estStr) || 0, historical));\n\n  // returns true iff the string is non-empty but in incorrect format (not HHhMMm like 1h30m)\n  const invalid = str => str !== \"\" && str !== null && unprettySeconds(str) === null;\n\n  return (\n    <div style={{marginTop: 10}}>\n      <InputLabel className=\"custom-label\">Time estimate</InputLabel>\n      <div style={{width: '30%',float:'left',marginRight:16}}>\n        <TextField label={`Estimate (predicted ${getPrettyPredicted()})`}\n          margin=\"dense\" fullWidth\n          value={estStr}\n          error={invalid(estStr)}\n          helperText={invalid(estStr) ? \"Example format: 1h30m\" : null}\n          onChange={e => setEBSEstimate(e.target.value)} />\n      </div>\n      <div style={{width: '30%',float:'left',marginRight:16}}>\n        <TextField label=\"Elapsed\"\n          margin=\"dense\" fullWidth\n          value={elapStr}\n          error={invalid(elapStr)}\n          helperText={invalid(elapStr) ? \"Example format: 1h30m\" : null}\n          onChange={e => setEBSElapsed(e.target.value)} />\n      </div>\n      <div style={{marginTop: 12, float:'left'}}>\n        <FormControlLabel label=\"Exact duration\" control={\n            <Checkbox color=\"primary\"\n              checked={Boolean(card.ebs.exact)} onChange={e => setEBS({ exact: e.target.checked })} />\n          }/>\n      </div>\n      <div style={{flexGrow:1}}></div>\n      <Button color=\"primary\" variant=\"outlined\" size='medium' style={{float:'right',marginTop:12}}\n        onClick={resetEBS}>Reset estimate</Button>\n    </div>\n  )\n};\n\n// historical :: List[{ estimate, computed, elapsed }]\nconst computeEstimate = (s, historical) => {\n  if (typeof s !== 'number') return s;\n\n  // Compute average ratio elapsed / estimated\n  let ratio = historical.reduce(\n    (acc, ebs) => acc + ebs.elapsed / ebs.estimate / historical.length\n    , 0);\n  // if few samples average with 1\n  if (!ratio) ratio = 1;\n  if (historical.length < 10) ratio = (ratio + 1) / 2;\n\n  // computes an estimate of the time given all of the cards' EBS values\n  const computed = s * ratio;\n\n  // round rough estimate to a reasonable level of precision\n  // nearest hr, 15min or 5min interval if that is the same level of precision as the input\n  const precisions = [3600, 60*15, 60*5];\n  for (let seconds of precisions) {\n    if (s % seconds === 0 && Math.abs(computed - s) > seconds / 2)\n      return seconds * Math.round(computed / seconds);\n  }\n  // otherwise nearest minute\n  return 60 * Math.round(computed / 60);\n};\n\n// Pretty print seconds in short form like 3600->1h, 6300->1h45m (no days or seconds)\nconst prettySeconds = s => {\n  if (typeof (s) === 'string') return s;\n  const hours = Math.floor(s / 3600);\n  const minutes = Math.floor((s % 3600) / 60);\n  if (hours === 0 && minutes === 0) return '0';\n  return (hours ? hours + 'h' : '') + (minutes ? minutes + 'm' : '');\n};\n\n// Inverse of prettySeconds; used so the input field can be edited in pretty form\nlet unprettySeconds = s => {\n  if (s === '0') return 0;\n\n  // this parses it to [x,'1h', '30m'] if possible, or [x,'1h',undefined] or [x,undefined,'30m']\n  // if only one is present, where x is irrelevant\n  let groups = (/^(\\d+h|\\d*\\.\\d+h)?(\\d+m|\\d*\\.\\d+m)?$/m).exec(s);\n\n  // check there are 3 matches where at least one of the latter two are defined\n  if (!groups || groups.length !== 3 || !groups.slice(1).filter(x=>x).length)\n    return null;\n  else groups = groups.slice(1);\n\n  const pf = k => parseFloat(k.substring(0, k.length-1)); // \"1.5h\" -> 1.5\n  return 3600*pf(groups[0] || '00') + 60*pf(groups[1] || '00');\n};\n\nexport const Indicator = ({ card }) => {\n  if (card.ebs) {\n    // display 'elapsed/computed' where the 'elapsed/' is only present if nonzero\n    // displays estimate instead of computed iff card.ebs.exact (checkbox ticked)\n    const label = (card.ebs.elapsed ? prettySeconds(card.ebs.elapsed) + '/' : \"\")\n      + prettySeconds(card.ebs.exact ? card.ebs.estimate : card.ebs.computed);\n    const elapsed = card.ebs.elapsed ? `Elapsed: ${prettySeconds(card.ebs.elapsed)}` : \"\";\n    const title = card.ebs.exact ?\n      `Duration: ${prettySeconds(card.ebs.estimate)}\\n${elapsed}` :\n      `Estimate: ${prettySeconds(card.ebs.estimate)}\\nComputed: ${prettySeconds(card.ebs.computed)}\\n${elapsed}`;\n    // const icon = card.ebs.done ? <HourglassEmptyIcon /> : <HourglassFullIcon />\n    const icon = <HourglassEmptyIcon />;\n    return <IndicatorBuilder label={label} title={title} icon={icon} />;\n  } else return null;\n};\n","\nimport * as React from 'react';\nimport { Chip, makeStyles, Button } from '@material-ui/core';\n\nimport * as Description from './description';\nimport * as DateTime from './datetime';\nimport * as EBS from './ebs';\nexport { Description, DateTime, EBS };\n\nconst useStyles = makeStyles({\n  label: { padding: 3 },\n  header: { marginBottom: 6, marginTop: 6 },\n});\n\nexport const IndicatorBuilder = ({ icon, label, title }) =>\n  <Chip size='small' icon={icon}\n    label={label}\n    title={title}\n    classes={label && label.length ? null : { label: useStyles().label }}\n    style={{ borderRadius: 3, background: 'white', marginRight: 2 }}\n    variant='outlined' />;\n\nexport const AttributeHeader = props =>\n  <div className={useStyles().header}>\n    <Button variant='outlined' color='primary' size='small' {...props} />\n  </div>;\n","\nimport * as React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n         TextField, InputLabel, Select, MenuItem,\n         ListSubheader } from '@material-ui/core';\nimport * as duck from '../ducks/kanban';\nimport { globalSelectors as sel, selectors } from '../store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Description, DateTime, EBS } from '../kanban/attributes';\nimport { ReloadProtect } from '../common/utils';\n\nexport const ConfirmDialog = ({ open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"] }) => {\n  return (\n    <Dialog open={open} onClose={() => respond(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {subtitle}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => respond(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => respond(true)} color=\"primary\" variant=\"contained\" autoFocus>\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const PromptDialog = ({\n  open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"],\n  label, inputType = \"text\", placeholder = \"\", buttons = null\n}) => {\n  const [value, setValue] = React.useState(placeholder);\n  const done = x => { respond(x); setValue(placeholder) };\n  return (\n    <Dialog open={open} onClose={() => done(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        {typeof subtitle === \"string\" && (\n          <DialogContentText>\n            {subtitle}\n          </DialogContentText>\n        )}\n        <TextField autoFocus margin=\"dense\" fullWidth\n          label={label} type={inputType} value={value} onChange={e => setValue(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        {buttons}\n        <Button onClick={() => done(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => done(value)} color=\"primary\" variant=\"contained\">\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const CardEditDialog = ({ respond, card }) => {\n  const dispatch = useDispatch();\n\n  const currentColID = useSelector(state => Object.values(sel.boards(state).columns)\n      .filter(col => col.items.indexOf(card.id) !== -1)[0].id);\n\n  const [colID, setColID] = React.useState(currentColID);\n  const [newCard, setCard] = React.useState(card);\n  const setContent = content => setCard({...newCard, content});\n\n  const columns = useSelector(selectors.boards.columns);\n  const tabs = useSelector(selectors.boards.tabs);\n  const getTabIdxByColID = colID => Object.values(tabs).map(tab => tab.columns.indexOf(colID) !== -1).indexOf(true);\n  const getColIdxByID = colID => Object.values(columns).map(col => col.id === colID).indexOf(true);\n\n  const done = () => (respond(), setContent(card.content));\n  // save and then delete so you can undo the delete without losing your unsaved draft of a card\n  const deleteCard = () => (dispatch(duck.editCard({ card: newCard, colID })), dispatch(duck.deleteCard(card.id)), done());\n  const editCard = () => (dispatch(duck.editCard({ card: newCard, colID })), done());\n\n  return (\n    <Dialog open onClose={() => done(null)} fullWidth maxWidth='md'\n      disableBackdropClick={JSON.stringify(newCard) !== JSON.stringify(card)}>\n      <ReloadProtect shouldProtect={JSON.stringify(newCard) !== JSON.stringify(card)} />\n      <DialogTitle>Edit card</DialogTitle>\n      <DialogContent>\n        <InputLabel id=\"kanban/card-column\" className=\"custom-label\">Column</InputLabel>\n        <Select labelId=\"kanban/card-column\" value={colID} onChange={e => setColID(e.target.value)}>\n          {Object.values(tabs).flatMap(tab => ([\n            // the subheader can be clicked so we add the following CSS hack (per mui#18200)\n            // .MuiListSubheader-root { pointer-events: none; }\n            <ListSubheader key={tab.id}>{tab.name}</ListSubheader>,\n            ...tab.columns.map(colID =>\n              <MenuItem value={colID} key={colID}>{columns[colID].name}</MenuItem>\n            )\n          ]))}\n        </Select>\n        <InputLabel id=\"kanban/card-title\" className=\"custom-label\">Title</InputLabel>\n        <TextField margin=\"dense\" autoFocus fullWidth\n          multiline rowsMax={3} value={newCard.content} onChange={e => setContent(e.target.value)} />\n        <Description.Edit card={newCard} setCard={setCard} />\n        <DateTime.Edit    card={newCard} setCard={setCard} />\n        <EBS.Edit         card={newCard} setCard={setCard} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={deleteCard}>Delete</Button>\n        <Button onClick={done} color=\"primary\">Cancel</Button>\n        <Button onClick={editCard} color=\"primary\" variant=\"contained\">OK</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const AboutDialog = ({ open, respond }) => {\n  return (\n    <Dialog open={open} onClose={respond} fullWidth>\n      <DialogTitle>About Mirror</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          A free and open source personal task management and note taking app.<br/>\n\n          Made by Oliver Balfour. &copy; 2020.<br/>\n\n          App icon is <a href=\"https://thenounproject.com/term/mirror/340140/\">Mirror</a>&nbsp;\n          by Lastspark from <a href=\"http://thenounproject.com/\">The Noun Project</a>.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={respond} color=\"primary\" variant=\"contained\" autoFocus>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","\n/**\n * MenuBar component\n *\n * <MenuBar active={0} setActive={...} />\n *  (active is index of current screen)\n *\n */\n\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Tabs, Tab } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport PopoverMenu from './popovermenu';\nimport { downloadData } from '../common/utils';\nimport { AboutDialog } from './dialogs';\n\nexport default ({ active, setActive }) => {\n  const [aboutOpen, setAboutOpen] = React.useState(false);\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" style={{ top: 'auto', bottom: 0 }}>\n        <Toolbar style={{ minHeight: 0 }}>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => console.log(\"open menu\")}>\n            <MenuIcon />\n          </IconButton>\n          <Tabs\n            value={active} onChange={(e, val) => setActive(val)}\n            TabIndicatorProps={{ style: { backgroundColor: 'white' } }}\n          >\n            <Tab label={<div><DeveloperBoardIcon style={{verticalAlign: 'middle'}} /> Board</div>}  />\n            <Tab label={<div><NotesIcon style={{verticalAlign: 'middle'}} /> Notes</div>}  />\n          </Tabs>\n          <div style={{ flexGrow: 1 }} />\n          <PopoverMenu map={{\n            \"Submit feedback\": () => window.open('mailto'+':oliver.'+'leo.balfour+mirrorsupport'+'@googlemail'+'.com', '_blank'),\n            \"About\": () => setAboutOpen(true),\n            \"Clear saved state\": () => window.prompt(\"Delete all saved state? Pressing undo will fix this. Type YES to confirm\", \"NO\") === \"YES\" && localStorage.clear(),\n            \"Import state\": () => { localStorage.kanban = window.prompt(\"Paste your exported state here. Press cancel (or the undo button after pressing OK) to revert. Refresh the page to confirm and reload state.\") },\n            \"Export state\": () => downloadData(localStorage.kanban, \"mirror-backup.json\", \"application/json\"),\n          }}>\n            <IconButton edge=\"end\" color=\"inherit\">\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n        </Toolbar>\n      </AppBar>\n      <AboutDialog open={aboutOpen} respond={() => setAboutOpen(false)} />\n    </React.Fragment>\n  );\n}\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport { ActionCreators } from 'redux-undo'\n\nexport default () => {\n  const dispatch = useDispatch();\n  return (\n    <React.Fragment>\n      <IconButton onClick={() => dispatch(ActionCreators.undo())}>\n        <UndoIcon />\n      </IconButton>\n      <IconButton onClick={() => dispatch(ActionCreators.redo())}>\n        <RedoIcon />\n      </IconButton>\n    </React.Fragment>\n  );\n};\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\n\nimport { IconButton } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport { PopoverMenu, ConfirmDialog, PromptDialog } from '../components';\n\n// header name, add button, chips for each addon (WIP limit, EBS time estimate, etc), menu button\nexport default ({ col, add, menu }) => {\n  const dispatch = useDispatch();\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => {\n    setConfirmOpen(false);\n    if (res) dispatch(duck.deleteColumn(col.id))\n  }\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = res => {\n    setPromptOpen(false);\n    if (typeof res === \"string\" && res.length)\n      dispatch(duck.renameColumn({ colID: col.id, name: res }));\n  }\n\n  const archiveAll = () => dispatch(duck.archiveCardsInColumn(col.id));\n\n  return (\n    <div>\n      <div className='columnHeaderContainer'>\n        <div className='columnHeaderText'>\n          {col.name}\n        </div>\n        <div>\n          {/*\n            // TODO: column powerup API with Chip indicators\n            <Chip size='small' label=\"0/6\" />\n            <Chip size='small' label=\"3h\" />\n          */}\n          <IconButton size='small' onClick={() => add()}>\n            <AddIcon />\n          </IconButton>\n          <PopoverMenu map={{\n            \"Archive all\": () => archiveAll(),\n            \"Rename\": () => setPromptOpen(true),\n            \"Delete\": () => setConfirmOpen(true),\n          }}>\n            <IconButton size='small'>\n              <MoreVertIcon />\n            </IconButton>\n          </PopoverMenu>\n        </div>\n      </div>\n      <hr className='columnHeaderRule' />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this column?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title={`Rename column \"${col.name}\"`} subtitle=\"Don't worry, this action can be undone.\"\n          label=\"Name\" placeholder={col.name} />\n      )}\n    </div>\n  );\n};\n","\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectors } from '../store';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Markdown } from '../components';\nimport { Description, DateTime, EBS } from './attributes';\n\nexport default React.memo(({ card, index, setEditingCard }) => {\n  const cards = useSelector(selectors.boards.cards);\n  if (!card) return null;\n  const { id, content } = card;\n\n  return (\n    <React.Fragment>\n      <Draggable draggableId={id} index={index}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={'card' + (snapshot.isDragging ? \" draggingCard\" : \"\")}\n            style={provided.draggableProps.style}\n            onClick={() => setEditingCard(id)}>\n            <Markdown source={content} cards={cards} />\n            <Description.Indicator card={card} />\n            <DateTime.Indicator    card={card} />\n            <EBS.Indicator         card={card} />\n          </div>\n        )}\n      </Draggable>\n    </React.Fragment>\n  );\n});\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\nimport { Button, IconButton, ButtonGroup, TextField } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { mergeRefs } from '../common/utils';\nimport ColumnHeader from './column-header';\nimport Card from './card';\n\nexport default React.memo(({ col, index, setEditingCard }) => {\n  const { id, items } = col;\n\n  const [editingNew, setEditingNew] = React.useState(false);\n  const [editingValue, setEditingValue] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const addCard = () => {\n    if (editingValue.length)\n      dispatch(duck.addCard({\n        content: editingValue,\n        colID: id\n      }));\n    setEditingValue(\"\");\n    setEditingNew(false);\n  };\n  const addButton = () => {\n    if (editingNew)\n      setEditingValue(\"\");\n    else\n      // scroll so that the add card section at the top is visible\n      scrollContainerRef.current.scrollTop = 0;\n    setEditingNew(!editingNew);\n  };\n  const scrollContainerRef = React.useRef(null);\n  const menuButton = () => {\n    console.log('pressed menu button');\n  };\n  const internals = (\n    <Droppable droppableId={id} className='card-droppable' type=\"card\" ignoreContainerClipping>\n      {(provided, snapshot) => (\n        <React.Fragment>\n          <div\n            className={'column-internals' + (snapshot.isDraggingOver ? ' dragging-over' : '')}\n            ref={mergeRefs(provided.innerRef, scrollContainerRef)}\n          >\n            {editingNew && (\n              <EditingCard value={editingValue} setValue={setEditingValue}\n                add={addCard} cancel={() => { setEditingValue(\"\"); setEditingNew(false) }} />\n            )}\n            {items.map((card, index) => card ? <Card card={card} index={index} key={card.id}\n              setEditingCard={setEditingCard} /> : null)}\n          </div>\n          {provided.placeholder}\n        </React.Fragment>\n      )}\n    </Droppable>\n  );\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided, snapshot) => (\n        <div ref={provided.innerRef}\n          {...provided.draggableProps}\n          className={\"columnContainer\" + (snapshot.isDragging ? \" draggingColumn\" : \"\")}\n          style={provided.draggableProps.style}>\n          <div className=\"column\">\n            <div {...provided.dragHandleProps}>\n              <ColumnHeader col={col} add={addButton} menu={menuButton} />\n            </div>\n            {internals}\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n});\n\nconst EditingCard = ({ value, setValue, add, cancel }) => {\n  React.useEffect(() => {\n    // Pressing ESC cancels editing a card\n    const cb = e => e.which === 27 && cancel();\n    document.addEventListener('keydown', cb);\n    return () => document.removeEventListener('keydown', cb);\n  });\n  return (\n    <div>\n      <TextField\n        label=\"New Card\"\n        multiline\n        autoFocus\n        rowsMax={6}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        variant=\"filled\"\n        style={{ width: \"100%\" }} />\n      <ButtonGroup variant=\"contained\" size='small' className='editingCardButtons'>\n        <Button style={{flexGrow: 1}} variant='contained' onClick={add}>\n          Done\n        </Button>\n        <Button onClick={cancel}><DeleteIcon style={{color: '#555'}} /></Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport const AddColumn = ({ add, hide }) => {\n  return (\n    <div className={'addColumnContainer' + (hide ? ' hidden' : '')}>\n      <div className='addColumn'>\n        <IconButton onClick={add}>\n          <AddIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\nimport { selectors } from '../store';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { PromptDialog, CardEditDialog } from '../components';\nimport { useHashLocation } from '../common/utils';\nimport Column, { AddColumn } from './column';\nimport './index.scss';\n\nexport default ({ tabInfo }) => {\n  const tab = tabInfo.index;\n  const tabObj = tabInfo.tab;\n  const dispatch = useDispatch();\n\n  const tabOrder = useSelector(selectors.boards.tabOrder);\n  const columns = useSelector(selectors.boards.getColumnsInTabs)[tabOrder[tab]];\n  const tabs = useSelector(selectors.boards.tabs);\n  const cards = useSelector(selectors.boards.cards);\n  const colIDs = tabs[tabOrder[tab]].columns;\n\n  // dispatch move card action\n  const onDragEnd = res => {\n    if (!res.destination) return;\n    if (res.type === \"card\") {\n      dispatch(duck.moveCard([\n        res.source.droppableId, res.destination.droppableId,\n        res.source.index, res.destination.index\n      ]));\n    } else if (res.type === \"column\") {\n      dispatch(duck.moveColumn([\n        res.source.index, res.destination.index, tab\n      ]));\n    }\n  };\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = name => {\n    setPromptOpen(false);\n    if (typeof name === \"string\" && name.length)\n      dispatch(duck.addColumn({ tabID: tabObj.id, name }));\n  }\n\n  const [loc, setLoc] = useHashLocation();\n  // editing card if URL is /board/CARD_ID/edit\n  const editingCard = loc.split(\"/\")[4] === \"edit\" ? loc.split(\"/\")[3] : null;\n\n  const cardsByTab = useSelector(selectors.boards.cardsByTab);\n  const tabIDfromCardID = id => Object.keys(cardsByTab).filter(tabID => cardsByTab[tabID].indexOf(id) !== -1);\n  const setEditingCard = id => id\n    ? setLoc(`/boards/${tabs[tabIDfromCardID(id)].name.toLowerCase()}/${id}/edit`)\n    : setLoc(`/boards/${loc.split(\"/\")[2]}`);\n\n  return (\n    <div className='boardview-root'>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"default\" className='column-droppable' direction=\"horizontal\" type=\"column\">\n          {(provided, snapshot) => (\n            <React.Fragment>\n              <div className='root' ref={provided.innerRef}>\n                {colIDs.map((colID, i) => <Column col={columns[i]} key={colID} index={i}\n                  setEditingCard={setEditingCard} />)}\n                <AddColumn add={() => setPromptOpen(true)} hide={snapshot.isDraggingOver || snapshot.draggingFromThisWith} />\n              </div>\n              {provided.placeholder}\n            </React.Fragment>\n          )}\n        </Droppable>\n      </DragDropContext>\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title=\"Add column\" label=\"Name\" />\n      )}\n      {editingCard && cards.hasOwnProperty(editingCard) && (\n        <CardEditDialog respond={() => setEditingCard(null)} card={cards[editingCard]} />\n      )}\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TabView, UndoRedo } from '../components';\nimport BoardView from './boardview';\nimport * as duck from '../ducks/kanban';\nimport { selectors } from '../store';\nimport { PopoverMenu, ConfirmDialog, PromptDialog } from '../components';\nimport { useHashLocation } from '../common/utils';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const [loc, setLoc] = useHashLocation();\n  // {id:{name, id, columns (ids)},...}\n  const tabs = useSelector(selectors.boards.tabs);\n  const tabOrder = useSelector(selectors.boards.tabOrder);\n  let currentTab = tabOrder.map(tabID => tabs[tabID].name.toLowerCase() === loc.split(\"/\")[2]).indexOf(true);\n  const setCurrentTab = num => setLoc(\"/boards/\"+tabs[tabOrder[num]].name.toLowerCase());\n  if (currentTab < 0) currentTab = 0;\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => setConfirmOpen(false) ||\n    res && (dispatch(duck.deleteTab(currentTab)), setCurrentTab(Math.max(0,currentTab-1)));\n\n  const [addPromptOpen, setAddPromptOpen] = React.useState(false);\n  const addPromptRespond = res => setAddPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.addTab(res));\n\n  const [renamePromptOpen, setRenamePromptOpen] = React.useState(false);\n  const renamePromptRespond = res => setRenamePromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.renameTab({ tabID: tabOrder[currentTab], name: res }));\n\n  return (\n    <React.Fragment>\n      <TabView\n        tabs={tabOrder.map(tabID => tabs[tabID].name)}\n        render={i => <BoardView tabInfo={{ tab: tabs[tabOrder[i]], index: i }} />}\n        addTab={() => setAddPromptOpen(true)}\n        renameTab={() => setRenamePromptOpen(true)}\n        deleteTab={() => Object.values(tabs).length > 1 ? setConfirmOpen(true) : alert(\"Cannot delete only tab\")}\n        moveTab={data => dispatch(duck.moveTab(data))}\n        children={<UndoRedo />}\n        index={currentTab} setIndex={setCurrentTab}\n      />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this tab?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {addPromptOpen && (\n        <PromptDialog open respond={addPromptRespond} title=\"Add tab\" label=\"Name\" />\n      )}\n      {renamePromptOpen && (\n        <PromptDialog open respond={renamePromptRespond}\n          title={`Rename tab ${tabs[tabOrder[currentTab]].name}`} label=\"Name\" />\n      )}\n    </React.Fragment>\n  );\n}\n","\nimport * as React from 'react';\nimport { useHashLocation, generateID, ReloadProtect } from '../common/utils';\nimport { selectors } from '../store';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Markdown, AutocompleteEditor } from '../components';\nimport {\n  TextField, Button, ButtonGroup,\n  // Drawer, List, Divider, ListItem, ListItemText\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport SearchIcon from '@material-ui/icons/Search';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport * as duck from '../ducks/kanban.js';\nimport './index.scss';\n\nexport default () => {\n  const [loc, setLoc, setLocNoHist] = useHashLocation();\n  const dispatch = useDispatch();\n  const cards = useSelector(selectors.boards.cards);\n  const starred = useSelector(selectors.boards.starredZettels);\n\n  const currentCardID = loc.split('/')[2] || 'main'; //#/notes/ID\n  // const setCurrentCardID = id => setLoc(`/notes/${id}`);\n\n  const card = cards[currentCardID];\n  const [newCard, setNewCard] = React.useState({ ...card }); // assuming no deep nesting\n  const setCard = part => setNewCard({ ...newCard, ...part });\n\n  if (typeof card !== 'object') return null;\n\n  const editing = loc.split('/')[3] === 'edit'; //#/notes/ID/edit\n  const setEditing = yes => yes\n    ? setLocNoHist(`/notes/${currentCardID}/edit`)\n    : setLocNoHist(`/notes/${currentCardID}`);\n  const cancelEditing = () => {\n    setEditing(false);\n    setNewCard({...card});\n  }\n\n  const deleteZettel = () => {\n    dispatch(duck.deleteCard(currentCardID));\n    setLocNoHist('/notes/main');\n  }\n  const saveZettel = zettel => {\n    dispatch(duck.editZettel({ zettel }));\n    setEditing(false);\n  }\n  const starZettel = () =>\n    dispatch(duck.toggleZettelStarred(currentCardID));\n\n  // update editing field on card change\n  if (card.id !== newCard.id) {\n    // We want to save the card if the 'Add note' button was pressed\n    // The only time a card is not saved is if you press cancel or delete\n    dispatch(duck.editZettel({ zettel: newCard }));\n    setNewCard({ ...card });\n  };\n\n  const addZettel = id => {\n    // create a new card and navigate to editing it\n    dispatch(duck.addZettel({ zettel: { content: 'New note', description: '...', id } }));\n    setLoc(`/notes/${id}/edit`);\n  };\n\n  const addNewNote = id => {\n    dispatch(duck.editZettel({ zettel: newCard }));\n    addZettel(id);\n  }\n\n  return (\n    // TODO: drawer\n    // Responsive: https://material-ui.com/components/drawers/#responsive-drawer\n    // Search bar: https://material-ui.com/components/text-fields/#icons\n    //   or https://material-ui.com/components/app-bar/#app-bar-with-a-primary-search-field\n    // Starred cards\n    // All notes button (navigate to #/notes/all and show a list of notes without contents)\n    <React.Fragment>\n      <ReloadProtect shouldProtect={JSON.stringify(newCard) !== JSON.stringify(card)} />\n      <div className='zettelContainer'>\n        {/*<Drawer\n          className='zettelDrawer'\n          variant=\"permanent\"\n          classes={{\n            paper: 'zettelDrawerPaper',\n          }}\n        >\n          <div className='zettelDrawerContainer'>\n            <List>\n              {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n            <Divider />\n            <List>\n              {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n          </div>\n        </Drawer>*/}\n        {editing && (\n          <div className='zettel'>\n            <TextField margin=\"dense\" autoFocus fullWidth\n              multiline rowsMax={3} value={newCard.content || ''} onChange={e => setCard({ content: e.target.value })} />\n            <AutocompleteEditor value={newCard.description || ''} setValue={description => setCard({ description })}\n              addNote={addNewNote} />\n            <div className='zettelEditingButtons'>\n              <Button onClick={cancelEditing} color=\"primary\">Cancel</Button>\n              <Button onClick={() => saveZettel(newCard)} color=\"primary\" variant=\"contained\">Save</Button>\n            </div>\n          </div>\n        )}\n        <div className={'zettel' + (editing ? ' notes-editing' : '')}>\n          <div className='zettelTitle'>\n            {(editing ? newCard.content : card.content) || ''}\n          </div>\n          <Markdown source={(editing ? newCard.description : card.description) || ''} cards={cards} />\n        </div>\n      </div>\n      <div className='zettelButtons' id='zettel-buttons-container'>\n        <ButtonGroup variant='contained' color='primary'>\n          {!editing && (\n            <Button onClick={() => setEditing(true)} title=\"Edit note\">\n              <EditIcon />\n            </Button>\n          )}\n          {card.id !== 'main' && (\n            <Button onClick={deleteZettel} title=\"Delete note\">\n              <DeleteIcon />\n            </Button>\n          )}\n          {!editing && (\n            <Button onClick={() => addZettel(generateID())} title=\"Add note\">\n              <AddIcon />\n            </Button>\n          )}\n          <Button onClick={() => alert('TODO')} title=\"Search notes\">\n            <SearchIcon />\n          </Button>\n          {starred.indexOf(card.id) === -1 ? (\n            <Button onClick={starZettel} title=\"Star this note\">\n              <StarBorderIcon />\n            </Button>\n          ) : (\n            <Button onClick={starZettel} title=\"Unstar this note\">\n              <StarIcon />\n            </Button>\n          )}\n        </ButtonGroup>\n      </div>\n    </React.Fragment>\n  );\n};\n","\n/**\n * app.js\n * Main JSX source file for the app\n * Details like screen size and renderer are abstracted away by index.[platform].js\n * and ../index.js\n */\n\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { useHashLocation } from './common/utils';\n// import { createMuiTheme, ThemeProvider } from '@material-ui/core';\n\nimport { Button, MenuBar } from './components';\nimport Kanban from './kanban';\nimport Zettelkasten from './zettelkasten';\nimport store, { globalSelectors as sel } from './store';\n\nconst screenNames = [\"/boards\", \"/notes\"];\nconst getScreen = loc => {\n  const name = \"/\" + loc.split(\"/\")[1]; // strip to / or /boards, etc\n  return Math.max(screenNames.indexOf(name), 0);\n};\nconst getScreenName = n => {\n  if (n === 0) {\n    // boards get special treatment of /boards/FIRST_TAB\n    const state = sel.boards(store.getState());\n    return \"/boards/\" + state.tabs[state.tabOrder[0]].name.toLowerCase();;\n  } else return screenNames[n];\n}\n\n// const theme = createMuiTheme({\n//   palette: {\n//     // primary: { main: '#1976d2', dark: '#1466b8' },\n//   },\n// });\n\nexport default () => {\n  const [loc, setLoc] = useHashLocation();\n  const active = getScreen(loc);\n  const setActive = n => setLoc(getScreenName(n));\n  const style = { height: \"calc(100% - 48px)\" };\n\n  return (\n    <Provider store={store}>\n      {/*<ThemeProvider theme={theme}>*/}\n        <div style={{ top: 0, left: 0, height: \"100%\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n\n          <div style={style}>\n            { active === 0 && (\n              <Kanban />\n            )}\n            { active === 1 && (\n              <Zettelkasten />\n            )}\n          </div>\n\n          <MenuBar active={active} setActive={setActive} />\n\n        </div>\n      {/*</ThemeProvider>*/}\n    </Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Application from './app.js';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <Application/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}