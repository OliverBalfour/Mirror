{"version":3,"sources":["src/favicon.ico","web-build/register-service-worker.js","src/components/tabview.js","src/components/button.js","src/components/popovermenu.js","src/components/menubar.js","src/components/undoredo.js","src/common/utils.js","src/ducks/kanban.js","src/components/dialogs.js","src/kanban/boardview.js","src/kanban/index.js","src/store.js","src/app.js","src/index.web.js","index.js"],"names":["module","exports","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","TabPanel","show","children","hidden","style","height","tabs","render","React","value","setValue","flex","AppBar","position","backgroundColor","zIndex","Tabs","onChange","event","newValue","indicatorColor","textColor","map","tab","Tab","label","key","View","flexGrow","i","makeStyles","theme","button","anchorEl","setAnchorEl","handleClose","keepMounted","open","Boolean","onClose","Object","entries","name","func","MenuItem","onClick","e","currentTarget","active","setActive","Fragment","color","top","bottom","Toolbar","minHeight","IconButton","edge","log","val","TabIndicatorProps","verticalAlign","localStorage","clear","dispatch","useDispatch","ActionCreators","undo","redo","generateID","Math","random","toString","substring","dummyState","initial","id","colnums","colnames","numcards","reduce","a","b","cards","sampleCards","push","content","floor","length","columns","cnt","items","slice","card","dummyCols","colIDs","col","transferCard","createAction","reorderCard","addCard","editCardContent","editCard","deleteCard","addColumn","deleteColumn","renameColumn","_getCardByID","state","filter","indexFromID","list","item","indexOf","deleteByID","splice","deleteInList","elem","index","initialState","hasOwnProperty","JSON","parse","getItem","loadState","reducer","createReducer","s","srcColIdx","payload","srcColID","dstColIdx","dstColID","srcCol","dstCol","srcIndex","removed","dstIndex","colIdx","colID","newitems","cardID","unshift","forEach","tabID","undoable","ConfirmDialog","respond","title","subtitle","labels","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","variant","autoFocus","PromptDialog","inputType","placeholder","buttons","done","x","TextField","margin","fullWidth","type","target","CardEditDialog","setContent","currentColID","useSelector","boards","present","setColID","labelIDs","InputLabel","Select","labelId","duck","useStyles","root","display","flexDirection","flexWrap","padding","flexShrink","column","background","paddingBottom","width","border","borderRadius","transition","maxHeight","overflow","draggingOverColumn","columnHeaderContainer","justifyContent","columnHeaderText","paddingLeft","fontSize","columnHeaderRule","cardWidth","marginLeft","userSelect","boxShadow","draggingCard","opacity","tabInfo","tabObj","styles","_getColByID","promptOpen","setPromptOpen","overflowX","onDragEnd","res","destination","source","droppableId","className","add","Column","editingNew","setEditingNew","editingValue","setEditingValue","addButton","menuButton","provided","snapshot","ref","innerRef","classNames","isDraggingOver","menu","overflowY","cancel","EditingCard","multiline","rowsMax","ButtonGroup","size","marginBottom","ColumnHeader","confirmOpen","setConfirmOpen","Chip","Card","draggableId","draggableProps","dragHandleProps","isDragging","split","AddColumn","alignItems","combineReducers","store","configureStore","document","ctrlKey","which","UndoActionCreators","shiftKey","localStorageSubscriber","serialised","stringify","setItem","saveState","getState","subscribe","useState","Platform","OS","left","body","registerRootComponent","props","url","fav"],"mappings":"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","file":"static/js/app.a1ca69ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.2af00a60.ico\";","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/Mirror/expo-service-worker.js', { scope: '/Mirror/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","\n/**\n * TabView component\n *\n * <TabView\n *   tabs={[\"one\", \"two\", \"three\"]}\n *   render={i => (<SomeComponent index={i} />)}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { AppBar, Tabs, Tab, Typography, Box } from '@material-ui/core';\n\nconst TabPanel = ({ show, children }) => (\n  <div hidden={!show} style={{ height: 'calc(100% - 48px)' }}>\n    {show && children}\n  </div>\n);\n\nexport default ({ tabs, render, children }) => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => setValue(newValue);\n\n  return (\n    <div style={{ flex: 1 }}>\n      <AppBar position=\"static\" style={{\n          backgroundColor: \"white\",\n          zIndex: 2, position: 'relative'\n        }}>\n        <Tabs value={value} onChange={handleChange}\n          indicatorColor=\"primary\" textColor=\"primary\">\n          {tabs.map(tab => (\n            <Tab label={tab} key={tab} />\n          ))}\n          <View style={{flexGrow: 1}}></View>\n          {children}\n        </Tabs>\n      </AppBar>\n      {tabs.map((tab, i) => (\n        <TabPanel show={value === i} key={tab}>\n          {value === i && render(i)}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({ button: {} }));\n\nexport default props => (\n  <Button className={useStyles().button} variant=\"contained\" color=\"primary\" {...props} />\n);\n","\n// Popover menu (web)\nimport * as React from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\n\n\nexport default ({ map, children }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => setAnchorEl(null);\n\n  return (\n    <React.Fragment>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}>\n        {Object.entries(map).map(([name, func]) => (\n          <MenuItem key={name}\n            onClick={() => { handleClose(); func() }}>\n            {name}\n          </MenuItem>\n        ))}\n      </Menu>\n      {React.cloneElement(children, {\n        onClick: e => setAnchorEl(e.currentTarget)\n      })}\n    </React.Fragment>\n  );\n}\n","\n/**\n * MenuBar component\n *\n * <MenuBar active={0} setActive={...} />\n *  (active is index of current screen)\n *\n */\n\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Tabs, Tab } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport PopoverMenu from './popovermenu';\n\nexport default ({ active, setActive }) => {\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" style={{ top: 'auto', bottom: 0 }}>\n        <Toolbar style={{ minHeight: 0 }}>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => console.log(\"open menu\")}>\n            <MenuIcon />\n          </IconButton>\n          <Tabs\n            value={active} onChange={(e, val) => setActive(val)}\n            TabIndicatorProps={{ style: { backgroundColor: 'white' } }}\n          >\n            <Tab label={<div><DeveloperBoardIcon style={{verticalAlign: 'middle'}} /> Board</div>}  />\n            <Tab label={<div><NotesIcon style={{verticalAlign: 'middle'}} /> Notes</div>}  />\n          </Tabs>\n          <div style={{ flexGrow: 1 }} />\n          <PopoverMenu map={{\n            \"Clear saved state\": () => localStorage.clear(), // need lambda because of binding\n          }}>\n            <IconButton edge=\"end\" color=\"inherit\">\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport { ActionCreators } from 'redux-undo'\n\nexport default () => {\n  const dispatch = useDispatch();\n  return (\n    <React.Fragment>\n      <IconButton onClick={() => dispatch(ActionCreators.undo())}>\n        <UndoIcon />\n      </IconButton>\n      <IconButton onClick={() => dispatch(ActionCreators.redo())}>\n        <RedoIcon />\n      </IconButton>\n    </React.Fragment>\n  );\n};\n","\nexport const generateID = () => Math.random().toString().substring(2);\n\n// generate { cards, columns } where each column has colnum[i] cards\n// both of these are objects where the keys are unique IDs\n// cards are { id, content } structs\n// todo: make them arrays containing their IDs and write selectors instead\n// columns are { id, items: [ id ] } structs\n// Example: {\n//   cards: [{ id: \"a\", content: \"Item 1\" }],\n//   columns: [{ id: \"b\", items: [\"a\"] }],\n//   tabs: [{ name: \"Main\", columns: [\"b\"] }]\n// }\nexport const dummyCols = (colnums, colnames) => {\n  let numcards = colnums.reduce((a, b) => a + b, 0);\n  let cards = [];\n  let sampleCards = [\n    \"Wash the dishes\",\n    \"Make cool app\",\n    \"Run out of ideas for sample tasks for the app you're making\",\n    \"Cook pizza for dinner\",\n    \"Finish your chemistry homework\",\n    \"Write a tutorial explaining how monads are isomorphic to burritos in the category of food\",\n    \"Forget to wrap a line at 300 characters\",\n    \"Learn Common Lisp\",\n    \"Do normal human things\",\n    \"Prove P=NP for N=1\",\n    \"Eat some chocolate\",\n    \"Stop eating so much chocolate\",\n    \"Write witty comment\",\n    \"🙂\"];\n  for (let i = 0; i < numcards; i++) {\n    let id = (i+1).toString() + \"-\" + generateID();\n    cards.push({ id, content: sampleCards[Math.floor(Math.random()*sampleCards.length)] });\n  }\n  let columns = [];\n  for (let i = 0, cnt = 0; i < colnums.length; i++) {\n    let items = cards.slice(cnt, cnt + colnums[i]).map(card => card.id);\n    let id = (i + 1).toString() + \"-\" + generateID();\n    columns.push({ id, items, name: colnames[i] });\n    cnt += colnums[i];\n  }\n  return { cards, columns };\n};\n\n// generate initial dummy state\nexport const dummyState = () => {\n  let initial = {\n    tabs: [{ name: \"Main\", id: generateID() }, { name: \"Secondary\", id: generateID() }],\n    ...dummyCols([9,2,6,5,4], [\"To Do\",\"Doing\",\"Done\",\"Misc 1\",\"Misc 2\"])\n  };\n  const colIDs = initial.columns.map(col => col.id);\n  initial.tabs[0].columns = [colIDs[0], colIDs[1], colIDs[2]];\n  initial.tabs[1].columns = [colIDs[3], colIDs[4]];\n  return initial;\n}\n\n// load persisted state\nexport const loadState = () => {\n  try {\n    // web\n    if (localStorage.hasOwnProperty(\"kanban\"))\n      return JSON.parse(localStorage.getItem(\"kanban\"));\n    else\n      return dummyState();\n  } catch (e) {\n    // native\n    return dummyState();\n  }\n}\n\nexport const saveState = state => {\n  try {\n    if (localStorage) {\n      const serialised = JSON.stringify(state);\n      localStorage.setItem(\"kanban\", serialised);\n    }\n  } catch (e) {}\n}\n","\n/**\n * Kanban boards core Redux logic\n *\n * State is normalised as { tabs, columns, cards }\n *  where each tab has several columns which contain cards\n *  each has a unique ID as a key in the respective object\n */\n\nimport { createReducer, createAction, createSelector } from '@reduxjs/toolkit';\nimport undoable from 'redux-undo';\nimport { loadState, generateID } from '../common/utils';\n\n// Action creators\n\nexport const transferCard = createAction('kanban/TRANSFER_CARD');\nexport const reorderCard = createAction('kanban/REORDER_CARD');\nexport const addCard = createAction('kanban/ADD_CARD'); // takes { content, colID }\nexport const editCardContent = createAction('kanban/EDIT_CARD_CONTENT');//takes {content, cardID}\nexport const editCard = createAction('kanban/EDIT_CARD'); // takes a card object; allows editing all of a card's params\nexport const deleteCard = createAction('kanban/DELETE_CARD');//takes cardID\n\nexport const moveCard = (srcColID, dstColID, srcIndex, dstIndex) =>\n  srcColID === dstColID\n    ? reorderCard({ colID: srcColID, srcIndex, dstIndex })\n    : transferCard({ srcColID, dstColID, srcIndex, dstIndex });\n\nexport const addColumn = createAction('kanban/ADD_COLUMN'); // takes { name, tabID }\nexport const deleteColumn = createAction('kanban/DELETE_COLUMN'); // takes string column ID\nexport const renameColumn = createAction('kanban/RENAME_COLUMN'); // takes { colID, name }\n\n// Selectors\n\nconst _getColByID = state => id => state.columns.filter(col => col.id === id)[0];\nconst _getCardByID = state => id => state.cards.filter(card => card.id === id)[0];\n\nconst indexFromID = (list, id) => list.map(item => item.id === id).indexOf(true);\nconst deleteByID = list => id => list.splice(indexFromID(list, id), 1);\nconst deleteInList = (list, elem) => {\n  let index = list.indexOf(elem);\n  if (index !== -1) list.splice(index, 1); // undesired behaviour when splicing at (-1, 1)\n};\n\n// higher order function which creates a selector for a specific tab\n// it un-normalises the state for that tab, returning:\n// return :: List[column], column :: { id, items: List[card] }, card :: { id, content }\nexport const getColumnsInTab = tab => state =>\n  state.tabs[tab].columns.map(_getColByID(state))\n    .map(col => ({\n      ...col, items: col.items.map(_getCardByID(state))\n    }));\n\n// Reducers\n\nconst initialState = loadState();\n\nconst reducer = createReducer(initialState, {\n  [transferCard]: (s, a) => {\n    const srcColIdx = indexFromID(s.columns, a.payload.srcColID);\n    const dstColIdx = indexFromID(s.columns, a.payload.dstColID);\n\n    let srcCol = s.columns[srcColIdx].items;\n    let dstCol = s.columns[dstColIdx].items;\n    const [removed] = srcCol.splice(a.payload.srcIndex, 1);\n    dstCol.splice(a.payload.dstIndex, 0, removed);\n  },\n  [reorderCard]: (s, a) => {\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    let newitems = s.columns[colIdx].items;\n    const [removed] = newitems.splice(a.payload.srcIndex, 1);\n    newitems.splice(a.payload.dstIndex, 0, removed);\n    s.columns[colIdx].items = newitems;\n  },\n  [addCard]: (s, a) => {\n    const { content, colID } = a.payload;\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    const cardID = generateID();\n    s.cards.push({ id: cardID, content });   // add to cards list\n    s.columns[colIdx].items.unshift(cardID); // add to top of column\n  },\n  [deleteColumn]: (s, a) => {\n    const colIdx = indexFromID(s.columns, a.payload);\n    s.columns[colIdx].items.forEach(deleteByID(s.cards));\n    s.tabs.forEach(tab => deleteInList(tab.columns, a.payload));\n    deleteByID(s.columns)(a.payload);\n  },\n  [renameColumn]: (s, a) => {\n    s.columns[indexFromID(s.columns, a.payload.colID)].name = a.payload.name;\n  },\n  [editCardContent]: (s, a) => {\n    s.cards[indexFromID(s.cards, a.payload.cardID)].content = a.payload.content;\n  },\n  [deleteCard]: (s, a) => {\n    const cardIdx = indexFromID(s.cards, a.payload);\n    s.columns.forEach(col => deleteInList(col.items, a.payload));\n    deleteByID(s.cards)(a.payload);\n  },\n  [addColumn]: (s, a) => {\n    const id = generateID();\n    s.columns.push({ id, items: [], name: a.payload.name });\n    s.tabs[indexFromID(s.tabs, a.payload.tabID)].columns.push(id);\n  },\n  [editCard]: (s, a) => {\n    s.cards[indexFromID(s.cards, a.payload.card.id)] = a.payload.card;\n    s.columns.forEach(col => deleteInList(col.items, a.payload.card.id));\n    s.columns[indexFromID(s.columns, a.payload.colID)].items.unshift(a.payload.card.id);\n  },\n});\n\nexport default undoable(reducer);\n","\nimport * as React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n         TextField, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport * as duck from '../ducks/kanban';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { generateID } from '../common/utils';\n\n// TODO: can we have a promise API for generating dialogs on the fly and getting their results?\n// This method means the user has to manage 'open' state\nexport const ConfirmDialog = ({ open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"] }) => {\n  return (\n    <Dialog open={open} onClose={() => respond(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {subtitle}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => respond(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => respond(true)} color=\"primary\" variant=\"contained\" autoFocus>\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const PromptDialog = ({\n  open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"],\n  label, inputType = \"text\", placeholder = \"\", buttons = null\n}) => {\n  const [value, setValue] = React.useState(placeholder);\n  const done = x => { respond(x); setValue(placeholder) };\n  return (\n    <Dialog open={open} onClose={() => done(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        {typeof subtitle === \"string\" && (\n          <DialogContentText>\n            {subtitle}\n          </DialogContentText>\n        )}\n        <TextField autoFocus margin=\"dense\" fullWidth\n          label={label} type={inputType} value={value} onChange={e => setValue(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        {buttons}\n        <Button onClick={() => done(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => done(value)} color=\"primary\" variant=\"contained\">\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const CardEditDialog = ({ respond, card }) => {\n  const dispatch = useDispatch();\n\n  const [content, setContent] = React.useState(card.content);\n\n  const currentColID = useSelector(state =>\n    state.boards.present.columns\n      .filter(col => col.items.indexOf(card.id) !== -1)[0].id);\n  const [colID, setColID] = React.useState(currentColID);\n\n  //TODO: extract global boards selector so we can change state.boards.present to anything\n  // else we need as new requirements arise without causing serious problems\n  const columns = useSelector(state => state.boards.present.columns);\n\n  const done = () => (respond(), setContent(card.content));\n  const deleteCard = () => (dispatch(duck.deleteCard(card.id)), done());\n  const editCard = () => (dispatch(duck.editCard({card:{...card, content}, colID})), done());\n\n  const labelIDs = [generateID()];\n  return (\n    <Dialog open onClose={() => done(null)}>\n      <DialogTitle>Edit card</DialogTitle>\n      <DialogContent>\n        <InputLabel id={labelIDs[0]}>Column</InputLabel>\n        <Select labelId={labelIDs[0]} value={colID} onChange={e => setColID(e.target.value)}>\n          {columns.map(col => (\n            <MenuItem value={col.id} key={col.id}>{col.name}</MenuItem>\n          ))}\n        </Select>\n\n        <TextField autoFocus margin=\"dense\" fullWidth\n          label=\"Title\" type=\"text\" value={content} onChange={e => setContent(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={deleteCard}>Delete</Button>\n        <Button onClick={done} color=\"primary\">Cancel</Button>\n        <Button onClick={editCard} color=\"primary\" variant=\"contained\">OK</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","\n/**\n * BoardView component\n *\n * <BoardView\n *   tab={tabIndex}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\nimport { View, Text } from 'react-native';\nimport { makeStyles, Button, IconButton, ButtonGroup, TextField, Chip } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport classNames from 'classnames';\nimport { PopoverMenu, ConfirmDialog, PromptDialog, CardEditDialog } from '../components';\n\nconst grid = 8;\nconst cardWidth = 300;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    padding: grid,\n    \"& *\": {flexShrink: 0}\n  },\n  column: {\n    background: '#DFEEEE',\n    padding: grid,\n    paddingBottom: 24,\n    width: cardWidth,\n    border: '1px solid #CCDCDC',\n    borderRadius: 5,\n    margin: grid,\n    transition: \"border 0.2s\",\n\n    // TODO: install react-custom-scrollbars and use this instead with autohide\n    // there is a bug where moving cards to the tallest column leads to a scrollbar flashing up\n    // and we don't want the scrollbar to take up horizontal space and force the cards to reflow\n\n    maxHeight: 'calc(100vh - 160px)',\n    overflow: 'hidden'\n  },\n  draggingOverColumn: {\n    // background: '#DAEBEB',\n    border: '1px solid #BBCBCB'\n  },\n  columnHeaderContainer: {\n    padding: \"8 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  columnHeaderText: {\n    paddingLeft: 8,\n    paddingBottom: 0,\n    fontSize: '1.4em'\n  },\n  columnHeaderRule: {\n    overflow: \"hidden\",\n    border: \"none\",\n    color: \"#CCDCDC\",\n    backgroundColor: \"#CCDCDC\",\n    height: \"1px\",\n    width: cardWidth + grid * 2 + 1, //+1 is border\n    marginLeft: -(grid+1)\n  },\n  card: {\n    userSelect: 'none',\n    padding: \"10px 13px\",\n    margin: `0 0 ${grid}px 0`,\n    background: 'white',\n    borderRadius: 5,\n    transition: \"opacity 0.3s\",\n    overflow: 'hidden',\n    \"&:hover, &:focus\": {\n      boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n    },\n    \"&>p\": {\n      margin: 0\n    }\n  },\n  draggingCard: {\n    opacity: 0.7,\n    boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n  }\n}));\n\nexport default ({ tabInfo }) => {\n  const tab = tabInfo.index;\n  const tabObj = tabInfo.tab;\n  const dispatch = useDispatch();\n  const styles = useStyles();\n\n  // TODO: is there a way to memoise these higher order selectors?\n  // TODO: how do we deal with .boards namespace being only needed part of the time\n  const columns = useSelector(state => duck.getColumnsInTab(tab)(state.boards.present));\n\n  // dispatch move card action\n  const onDragEnd = res => res.destination ? dispatch(duck.moveCard(\n    res.source.droppableId, res.destination.droppableId,\n    res.source.index, res.destination.index\n  )) : null;\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = name => setPromptOpen(false) ||\n    typeof name === \"string\" && name.length &&\n      dispatch(duck.addColumn({ tabID: tabObj.id, name }));\n\n  return (\n    <View style={{ width: '100vw', overflowX: 'auto', height: '100%' }}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div className={styles.root}>\n          {columns.map(col => <Column col={col} styles={styles} key={col.id} />)}\n          <AddColumn styles={styles} add={() => setPromptOpen(true)} />\n        </div>\n      </DragDropContext>\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title=\"Add column\" label=\"Name\" />\n      )}\n    </View>\n  );\n}\n\nconst Column = ({ styles, col }) => {\n  const { id, items, name } = col;\n\n  const [editingNew, setEditingNew] = React.useState(false);\n  const [editingValue, setEditingValue] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const addCard = () => {\n    if (editingValue.length)\n      dispatch(duck.addCard({\n        content: editingValue,\n        colID: id\n      }));\n    setEditingValue(\"\");\n    setEditingNew(false);\n  };\n  const addButton = () => {\n    if (editingNew)\n      setEditingValue(\"\");\n    setEditingNew(!editingNew);\n  };\n  const menuButton = () => {\n    console.log('pressed menu button');\n  };\n\n  return (\n    <Droppable droppableId={id} style={{ flexGrow: 1 }}>\n      {(provided, snapshot) => (\n        <div ref={provided.innerRef}\n          className={classNames(\n            styles.column,\n            {[styles.draggingOverColumn]: snapshot.isDraggingOver }\n          )}>\n          <ColumnHeader styles={styles} col={col} add={addButton} menu={menuButton} />\n          <div style={{ width: cardWidth, overflowY: 'auto', overflowX: 'hidden', height: \"100%\" }}>\n            {editingNew && (\n              <EditingCard value={editingValue} setValue={setEditingValue}\n                add={addCard} cancel={() => { setEditingValue(\"\"); setEditingNew(false) }} />\n            )}\n            <div style={{ width: cardWidth }}> {/* could -20 to avoid clipping cards */}\n              {items.map((card, index) => <Card card={card} styles={styles} index={index} key={card.id} />)}\n            </div>\n          </div>\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  );\n}\n\nconst EditingCard = ({ value, setValue, add, cancel }) => {\n  return (\n    <div>\n      <TextField\n        label=\"New Card\"\n        multiline\n        rowsMax={6}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        variant=\"filled\"\n        style={{ width: \"100%\" }} />\n      <ButtonGroup variant=\"contained\" size='small'\n        style={{marginBottom: 8, boxShadow: \"0px 4px 2px -2px rgba(0,0,0,0.15)\", width: \"100%\"}}>\n        <Button style={{flexGrow: 1}} variant='contained' onClick={add}>\n          Done\n        </Button>\n        <Button onClick={cancel}><DeleteIcon style={{color: '#555'}} /></Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\n// header name, add button, chips for each addon (WIP limit, EBS time estimate, etc), menu button\nconst ColumnHeader = ({ styles, col, add, menu }) => {\n  const dispatch = useDispatch();\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => setConfirmOpen(false) ||\n    res === true && dispatch(duck.deleteColumn(col.id));\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = res => setPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.renameColumn({ colID: col.id, name: res }));\n\n  return (\n    <div>\n      <div className={styles.columnHeaderContainer}>\n        <div className={styles.columnHeaderText}>\n          {col.name}\n        </div>\n        <div>\n          <Chip size='small' label=\"0/6\" />\n          <Chip size='small' label=\"3h\" />\n          <IconButton size='small' onClick={() => add()}>\n            <AddIcon />\n          </IconButton>\n          <PopoverMenu map={{\n            \"Rename\": () => setPromptOpen(true),\n            \"Delete\": () => setConfirmOpen(true),\n          }}>\n            <IconButton size='small'>\n              <MoreVertIcon />\n            </IconButton>\n          </PopoverMenu>\n        </div>\n      </div>\n      <hr className={styles.columnHeaderRule} />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this column?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title={`Rename column \"${col.name}\"`} subtitle=\"Don't worry, this action can be undone.\"\n          label=\"Name\" placeholder={col.name} />\n      )}\n    </div>\n  );\n};\n\nconst Card = ({ card, styles, index }) => {\n  const { id, content } = card;\n  const dispatch = useDispatch();\n  const [promptOpen, setPromptOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Draggable draggableId={id} index={index}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={classNames(styles.card, { [styles.draggingCard]: snapshot.isDragging })}\n            style={provided.draggableProps.style}\n            onClick={() => setPromptOpen(true)}>\n            {content.split('\\n').map((x,i)=><p key={i}>{x}</p>)}\n          </div>\n        )}\n      </Draggable>\n      {promptOpen && (\n        <CardEditDialog respond={() => setPromptOpen(false)} card={card} />\n      )}\n    </React.Fragment>\n  );\n}\n\nconst AddColumn = ({ styles, add }) => {\n  return (\n    <div className={styles.column} style={{\n        width: cardWidth, display: 'flex', justifyContent: 'center',\n        alignItems: 'center', height: '100px'\n      }}>\n      <IconButton onClick={add}>\n        <AddIcon />\n      </IconButton>\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { TabView, UndoRedo } from '../components';\nimport BoardView from './boardview';\n\nexport default () => {\n  // -> [{name, id, columns (ids)},...]\n  const tabs = useSelector(state => state.boards.present.tabs);\n  return (\n    <TabView\n      tabs={tabs.map(tab => tab.name)}\n      render={i => (<BoardView tabInfo={{ tab: tabs[i], index: i }} />)}\n      children={<UndoRedo />}/>\n  );\n}\n","\nimport { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport boards from './ducks/kanban';\nimport { saveState } from './common/utils';\n\nconst reducer = combineReducers({\n  boards,\n  // notes,\n});\n\nconst store = configureStore({ reducer });\n\n// Undo/redo keyboard shortcuts if supported\ntry {\n  document.addEventListener('keyup', e => {\n    if (e.ctrlKey && e.which === 90)\n      store.dispatch(UndoActionCreators.undo());\n    else if (e.ctrlKey && e.shiftKey && e.which === 90 || e.ctrlKey && e.which === 89)\n      store.dispatch(UndoActionCreators.redo());\n  });\n} catch (e) {}\n\n// Save board state (excluding history)\n// TODO: how can we include history? We cannot serialise all state easily with our combineReducers\n// approach unfortunately\nconst localStorageSubscriber = () => saveState(store.getState().boards.present);\nstore.subscribe(localStorageSubscriber);\nlocalStorageSubscriber(); // save data generated on first run\n\nexport default store;\n","\n/**\n * app.js\n * Main JSX source file for the app\n * Details like screen size and renderer are abstracted away by index.[platform].js\n * and ../index.js\n */\n\nimport React from 'react';\nimport { StyleSheet, Text, View, Platform } from 'react-native';\nimport { Provider } from 'react-redux';\n\nimport { Button, MenuBar } from './components';\nimport Kanban from './kanban';\nimport store from './store';\n\nexport default () => {\n  const [active, setActive] = React.useState(0);\n  const style = Platform.OS === \"web\"\n    ? { height: \"calc(100% - 48px)\" }\n    : { flexGrow: 1 };\n\n  return (\n    <Provider store={store}>\n      <View style={{ top: 0, left: 0, height: \"100%\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n\n        <View style={style}>\n          { active === 0 && (\n            <Kanban />\n          )}\n        </View>\n\n        <MenuBar active={active} setActive={setActive} />\n\n      </View>\n    </Provider>\n  );\n}\n","\n/**\n * index.web.js\n * Simple Application wrapper that implements web-specific functionality\n */\n\nimport React from 'react';\nimport Application from './app';\nimport Favicon from 'react-favicon';\nimport fav from './favicon.ico';\n\n// Simple hack to customize the title because we cannot edit the HTML itself.\n// Also using it to sneak in some global styles\ntry {\n  document.title = \"Mirror Project\";\n  document.body.style = `\n  font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Droid Sans,Helvetica Neue,sans-serif;\n  font-size: 14px;\n  `;\n} catch (e) {}\n\nexport default props => (\n  <React.Fragment>\n    <Favicon url={fav} />\n    <Application style={{ top: 0, left: 0, height: \"100%\", width: \"100%\" }} />\n  </React.Fragment>\n);\n","\nimport { registerRootComponent } from 'expo';\n\nimport Application from './src/index';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(Application);\n"],"sourceRoot":""}