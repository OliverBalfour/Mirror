{"version":3,"sources":["web-build/register-service-worker.js","src/components/popovermenu.js","src/components/tabview.js","src/components/button.js","src/common/utils.js","src/ducks/kanban.js","src/store.js","src/kanban/attributes/description.js","src/kanban/attributes/datetime.js","src/kanban/attributes/ebs.js","src/kanban/attributes/index.js","src/components/dialogs.js","src/components/menubar.js","src/components/undoredo.js","src/kanban/boardview.js","src/kanban/index.js","src/app.js","index.js","src/index.web.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","map","children","React","anchorEl","setAnchorEl","handleClose","Menu","keepMounted","open","Boolean","onClose","Object","entries","name","func","MenuItem","key","onClick","e","currentTarget","TabPanel","show","hidden","style","height","tabs","render","index","setIndex","addTab","renameTab","deleteTab","moveTab","handleChange","event","newValue","length","flex","AppBar","position","backgroundColor","zIndex","Tabs","value","onChange","indicatorColor","textColor","tab","Tab","label","View","flexGrow","IconButton","i","makeStyles","theme","button","generateID","Math","random","toString","substring","dummyState","initial","id","colnums","colnames","numcards","reduce","a","b","cards","sampleCards","push","content","floor","columns","cnt","items","slice","card","dummyCols","colIDs","col","prettyPrintDate","epochMilliseconds","date","Date","now","time","getHours","getMinutes","fn","getTime","diff","getDate","transferCard","createAction","reorderCard","addCard","editCardContent","editCard","deleteCard","addColumn","deleteColumn","renameColumn","moveColumn","archiveCardsInColumn","indexFromID","list","item","indexOf","deleteByID","splice","deleteInList","elem","selectors","getColumnsInTabs","state","_","archivedCards","filter","keys","activeCards","initialState","localStorage","hasOwnProperty","JSON","parse","getItem","loadState","_deleteColumn","s","colIdx","forEach","cardID","reducer","createReducer","srcColIdx","payload","srcColID","dstColIdx","dstColID","srcCol","dstCol","srcIndex","removed","dstIndex","colID","newitems","unshift","tabID","srcIdx","dstIdx","tabIdx","archived","undoable","limit","combineReducers","boards","store","configureStore","document","ctrlKey","which","dispatch","UndoActionCreators","undo","shiftKey","redo","localStorageSubscriber","serialised","stringify","setItem","saveState","getState","present","subscribe","object","mapFn","globalSelectors","boardSelectors","localSelector","result","Edit","setCard","editingDescription","setEditingDescription","description","InputLabel","className","ClickAwayListener","onClickAway","TextField","margin","autoFocus","fullWidth","variant","multiline","rows","rowsMax","target","undefined","marginTop","source","Indicator","title","split","join","icon","setDateTime","utils","DateFnsUtils","DateTimePicker","newDate","showTodayButton","format","Button","color","float","setEBS","ebsFields","ebs","prettySeconds","estimate","estStr","setEstStr","elapsed","elapStr","setElapStr","historical","useSelector","sel","setEBSEstimate","str","unprettySeconds","computed","computeEstimate","invalid","width","marginRight","helperText","setEBSElapsed","FormControlLabel","control","Checkbox","checked","exact","size","ratio","acc","seconds","abs","round","hours","minutes","groups","exec","x","pf","k","parseFloat","useStyles","padding","header","marginBottom","IndicatorBuilder","Chip","classes","borderRadius","background","AttributeHeader","props","ConfirmDialog","respond","subtitle","labels","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","PromptDialog","inputType","placeholder","buttons","setValue","done","type","CardEditDialog","newCard","onbeforeunload","useDispatch","currentColID","setColID","setContent","maxWidth","disableBackdropClick","Select","labelId","flatMap","ListSubheader","getColIdxByID","duck","AboutDialog","href","active","setActive","useState","aboutOpen","setAboutOpen","Fragment","top","bottom","Toolbar","minHeight","edge","log","val","TabIndicatorProps","verticalAlign","prompt","clear","kanban","filename","createElement","blob","Blob","URL","createObjectURL","download","click","downloadData","ActionCreators","root","display","flexDirection","flexWrap","fontSize","flexShrink","column","paddingBottom","border","transition","overflow","addColumnContainer","cardWidth","justifyContent","alignItems","columnHeaderContainer","columnHeaderText","paddingLeft","columnHeaderRule","marginLeft","userSelect","boxShadow","draggingCard","opacity","columnContainer","draggingColumn","tabInfo","tabObj","styles","promptOpen","setPromptOpen","overflowX","onDragEnd","res","destination","droppableId","direction","provided","snapshot","ref","innerRef","add","hide","isDraggingOver","draggingFromThisWith","Column","editingNew","setEditingNew","editingValue","setEditingValue","addButton","menuButton","internals","ignoreContainerClipping","overflowY","cancel","draggableId","draggableProps","isDragging","dragHandleProps","menu","EditingCard","ButtonGroup","ColumnHeader","confirmOpen","setConfirmOpen","Card","AddColumn","currentTab","setCurrentTab","addPromptOpen","setAddPromptOpen","renamePromptOpen","setRenamePromptOpen","alert","data","max","Platform","OS","left","registerRootComponent"],"mappings":"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","file":"static/js/app.c285a7f7.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/Mirror/expo-service-worker.js', { scope: '/Mirror/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","\n// Popover menu (web)\nimport * as React from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\n\n\nexport default ({ map, children }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => setAnchorEl(null);\n\n  return (\n    <React.Fragment>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}>\n        {Object.entries(map).map(([name, func]) => (\n          <MenuItem key={name}\n            onClick={() => { handleClose(); func() }}>\n            {name}\n          </MenuItem>\n        ))}\n      </Menu>\n      {React.cloneElement(children, {\n        onClick: e => setAnchorEl(e.currentTarget)\n      })}\n    </React.Fragment>\n  );\n}\n","\n/**\n * TabView component\n *\n * <TabView\n *   tabs={[\"one\", \"two\", \"three\"]}\n *   render={i => (<SomeComponent index={i} />)}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { AppBar, Tabs, Tab, IconButton } from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport PopoverMenu from './popovermenu';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst TabPanel = ({ show, children }) => (\n  <div hidden={!show} style={{ height: 'calc(100% - 48px)' }}>\n    {show && children}\n  </div>\n);\n\nexport default ({\n  tabs, render, children, index, setIndex,\n  addTab, renameTab, deleteTab, moveTab\n}) => {\n  const handleChange = (event, newValue) => newValue >= 0 && newValue < tabs.length && setIndex(newValue);\n\n  return (\n    <div style={{ flex: 1 }}>\n      <AppBar position=\"static\" style={{\n          backgroundColor: \"white\",\n          zIndex: 2, position: 'relative'\n        }}>\n        <Tabs value={index} onChange={handleChange}\n          indicatorColor=\"primary\" textColor=\"primary\">\n          {tabs.map(tab => (\n            <Tab label={tab} key={tab} />\n          ))}\n          <View style={{flexGrow: 1}}></View>\n          <PopoverMenu map={{\n            \"Add tab\": () => addTab(),\n            \"Rename tab\": () => renameTab(index),\n            \"Delete tab\": () => deleteTab(index),\n            \"Move tab left\": () => (moveTab([index, index-1]), handleChange(null, index-1)),\n            \"Move tab right\": () => (moveTab([index, index+1]), handleChange(null, index+1)),\n          }}>\n            <IconButton>\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n          {children}\n        </Tabs>\n      </AppBar>\n      {tabs.map((tab, i) => (\n        <TabPanel show={index === i} key={tab}>\n          {index === i && render(i)}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({ button: {} }));\n\nexport default props => (\n  <Button className={useStyles().button} variant=\"contained\" color=\"primary\" {...props} />\n);\n","\nimport * as fn from 'date-fns';\n\nexport const generateID = () => Math.random().toString().substring(2);\n\n// generate { cards, columns } where each column has colnum[i] cards\n// both of these are objects where the keys are unique IDs\n// cards are { id, content } structs\n// todo: make them arrays containing their IDs and write selectors instead\n// columns are { id, items: [ id ] } structs\n// Example: {\n//   cards: [{ id: \"a\", content: \"Item 1\" }],\n//   columns: [{ id: \"b\", items: [\"a\"] }],\n//   tabs: [{ name: \"Main\", columns: [\"b\"] }]\n// }\nexport const dummyCols = (colnums, colnames) => {\n  let numcards = colnums.reduce((a, b) => a + b, 0);\n  let cards = [];\n  let sampleCards = [\n    \"Wash the dishes\",\n    \"Make cool app\",\n    \"Run out of ideas for sample tasks for the app you're making\",\n    \"Cook pizza for dinner\",\n    \"Finish your chemistry homework\",\n    \"Write a tutorial explaining how monads are isomorphic to burritos in the category of food\",\n    \"Forget to wrap a line at 300 characters\",\n    \"Learn Common Lisp\",\n    \"Do normal human things\",\n    \"Prove P=NP for N=1\",\n    \"Eat some chocolate\",\n    \"Stop eating so much chocolate\",\n    \"Write witty comment\",\n    \"🙂\"];\n  for (let i = 0; i < numcards; i++) {\n    let id = (i+1).toString() + \"-\" + generateID();\n    cards.push({ id, content: sampleCards[Math.floor(Math.random()*sampleCards.length)] });\n  }\n  let columns = [];\n  for (let i = 0, cnt = 0; i < colnums.length; i++) {\n    let items = cards.slice(cnt, cnt + colnums[i]).map(card => card.id);\n    let id = (i + 1).toString() + \"-\" + generateID();\n    columns.push({ id, items, name: colnames[i] });\n    cnt += colnums[i];\n  }\n  return { cards, columns };\n};\n\n// generate initial dummy state\nexport const dummyState = () => {\n  let initial = {\n    tabs: [{ name: \"Main\", id: generateID() }, { name: \"Secondary\", id: generateID() }],\n    ...dummyCols([9,2,6,5,4], [\"To Do\",\"Doing\",\"Done\",\"Misc 1\",\"Misc 2\"])\n  };\n  const colIDs = initial.columns.map(col => col.id);\n  initial.tabs[0].columns = [colIDs[0], colIDs[1], colIDs[2]];\n  initial.tabs[1].columns = [colIDs[3], colIDs[4]];\n  return initial;\n}\n\n// load persisted state\nexport const loadState = () => {\n  try {\n    // web\n    if (localStorage.hasOwnProperty(\"kanban\")) {\n      const state = JSON.parse(localStorage.getItem(\"kanban\"));\n      if (state !== null) return state;\n    } else return dummyState();\n  } catch (e) {\n    // native\n    return dummyState();\n  }\n}\n\nexport const saveState = state => {\n  try {\n    if (localStorage) {\n      const serialised = JSON.stringify(state);\n      localStorage.setItem(\"kanban\", serialised);\n    }\n  } catch (e) {}\n}\n\n// Source: https://stackoverflow.com/a/14810722/4642943\n// returns a new object with the values at each key mapped using mapFn(value)\nexport const objectMap = (object, mapFn) =>\n  Object.keys(object).reduce(function(result, key) {\n    result[key] = mapFn(object[key])\n    return result\n  }, {});\n\n/**\n * Returns a heavily abbreviated pretty printed date using date-fns\n * - Only includes time if within a week and not midnight\n * - Only includes minutes if nonzero\n * - Replaces date with \"Tomorrow\" or \"Next Fri\" for days within a fortnight\n */\nexport const prettyPrintDate = epochMilliseconds => {\n  const date = new Date(epochMilliseconds);\n  const now = new Date();\n\n  const getDate = date => {\n    const diff = fn.differenceInCalendarDays(date, now);\n    if (diff === 0) return \"Today\";\n    else if (diff === -1) return \"Yesterday\";\n    else if (diff === 1) return \"Tomorrow\";\n    else if (diff > 0 && diff < 7) return fn.format(date, \"EEE\"); // ex: Wed\n    // else if (diff < 14) return fn.format(date, \"EEE\") + \" Week\"; // ex: Fri Week\n    else if (diff > -7 && diff < 0) return \"Last \" + fn.format(date, \"EEE\"); // ex: Last Fri\n    return fn.format(date, \"MMM do\"); // ex: Sep 17th\n  }\n\n  const getTime = date => {\n    if (date.getHours() === 0 && date.getMinutes() === 0) return null; // ignore time if midnight\n    if (date.getMinutes() === 0) return fn.format(date, \"haaa\"); // ex: 4PM\n    return fn.format(date, \"h:mmaaa\");\n  }\n\n  const time = getTime(date);\n  return getDate(date) + (time ? \" \" + time : \"\");\n};\n\n// Download content as filename with specificed MIME type\nexport const downloadData = (content, filename, type) => {\n    if(!type) type = 'application/octet-stream';\n    const a = document.createElement('a');\n    const blob = new Blob([content], { type });\n    a.href = window.URL.createObjectURL(blob);\n    a.download = filename;\n    a.click();\n}\n","\n/**\n * Kanban boards core Redux logic\n *\n * State is normalised as { tabs, columns, cards }\n *  where each tab has several columns which contain cards\n *  each has a unique ID as a key in the respective object\n */\n\nimport { createReducer, createAction, createSelector } from '@reduxjs/toolkit';\nimport undoable from 'redux-undo';\nimport { loadState, generateID } from '../common/utils';\n\n// Action creators\n\nexport const transferCard = createAction('kanban/TRANSFER_CARD');\nexport const reorderCard = createAction('kanban/REORDER_CARD');\nexport const addCard = createAction('kanban/ADD_CARD'); // takes { content, colID }\nexport const editCardContent = createAction('kanban/EDIT_CARD_CONTENT');//takes {content, cardID}\nexport const editCard = createAction('kanban/EDIT_CARD'); // takes a card object; allows editing all of a card's params\nexport const deleteCard = createAction('kanban/DELETE_CARD');//takes cardID\n\nexport const moveCard = ([srcColID, dstColID, srcIndex, dstIndex]) =>\n  srcColID === dstColID\n    ? reorderCard({ colID: srcColID, srcIndex, dstIndex })\n    : transferCard({ srcColID, dstColID, srcIndex, dstIndex });\n\nexport const addColumn = createAction('kanban/ADD_COLUMN'); // takes { name, tabID }\nexport const deleteColumn = createAction('kanban/DELETE_COLUMN'); // takes string column ID\nexport const renameColumn = createAction('kanban/RENAME_COLUMN'); // takes { colID, name }\nexport const moveColumn = createAction('kanban/MOVE_COLUMN'); // takes [srcIdx, dstIdx, tabIdx]\nexport const archiveCardsInColumn = createAction('kanban/ARCHIVE_ALL_COLUMN'); // takes colID\n\nexport const addTab = createAction('kanban/ADD_TAB'); // takes name\nexport const deleteTab = createAction('kanban/DELETE_TAB'); // takes tabIdx\nexport const renameTab = createAction('kanban/RENAME_TAB'); // takes { tabID, name }\nexport const moveTab = createAction('kanban/MOVE_TAB'); // takes [srcIdx, dstIdx]\n\n// Helpers\n\nconst indexFromID = (list, id) => list.map(item => item.id === id).indexOf(true);\nconst deleteByID = (list, id) => list.splice(indexFromID(list, id), 1);\nconst deleteInList = (list, elem) => {\n  let index = list.indexOf(elem);\n  if (index !== -1) list.splice(index, 1); // undesired behaviour when splicing at (-1, 1)\n};\n\n// Selectors\n\nexport const selectors = {\n  // higher order function which creates a selector for a specific tab\n  // it un-normalises the state for that tab, returning:\n  // return :: List[column], column :: { id, items: List[card] }, card :: { id, content }\n  getColumnsInTabs: state =>\n    state.tabs.map((_, tab) => state.tabs[tab].columns.map(col => state.columns[indexFromID(state.columns, col)])\n      .map(col => ({\n        ...col, items: col.items.map(card => state.cards[indexFromID(state.cards, card)])\n      }))),\n  columns: state => state.columns,\n  tabs: state => state.tabs,\n  cards: state => state.cards,\n  archivedCards: state => state.cards.filter(card => Object.keys(card).indexOf(\"archived\") !== -1),\n  activeCards:   state => state.cards.filter(card => Object.keys(card).indexOf(\"archived\") === -1),\n};\n\n// Reducers\n\nconst initialState = loadState();\n\nconst _deleteColumn = (s, id) => {\n  const colIdx = indexFromID(s.columns, id);\n  s.columns[colIdx].items.forEach(cardID => deleteByID(s.cards, cardID));\n  s.tabs.forEach(tab => deleteInList(tab.columns, id));\n  deleteByID(s.columns, id);\n};\n\nconst reducer = createReducer(initialState, {\n  [transferCard]: (s, a) => {\n    const srcColIdx = indexFromID(s.columns, a.payload.srcColID);\n    const dstColIdx = indexFromID(s.columns, a.payload.dstColID);\n\n    let srcCol = s.columns[srcColIdx].items;\n    let dstCol = s.columns[dstColIdx].items;\n    const [removed] = srcCol.splice(a.payload.srcIndex, 1);\n    dstCol.splice(a.payload.dstIndex, 0, removed);\n  },\n  [reorderCard]: (s, a) => {\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    let newitems = s.columns[colIdx].items;\n    const [removed] = newitems.splice(a.payload.srcIndex, 1);\n    newitems.splice(a.payload.dstIndex, 0, removed);\n    s.columns[colIdx].items = newitems;\n  },\n  [addCard]: (s, a) => {\n    const { content, colID } = a.payload;\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    const cardID = generateID();\n    s.cards.push({ id: cardID, content });   // add to cards list\n    s.columns[colIdx].items.unshift(cardID); // add to top of column\n  },\n  [deleteColumn]: (s, a) => {\n    _deleteColumn(s, a.payload);\n  },\n  [renameColumn]: (s, a) => {\n    s.columns[indexFromID(s.columns, a.payload.colID)].name = a.payload.name;\n  },\n  [editCardContent]: (s, a) => {\n    s.cards[indexFromID(s.cards, a.payload.cardID)].content = a.payload.content;\n  },\n  [deleteCard]: (s, a) => {\n    const cardIdx = indexFromID(s.cards, a.payload);\n    s.columns.forEach(col => deleteInList(col.items, a.payload));\n    deleteByID(s.cards, a.payload);\n  },\n  [addColumn]: (s, a) => {\n    const id = generateID();\n    s.columns.push({ id, items: [], name: a.payload.name });\n    s.tabs[indexFromID(s.tabs, a.payload.tabID)].columns.push(id);\n  },\n  [editCard]: (s, a) => {\n    s.cards[indexFromID(s.cards, a.payload.card.id)] = a.payload.card;\n    const srcColIdx = s.columns.map(col => col.items.indexOf(a.payload.card.id) !== -1).indexOf(true);\n    const dstColIdx = indexFromID(s.columns, a.payload.colID);\n    if (srcColIdx !== dstColIdx) {\n      deleteInList(s.columns[srcColIdx].items, a.payload.card.id);\n      s.columns[dstColIdx].items.unshift(a.payload.card.id);\n    }\n  },\n  [deleteTab]: (s, a) => {\n    while (s.tabs[a.payload].columns.length)\n      _deleteColumn(s, s.tabs[a.payload].columns[0]);\n    s.tabs.splice(a.payload, 1);\n  },\n  [addTab]: (s, a) => {\n    s.tabs.push({ name: a.payload, id: generateID(), columns: [] });\n  },\n  [renameTab]: (s, a) => {\n    s.tabs[indexFromID(s.tabs, a.payload.tabID)].name = a.payload.name;\n  },\n  [moveColumn]: (s, a) => {\n    const [srcIdx, dstIdx, tabIdx] = a.payload;\n    let newitems = s.tabs[tabIdx].columns;\n    const [removed] = newitems.splice(srcIdx, 1);\n    newitems.splice(dstIdx, 0, removed);\n    s.tabs[tabIdx].columns = newitems;\n  },\n  [moveTab]: (s, a) => {\n    const [srcIdx, dstIdx] = a.payload;\n    if (dstIdx < 0 || dstIdx >= s.tabs.length) return;\n    let newitems = s.tabs;\n    const [removed] = newitems.splice(srcIdx, 1);\n    newitems.splice(dstIdx, 0, removed);\n    s.tabs = newitems;\n  },\n  [archiveCardsInColumn]: (s, a) => {\n    // archived cards still exist in memory but are not listed in a column's items\n    // they do have a archived: {date, colID} field added however for future use\n    const colIdx = indexFromID(s.columns, a.payload);\n    s.columns[colIdx].items.forEach(cardID => {\n      let card = s.cards[indexFromID(s.cards, cardID)];\n      card.archived = { date: new Date().getTime(), colID: a.payload };\n    });\n    s.columns[colIdx].items = [];\n  },\n});\n\nexport default undoable(reducer, {limit:50});\n","\nimport { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport boards, { selectors as boardSelectors } from './ducks/kanban';\nimport { saveState, objectMap } from './common/utils';\n\nconst reducer = combineReducers({\n  boards,\n  // notes,\n});\n\nconst store = configureStore({ reducer });\n\n// Undo/redo keyboard shortcuts if supported\ntry {\n  document.addEventListener('keyup', e => {\n    if (e.ctrlKey && e.which === 90)\n      store.dispatch(UndoActionCreators.undo());\n    else if (e.ctrlKey && e.shiftKey && e.which === 90 || e.ctrlKey && e.which === 89)\n      store.dispatch(UndoActionCreators.redo());\n  });\n} catch (e) {}\n\n// Save board state (excluding history)\n// TODO: how can we include history? We cannot serialise all state easily with our combineReducers\n// approach unfortunately\nconst localStorageSubscriber = () => saveState(store.getState().boards.present);\nstore.subscribe(localStorageSubscriber);\nlocalStorageSubscriber(); // save data generated on first run\n\nexport default store;\n\n// produce global selectors\nexport const globalSelectors = {\n  boards: state => state.boards.present\n}\nexport const selectors = {\n  boards: objectMap(boardSelectors, localSelector => state => localSelector(globalSelectors.boards(state)))\n};\n","\nimport * as React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { ClickAwayListener, TextField, InputLabel } from '@material-ui/core';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport { IndicatorBuilder, AttributeHeader } from '.';\n\nexport const Edit = ({ card, setCard }) => {\n  const [editingDescription, setEditingDescription] = React.useState(false);\n  const setDescription = description => setCard({...card,\n      description: description.length ? description : undefined});\n\n  if (!editingDescription && typeof card.description !== 'string')\n    return (\n      <AttributeHeader onClick={() => setEditingDescription(true)}>\n        Add description\n      </AttributeHeader>\n    );\n\n  return !editingDescription ? (\n    <div onClick={() => setEditingDescription(true)} style={{marginTop: 8}}>\n      <InputLabel className=\"custom-label\">Description</InputLabel>\n      <ReactMarkdown source={card.description} />\n    </div>\n  ) : (\n    <React.Fragment>\n      <InputLabel className=\"custom-label\">Description</InputLabel>\n      <ClickAwayListener onClickAway={() => setEditingDescription(false)}>\n        <TextField margin=\"dense\" autoFocus fullWidth variant=\"outlined\"\n          multiline rows={6} rowsMax={16} value={card.description} onChange={e => setDescription(e.target.value)} />\n      </ClickAwayListener>\n    </React.Fragment>\n  );\n};\n\nexport const Indicator = ({ card }) => {\n  if (card.description) {\n    const limit = 500; // crop after this with ellisis\n    const title = card.description.split(\"\\n\\n\").join(\"\\n\").substring(0, limit);\n      + (card.description.length > limit ? \"...\" : \"\");\n\n    return <IndicatorBuilder label={null} title={title} icon={<NotesIcon />} />;\n  } else return null;\n};\n","\nimport * as React from 'react';\nimport { Button, InputLabel } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { format } from 'date-fns';\nimport { prettyPrintDate } from '../../common/utils';\nimport { IndicatorBuilder, AttributeHeader } from '.';\n\nexport const Edit = ({ card, setCard }) => {\n  const setDateTime = time => setCard({...card, time});\n\n  return card.time ? (\n    <div style={{marginTop: 10}}>\n      <InputLabel className=\"custom-label\">Date &amp; time</InputLabel>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <DateTimePicker\n          value={new Date(card.time)}\n          onChange={newDate => setDateTime(newDate.getTime())}\n          showTodayButton\n          format=\"MMMM do hh:mm aaa\" />\n      </MuiPickersUtilsProvider>\n      <Button color=\"primary\" variant=\"outlined\" style={{float:'right',marginTop:12}}\n        onClick={() => setDateTime(null)}>Reset date</Button>\n    </div>\n  ) : (\n    <AttributeHeader onClick={() => setDateTime(new Date().getTime())}>\n      Add date &amp; time\n    </AttributeHeader>\n  );\n};\n\nexport const Indicator = ({ card }) => {\n  if (card.time) {\n    return <IndicatorBuilder\n      icon={<AccessTimeIcon />}\n      label={prettyPrintDate(card.time)}\n      title={format(new Date(card.time), \"dd/MM/yyyy hh:mmaaa\")} />\n  } else return null;\n};\n","\n/**\n * Evidence Based Scheduling card attribute\n * See: https://www.joelonsoftware.com/2007/10/26/evidence-based-scheduling/\n */\n\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, TextField, FormControlLabel, Checkbox, InputLabel } from '@material-ui/core';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport HourglassFullIcon from '@material-ui/icons/HourglassFull';\nimport { globalSelectors as sel } from '../../store';\nimport { IndicatorBuilder, AttributeHeader } from '.';\n\nexport const Edit = ({ card, setCard }) => {\n  // edit a subset of the EBS fields\n  const setEBS = ebsFields => setCard({...card, ebs: {...card.ebs, ...ebsFields}});\n  const [estStr, setEstStr] = React.useState(card.ebs ? prettySeconds(card.ebs.estimate) : \"\");\n  const [elapStr, setElapStr] = React.useState(card.ebs ? prettySeconds(card.ebs.elapsed) : \"\");\n\n  // list of EBS objects for all cards\n  const historical = useSelector(s => sel.boards(s).cards\n    .filter(card => card.hasOwnProperty('ebs') && card.ebs !== null)\n    .filter(card => card.ebs.elapsed && card.ebs.estimate)\n    .map(card => card.ebs));\n\n  const setEBSEstimate = str => {\n    setEstStr(str);\n    const estimate = unprettySeconds(str);\n    if (typeof estimate === \"number\")\n      setEBS({estimate, computed: computeEstimate(estimate, historical)});\n  }\n  const setEBSElapsed = str => {\n    setElapStr(str);\n    const elapsed = unprettySeconds(str);\n    if (typeof elapsed === \"number\")\n      setEBS({elapsed});\n  }\n  const resetEBS = () => (setEstStr(\"\"), setElapStr(\"\"), setCard({...card, ebs: null}));\n\n  if (!card.ebs)\n    return (\n      <AttributeHeader onClick={() => setEBSEstimate('1h')}>\n        Add time estimate\n      </AttributeHeader>\n    );\n\n  // ebs :: { estimate :: seconds, computed :: seconds, elapsed :: seconds,\n  //   done :: boolean, exact :: boolean }\n  // estimate is user estimate, computed is a function of historical estimation accuracy\n  // and elapsed is current time spent on the task, and exact is whether the estimate is exact (eg duration)\n  // TODO: add timer feature or column powerup to automatically time\n\n  const getPrettyPredicted = () => prettySeconds(computeEstimate(unprettySeconds(estStr) || 0, historical));\n\n  // returns true iff the string is non-empty but in incorrect format (not HHhMMm like 1h30m)\n  const invalid = str => str !== \"\" && str !== null && unprettySeconds(str) === null;\n\n  return (\n    <div style={{marginTop: 10}}>\n      <InputLabel className=\"custom-label\">Time estimate</InputLabel>\n      <div style={{width: '30%',float:'left',marginRight:16}}>\n        <TextField label={`Estimate (predicted ${getPrettyPredicted()})`}\n          margin=\"dense\" fullWidth\n          value={estStr}\n          error={invalid(estStr)}\n          helperText={invalid(estStr) ? \"Example format: 1h30m\" : null}\n          onChange={e => setEBSEstimate(e.target.value)} />\n      </div>\n      <div style={{width: '30%',float:'left',marginRight:16}}>\n        <TextField label=\"Elapsed\"\n          margin=\"dense\" fullWidth\n          value={elapStr}\n          error={invalid(elapStr)}\n          helperText={invalid(elapStr) ? \"Example format: 1h30m\" : null}\n          onChange={e => setEBSElapsed(e.target.value)} />\n      </div>\n      <div style={{marginTop: 12, float:'left'}}>\n        <FormControlLabel label=\"Exact duration\" control={\n            <Checkbox color=\"primary\"\n              checked={Boolean(card.ebs.exact)} onChange={e => setEBS({ exact: e.target.checked })} />\n          }/>\n      </div>\n      <div style={{flexGrow:1}}></div>\n      <Button color=\"primary\" variant=\"outlined\" size='medium' style={{float:'right',marginTop:12}}\n        onClick={resetEBS}>Reset estimate</Button>\n    </div>\n  )\n};\n\n// historical :: List[{ estimate, computed, elapsed }]\nconst computeEstimate = (s, historical) => {\n  if (typeof s !== 'number') return s;\n\n  // Compute average ratio elapsed / estimated\n  let ratio = historical.reduce(\n    (acc, ebs) => acc + ebs.elapsed / ebs.estimate / historical.length\n    , 0);\n  // if few samples average with 1\n  if (!ratio) ratio = 1;\n  if (historical.length < 10) ratio = (ratio + 1) / 2;\n\n  // computes an estimate of the time given all of the cards' EBS values\n  const computed = s * ratio;\n\n  // round rough estimate to a reasonable level of precision\n  // nearest hr, 15min or 5min interval if that is the same level of precision as the input\n  const precisions = [3600, 60*15, 60*5];\n  for (let seconds of precisions) {\n    if (s % seconds === 0 && Math.abs(computed - s) > seconds / 2)\n      return seconds * Math.round(computed / seconds);\n  }\n  // otherwise nearest minute\n  return 60 * Math.round(computed / 60);\n};\n\n// Pretty print seconds in short form like 3600->1h, 6300->1h45m (no days or seconds)\nconst prettySeconds = s => {\n  if (typeof (s) === 'string') return s;\n  const hours = Math.floor(s / 3600);\n  const minutes = Math.floor((s % 3600) / 60);\n  if (hours === 0 && minutes === 0) return '0';\n  return (hours ? hours + 'h' : '') + (minutes ? minutes + 'm' : '');\n};\n\n// Inverse of prettySeconds; used so the input field can be edited in pretty form\nlet unprettySeconds = s => {\n  if (s === '0') return 0;\n\n  // this parses it to [x,'1h', '30m'] if possible, or [x,'1h',undefined] or [x,undefined,'30m']\n  // if only one is present, where x is irrelevant\n  let groups = (/^(\\d+h|\\d*\\.\\d+h)?(\\d+m|\\d*\\.\\d+m)?$/m).exec(s);\n\n  // check there are 3 matches where at least one of the latter two are defined\n  if (!groups || groups.length !== 3 || !groups.slice(1).filter(x=>x).length)\n    return null;\n  else groups = groups.slice(1);\n\n  const pf = k => parseFloat(k.substring(0, k.length-1)); // \"1.5h\" -> 1.5\n  return 3600*pf(groups[0] || '00') + 60*pf(groups[1] || '00');\n};\n\nexport const Indicator = ({ card }) => {\n  if (card.ebs) {\n    // display 'elapsed/computed' where the 'elapsed/' is only present if nonzero\n    // displays estimate instead of computed iff card.ebs.exact (checkbox ticked)\n    const label = (card.ebs.elapsed ? prettySeconds(card.ebs.elapsed) + '/' : \"\")\n      + prettySeconds(card.ebs.exact ? card.ebs.estimate : card.ebs.computed);\n    const elapsed = card.ebs.elapsed ? `Elapsed: ${prettySeconds(card.ebs.elapsed)}` : \"\";\n    const title = card.ebs.exact ?\n      `Duration: ${prettySeconds(card.ebs.estimate)}\\n${elapsed}` :\n      `Estimate: ${prettySeconds(card.ebs.estimate)}\\nComputed: ${prettySeconds(card.ebs.computed)}\\n${elapsed}`;\n    // const icon = card.ebs.done ? <HourglassEmptyIcon /> : <HourglassFullIcon />\n    const icon = <HourglassEmptyIcon />;\n    return <IndicatorBuilder label={label} title={title} icon={icon} />;\n  } else return null;\n};\n","\nimport * as React from 'react';\nimport { Chip, makeStyles, Button } from '@material-ui/core';\n\nimport * as Description from './description';\nimport * as DateTime from './datetime';\nimport * as EBS from './ebs';\nexport { Description, DateTime, EBS };\n\nconst useStyles = makeStyles({\n  label: { padding: 3 },\n  header: { marginBottom: 6, marginTop: 6 },\n});\n\nexport const IndicatorBuilder = ({ icon, label, title }) =>\n  <Chip size='small' icon={icon}\n    label={label}\n    title={title}\n    classes={label && label.length ? null : { label: useStyles().label }}\n    style={{ borderRadius: 3, background: 'white', marginRight: 2 }}\n    variant='outlined' />;\n\nexport const AttributeHeader = props =>\n  <div className={useStyles().header}>\n    <Button variant='outlined' color='primary' size='small' {...props} />\n  </div>;\n","\nimport * as React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n         TextField, InputLabel, Select, MenuItem,\n         ListSubheader } from '@material-ui/core';\nimport * as duck from '../ducks/kanban';\nimport { globalSelectors as sel, selectors } from '../store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Description, DateTime, EBS } from '../kanban/attributes';\n\nexport const ConfirmDialog = ({ open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"] }) => {\n  return (\n    <Dialog open={open} onClose={() => respond(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {subtitle}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => respond(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => respond(true)} color=\"primary\" variant=\"contained\" autoFocus>\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const PromptDialog = ({\n  open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"],\n  label, inputType = \"text\", placeholder = \"\", buttons = null\n}) => {\n  const [value, setValue] = React.useState(placeholder);\n  const done = x => { respond(x); setValue(placeholder) };\n  return (\n    <Dialog open={open} onClose={() => done(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        {typeof subtitle === \"string\" && (\n          <DialogContentText>\n            {subtitle}\n          </DialogContentText>\n        )}\n        <TextField autoFocus margin=\"dense\" fullWidth\n          label={label} type={inputType} value={value} onChange={e => setValue(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        {buttons}\n        <Button onClick={() => done(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => done(value)} color=\"primary\" variant=\"contained\">\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const CardEditDialog = ({ respond, card }) => {\n  // create confirm dialog if closing the tab while editing a card\n  React.useEffect(() => {\n    // componentDidMount\n    if (JSON.stringify(newCard) !== JSON.stringify(card))\n      window.onbeforeunload = e => \"Are you sure you want to quit?\";\n    // componentWillUnmount\n    return () => window.onbeforeunload = null;\n  });\n\n  const dispatch = useDispatch();\n\n  const currentColID = useSelector(state => sel.boards(state).columns\n      .filter(col => col.items.indexOf(card.id) !== -1)[0].id);\n\n  const [colID, setColID] = React.useState(currentColID);\n  const [newCard, setCard] = React.useState(card);\n  const setContent = content => setCard({...newCard, content});\n\n  const columns = [...useSelector(selectors.boards.columns)];\n  const tabs = useSelector(selectors.boards.tabs);\n  const getTabIdxByColID = colID => tabs.map(tab => tab.columns.indexOf(colID) !== -1).indexOf(true);\n  const getColIdxByID = colID => columns.map(col => col.id === colID).indexOf(true);\n\n  const done = () => (respond(), setContent(card.content));\n  // save and then delete so you can undo the delete without losing your unsaved draft of a card\n  const deleteCard = () => (dispatch(duck.editCard({ card: newCard, colID })), dispatch(duck.deleteCard(card.id)), done());\n  const editCard = () => (dispatch(duck.editCard({ card: newCard, colID })), done());\n\n  return (\n    <Dialog open onClose={() => done(null)} fullWidth maxWidth='md'\n      disableBackdropClick={JSON.stringify(newCard) !== JSON.stringify(card)}>\n      <DialogTitle>Edit card</DialogTitle>\n      <DialogContent>\n        <InputLabel id=\"kanban/card-column\" className=\"custom-label\">Column</InputLabel>\n        <Select labelId=\"kanban/card-column\" value={colID} onChange={e => setColID(e.target.value)}>\n          {tabs.flatMap(tab => ([\n            // the subheader can be clicked so we add the following CSS hack (per mui#18200)\n            // .MuiListSubheader-root { pointer-events: none; }\n            <ListSubheader key={tab.id}>{tab.name}</ListSubheader>,\n            ...tab.columns.map(colID => {\n              const col = columns[getColIdxByID(colID)];\n              return (<MenuItem value={colID} key={colID}>{col.name}</MenuItem>);\n            })\n          ]))}\n        </Select>\n        <InputLabel id=\"kanban/card-title\" className=\"custom-label\">Title</InputLabel>\n        <TextField margin=\"dense\" autoFocus fullWidth\n          multiline rowsMax={3} value={newCard.content} onChange={e => setContent(e.target.value)} />\n        <Description.Edit card={newCard} setCard={setCard} />\n        <DateTime.Edit    card={newCard} setCard={setCard} />\n        <EBS.Edit         card={newCard} setCard={setCard} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={deleteCard}>Delete</Button>\n        <Button onClick={done} color=\"primary\">Cancel</Button>\n        <Button onClick={editCard} color=\"primary\" variant=\"contained\">OK</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const AboutDialog = ({ open, respond }) => {\n  return (\n    <Dialog open={open} onClose={respond} fullWidth>\n      <DialogTitle>About Mirror</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          A free and open source personal task management and note taking app.<br/>\n\n          Made by Oliver Balfour. &copy; 2020.<br/>\n\n          App icon is <a href=\"https://thenounproject.com/term/mirror/340140/\">Mirror</a>&nbsp;\n          by Lastspark from <a href=\"http://thenounproject.com/\">The Noun Project</a>.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={respond} color=\"primary\" variant=\"contained\" autoFocus>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","\n/**\n * MenuBar component\n *\n * <MenuBar active={0} setActive={...} />\n *  (active is index of current screen)\n *\n */\n\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Tabs, Tab } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport PopoverMenu from './popovermenu';\nimport { downloadData } from '../common/utils';\nimport { AboutDialog } from './dialogs';\n\nexport default ({ active, setActive }) => {\n  const [aboutOpen, setAboutOpen] = React.useState(false);\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" style={{ top: 'auto', bottom: 0 }}>\n        <Toolbar style={{ minHeight: 0 }}>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => console.log(\"open menu\")}>\n            <MenuIcon />\n          </IconButton>\n          <Tabs\n            value={active} onChange={(e, val) => setActive(val)}\n            TabIndicatorProps={{ style: { backgroundColor: 'white' } }}\n          >\n            <Tab label={<div><DeveloperBoardIcon style={{verticalAlign: 'middle'}} /> Board</div>}  />\n            <Tab label={<div><NotesIcon style={{verticalAlign: 'middle'}} /> Notes</div>}  />\n          </Tabs>\n          <div style={{ flexGrow: 1 }} />\n          <PopoverMenu map={{\n            \"Submit feedback\": () => window.open('mailto'+':oliver.'+'leo.balfour+mirrorsupport'+'@googlemail'+'.com', '_blank'),\n            \"About\": () => setAboutOpen(true),\n            \"Clear saved state\": () => window.prompt(\"Delete all saved state? Pressing undo will fix this. Type YES to confirm\", \"NO\") === \"YES\" && localStorage.clear(),\n            \"Import state\": () => { localStorage.kanban = window.prompt(\"Paste your exported state here. Press cancel (or the undo button after pressing OK) to revert. Refresh the page to confirm and reload state.\") },\n            \"Export state\": () => downloadData(localStorage.kanban, \"mirror-backup.json\", \"application/json\"),\n          }}>\n            <IconButton edge=\"end\" color=\"inherit\">\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n        </Toolbar>\n      </AppBar>\n      <AboutDialog open={aboutOpen} respond={() => setAboutOpen(false)} />\n    </React.Fragment>\n  );\n}\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport { ActionCreators } from 'redux-undo'\n\nexport default () => {\n  const dispatch = useDispatch();\n  return (\n    <React.Fragment>\n      <IconButton onClick={() => dispatch(ActionCreators.undo())}>\n        <UndoIcon />\n      </IconButton>\n      <IconButton onClick={() => dispatch(ActionCreators.redo())}>\n        <RedoIcon />\n      </IconButton>\n    </React.Fragment>\n  );\n};\n","\n/**\n * BoardView component\n *\n * <BoardView\n *   tab={tabIndex}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\nimport { selectors } from '../store';\nimport { View, Text } from 'react-native';\nimport { makeStyles, Button, IconButton, ButtonGroup, TextField, Chip } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { PopoverMenu, ConfirmDialog, PromptDialog, CardEditDialog } from '../components';\nimport ReactMarkdown from 'react-markdown';\nimport { Description, DateTime, EBS } from './attributes';\n\nconst grid = 8;\nconst cardWidth = 300;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    padding: grid,\n    fontSize: \"14px\",\n    \"& *\": {flexShrink: 0}\n  },\n  column: {\n    background: '#DFEEEE',\n    padding: grid,\n    paddingBottom: 24,\n    width: cardWidth,\n    border: '1px solid #CCDCDC',\n    borderRadius: 5,\n    margin: grid,\n    transition: \"border 0.2s\",\n\n    // TODO: install react-custom-scrollbars and use this instead with autohide\n    // there is a bug where moving cards to the tallest column leads to a scrollbar flashing up\n    // and we don't want the scrollbar to take up horizontal space and force the cards to reflow\n\n    height: 'calc(100vh - 160px)',\n    overflow: 'hidden'\n  },\n  addColumnContainer: {\n    width: cardWidth + 5*grid\n  },\n  addColumn: {\n    // we also apply a margin conditionally in the JSX when dragging columns\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100px',\n    background: '#DFEEEE',\n    padding: grid,\n    paddingBottom: 24,\n    width: cardWidth,\n    border: '1px solid #CCDCDC',\n    borderRadius: 5,\n    margin: grid,\n  },\n  columnHeaderContainer: {\n    padding: \"8 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  columnHeaderText: {\n    paddingLeft: 8,\n    paddingBottom: 0,\n    fontSize: '1.4em'\n  },\n  columnHeaderRule: {\n    overflow: \"hidden\",\n    border: \"none\",\n    color: \"#CCDCDC\",\n    backgroundColor: \"#CCDCDC\",\n    height: \"1px\",\n    width: cardWidth + grid * 2 + 1, //+1 is border\n    marginLeft: -(grid+1)\n  },\n  card: {\n    userSelect: 'none',\n    padding: \"10px 13px\",\n    margin: `0 0 ${grid}px 0`,\n    background: 'white',\n    borderRadius: 5,\n    transition: \"opacity 0.3s\",\n    overflow: 'hidden',\n    \"&:hover, &:focus\": {\n      boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n    },\n    \"&>p\": {\n      margin: 0\n    }\n  },\n  draggingCard: {\n    opacity: 0.7,\n    boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n  },\n  columnContainer: {\n    transition: \"opacity 0.6s\",\n  },\n  draggingColumn: {\n    opacity: 0.7,\n  },\n}));\n\nexport default ({ tabInfo }) => {\n  const tab = tabInfo.index;\n  const tabObj = tabInfo.tab;\n  const dispatch = useDispatch();\n  const styles = useStyles();\n\n  const columns = useSelector(selectors.boards.getColumnsInTabs)[tab];\n\n  // dispatch move card action\n  const onDragEnd = res => {\n    if (!res.destination) return;\n    if (res.type === \"card\") {\n      dispatch(duck.moveCard([\n        res.source.droppableId, res.destination.droppableId,\n        res.source.index, res.destination.index\n      ]));\n    } else if (res.type === \"column\") {\n      dispatch(duck.moveColumn([\n        res.source.index, res.destination.index, tab\n      ]));\n    }\n  };\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = name => setPromptOpen(false) ||\n    typeof name === \"string\" && name.length &&\n      dispatch(duck.addColumn({ tabID: tabObj.id, name }));\n\n  return (\n    <View style={{ width: '100vw', overflowX: 'auto', height: '100%' }}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"default\" style={{ flexGrow: 1, height: \"100%\" }} direction=\"horizontal\" type=\"column\">\n          {(provided, snapshot) => (\n            <React.Fragment>\n              <div className={styles.root} ref={provided.innerRef}>\n                {columns.map((col, i) => <Column col={col} styles={styles} key={col.id} index={i} />)}\n                <AddColumn styles={styles} add={() => setPromptOpen(true)} hide={snapshot.isDraggingOver || snapshot.draggingFromThisWith} />\n              </div>\n              {provided.placeholder}\n            </React.Fragment>\n          )}\n        </Droppable>\n      </DragDropContext>\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title=\"Add column\" label=\"Name\" />\n      )}\n    </View>\n  );\n}\n\nconst Column = ({ styles, col, index }) => {\n  const { id, items, name } = col;\n\n  const [editingNew, setEditingNew] = React.useState(false);\n  const [editingValue, setEditingValue] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const addCard = () => {\n    if (editingValue.length)\n      dispatch(duck.addCard({\n        content: editingValue,\n        colID: id\n      }));\n    setEditingValue(\"\");\n    setEditingNew(false);\n  };\n  const addButton = () => {\n    if (editingNew)\n      setEditingValue(\"\");\n    setEditingNew(!editingNew);\n  };\n  const menuButton = () => {\n    console.log('pressed menu button');\n  };\n\n  const internals = (\n    <Droppable droppableId={id} style={{ flexGrow: 1, height: \"100%\" }} type=\"card\" ignoreContainerClipping>\n      {(provided, snapshot) => (\n        <React.Fragment>\n          <div style={{\n              width: cardWidth, overflowY: 'auto', overflowX: 'hidden',\n              // 1) height is -20px to avoid bottom being clipped off\n              // 2) 100px padding and -100px height while dragging to give a 100px buffer of\n              // droppable space to avoid glitching due to dynamic resizing while moving\n              // cards to the bottom\n              height: snapshot.isDraggingOver ? \"calc(100% - 120px)\" : \"calc(100% - 20px)\",\n              paddingBottom: snapshot.isDraggingOver ? 100 : 0\n            }} ref={provided.innerRef}>\n            {editingNew && (\n              <EditingCard value={editingValue} setValue={setEditingValue}\n                add={addCard} cancel={() => { setEditingValue(\"\"); setEditingNew(false) }} />\n            )}\n            {items.map((card, index) => <Card card={card} styles={styles} index={index} key={card.id} />)}\n          </div>\n          {provided.placeholder}\n        </React.Fragment>\n      )}\n    </Droppable>\n  );\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided, snapshot) => (\n        <div ref={provided.innerRef}\n          {...provided.draggableProps}\n          className={styles.columnContainer + (snapshot.isDragging ? \" \"+styles.draggingColumn : \"\")}\n          style={provided.draggableProps.style}>\n          <div className={styles.column}>\n            <div {...provided.dragHandleProps}>\n              <ColumnHeader styles={styles} col={col} add={addButton} menu={menuButton} />\n            </div>\n            {internals}\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n}\n\nconst EditingCard = ({ value, setValue, add, cancel }) => {\n  return (\n    <div>\n      <TextField\n        label=\"New Card\"\n        multiline\n        rowsMax={6}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        variant=\"filled\"\n        style={{ width: \"100%\" }} />\n      <ButtonGroup variant=\"contained\" size='small'\n        style={{marginBottom: 8, boxShadow: \"0px 4px 2px -2px rgba(0,0,0,0.15)\", width: \"100%\"}}>\n        <Button style={{flexGrow: 1}} variant='contained' onClick={add}>\n          Done\n        </Button>\n        <Button onClick={cancel}><DeleteIcon style={{color: '#555'}} /></Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\n// header name, add button, chips for each addon (WIP limit, EBS time estimate, etc), menu button\nconst ColumnHeader = ({ styles, col, add, menu }) => {\n  const dispatch = useDispatch();\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => setConfirmOpen(false) ||\n    res && dispatch(duck.deleteColumn(col.id));\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = res => setPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.renameColumn({ colID: col.id, name: res }));\n\n  const archiveAll = () => dispatch(duck.archiveCardsInColumn(col.id));\n\n  return (\n    <div>\n      <div className={styles.columnHeaderContainer}>\n        <div className={styles.columnHeaderText}>\n          {col.name}\n        </div>\n        <div>\n          <Chip size='small' label=\"0/6\" />\n          <Chip size='small' label=\"3h\" />\n          <IconButton size='small' onClick={() => add()}>\n            <AddIcon />\n          </IconButton>\n          <PopoverMenu map={{\n            \"Archive all\": () => archiveAll(),\n            \"Rename\": () => setPromptOpen(true),\n            \"Delete\": () => setConfirmOpen(true),\n          }}>\n            <IconButton size='small'>\n              <MoreVertIcon />\n            </IconButton>\n          </PopoverMenu>\n        </div>\n      </div>\n      <hr className={styles.columnHeaderRule} />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this column?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title={`Rename column \"${col.name}\"`} subtitle=\"Don't worry, this action can be undone.\"\n          label=\"Name\" placeholder={col.name} />\n      )}\n    </div>\n  );\n};\n\nconst Card = ({ card, styles, index }) => {\n  const { id, content } = card;\n  const dispatch = useDispatch();\n  const [promptOpen, setPromptOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Draggable draggableId={id} index={index}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={styles.card + (snapshot.isDragging ? \" \"+styles.draggingCard : \"\")}\n            style={provided.draggableProps.style}\n            onClick={() => setPromptOpen(true)}>\n            <ReactMarkdown source={content} />\n            <Description.Indicator card={card} />\n            <DateTime.Indicator    card={card} />\n            <EBS.Indicator         card={card} />\n          </div>\n        )}\n      </Draggable>\n      {promptOpen && (\n        <CardEditDialog respond={() => setPromptOpen(false)} card={card} />\n      )}\n    </React.Fragment>\n  );\n}\n\nconst AddColumn = ({ styles, add, hide }) => {\n  return (\n    <div className={styles.addColumnContainer} style={{\n      marginLeft: hide ? cardWidth + 4*grid + 2 : 0 }}>\n      <div className={styles.addColumn}>\n        <IconButton onClick={add}>\n          <AddIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TabView, UndoRedo } from '../components';\nimport BoardView from './boardview';\nimport * as duck from '../ducks/kanban';\nimport { selectors } from '../store';\nimport { PopoverMenu, ConfirmDialog, PromptDialog } from '../components';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const [currentTab, setCurrentTab] = React.useState(0);\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => setConfirmOpen(false) ||\n    res && (dispatch(duck.deleteTab(currentTab)), setCurrentTab(Math.max(0,currentTab-1)));\n\n  const [addPromptOpen, setAddPromptOpen] = React.useState(false);\n  const addPromptRespond = res => setAddPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.addTab(res));\n\n  const [renamePromptOpen, setRenamePromptOpen] = React.useState(false);\n  const renamePromptRespond = res => setRenamePromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.renameTab({ tabID: tabs[currentTab].id, name: res }));\n\n  // [{name, id, columns (ids)},...]\n  const tabs = useSelector(selectors.boards.tabs);\n  return (\n    <React.Fragment>\n      <TabView\n        tabs={tabs.map(tab => tab.name)}\n        render={i => <BoardView tabInfo={{ tab: tabs[i], index: i }} />}\n        addTab={() => setAddPromptOpen(true)}\n        renameTab={() => setRenamePromptOpen(true)}\n        deleteTab={() => tabs.length > 1 ? setConfirmOpen(true) : alert(\"Cannot delete only tab\")}\n        moveTab={data => dispatch(duck.moveTab(data))}\n        children={<UndoRedo />}\n        index={currentTab} setIndex={setCurrentTab}\n      />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this tab?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {addPromptOpen && (\n        <PromptDialog open respond={addPromptRespond} title=\"Add tab\" label=\"Name\" />\n      )}\n      {renamePromptOpen && (\n        <PromptDialog open respond={renamePromptRespond}\n          title={`Rename tab ${tabs[currentTab].name}`} label=\"Name\" />\n      )}\n    </React.Fragment>\n  );\n}\n","\n/**\n * app.js\n * Main JSX source file for the app\n * Details like screen size and renderer are abstracted away by index.[platform].js\n * and ../index.js\n */\n\nimport React from 'react';\nimport { StyleSheet, Text, View, Platform } from 'react-native';\nimport { Provider } from 'react-redux';\n\nimport { Button, MenuBar } from './components';\nimport Kanban from './kanban';\nimport store from './store';\n\nexport default () => {\n  const [active, setActive] = React.useState(0);\n  const style = Platform.OS === \"web\"\n    ? { height: \"calc(100% - 48px)\" }\n    : { flexGrow: 1 };\n\n  return (\n    <Provider store={store}>\n      <View style={{ top: 0, left: 0, height: \"100%\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n\n        <View style={style}>\n          { active === 0 && (\n            <Kanban />\n          )}\n        </View>\n\n        <MenuBar active={active} setActive={setActive} />\n\n      </View>\n    </Provider>\n  );\n}\n","\nimport { registerRootComponent } from 'expo';\n\nimport Application from './src/index';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(Application);\n","\n/**\n * index.web.js\n * Simple Application wrapper that implements web-specific functionality\n */\n\nimport React from 'react';\nimport Application from './app';\n\nexport default props => (\n  <Application style={{ top: 0, left: 0, height: \"100%\", width: \"100%\" }} />\n);\n"],"sourceRoot":""}