{"version":3,"sources":["web-build/register-service-worker.js","src/components/tabview.js","src/components/button.js","src/components/menubar.js","src/components/popovermenu.js","src/components/undoredo.js","src/common/utils.js","src/ducks/kanban.js","src/components/dialogs.js","src/kanban/boardview.js","src/kanban/index.js","src/store.js","src/app.js","src/index.web.js","index.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","TabPanel","show","children","hidden","style","height","tabs","render","React","value","setValue","flex","AppBar","position","backgroundColor","zIndex","Tabs","onChange","event","newValue","indicatorColor","textColor","map","tab","Tab","label","key","View","flexGrow","i","makeStyles","theme","button","active","setActive","Fragment","color","top","bottom","Toolbar","minHeight","IconButton","edge","onClick","log","e","val","TabIndicatorProps","verticalAlign","anchorEl","setAnchorEl","handleClose","keepMounted","open","Boolean","onClose","Object","entries","name","func","MenuItem","currentTarget","dispatch","useDispatch","ActionCreators","undo","redo","generateID","Math","random","toString","dummyState","initial","id","colnums","numcards","reduce","a","b","cards","push","content","columns","cnt","length","items","slice","card","dummyCols","colIDs","col","transferCard","createAction","reorderCard","addCard","editCardContent","editCard","deleteCard","addColumn","deleteColumn","renameColumn","_getCardByID","state","filter","indexFromID","list","item","indexOf","deleteByID","splice","deleteInList","elem","index","initialState","localStorage","hasOwnProperty","JSON","parse","getItem","loadState","reducer","createReducer","s","srcColIdx","payload","srcColID","dstColIdx","dstColID","srcCol","dstCol","srcIndex","removed","dstIndex","colIdx","colID","newitems","cardID","unshift","forEach","tabID","undoable","ConfirmDialog","respond","title","subtitle","labels","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","variant","autoFocus","PromptDialog","inputType","placeholder","buttons","done","x","TextField","margin","fullWidth","type","target","CardEditDialog","setContent","currentColID","useSelector","boards","present","setColID","labelIDs","InputLabel","Select","labelId","duck","useStyles","root","display","flexDirection","flexWrap","padding","flexShrink","column","background","paddingBottom","width","border","borderRadius","maxHeight","overflow","draggingOverColumn","columnHeaderContainer","justifyContent","columnHeaderText","marginBottom","fontFamily","fontWeight","fontSize","columnHeaderRule","cardWidth","marginLeft","userSelect","grid","boxShadow","draggingCard","tabInfo","tabObj","styles","_getColByID","promptOpen","setPromptOpen","overflowX","onDragEnd","res","destination","source","droppableId","className","add","Column","editingNew","setEditingNew","editingValue","setEditingValue","addButton","menuButton","provided","snapshot","ref","innerRef","classNames","isDraggingOver","menu","overflowY","cancel","EditingCard","multiline","rowsMax","ButtonGroup","size","ColumnHeader","confirmOpen","setConfirmOpen","Chip","Card","draggableId","draggableProps","dragHandleProps","isDragging","split","AddColumn","alignItems","combineReducers","store","configureStore","document","ctrlKey","which","UndoActionCreators","shiftKey","subscribe","serialised","stringify","setItem","saveState","getState","useState","Platform","OS","left","registerRootComponent","props"],"mappings":"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","file":"static/js/app.f720e8ca.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/Mirror/expo-service-worker.js', { scope: '/Mirror/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","\n/**\n * TabView component\n *\n * <TabView\n *   tabs={[\"one\", \"two\", \"three\"]}\n *   render={i => (<SomeComponent index={i} />)}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { AppBar, Tabs, Tab, Typography, Box } from '@material-ui/core';\n\nconst TabPanel = ({ show, children }) => (\n  <div hidden={!show} style={{ height: 'calc(100% - 48px)' }}>\n    {show && children}\n  </div>\n);\n\nexport default ({ tabs, render, children }) => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => setValue(newValue);\n\n  return (\n    <div style={{ flex: 1 }}>\n      <AppBar position=\"static\" style={{\n          backgroundColor: \"white\",\n          zIndex: 2, position: 'relative'\n        }}>\n        <Tabs value={value} onChange={handleChange}\n          indicatorColor=\"primary\" textColor=\"primary\">\n          {tabs.map(tab => (\n            <Tab label={tab} key={tab} />\n          ))}\n          <View style={{flexGrow: 1}}></View>\n          {children}\n        </Tabs>\n      </AppBar>\n      {tabs.map((tab, i) => (\n        <TabPanel show={value === i} key={tab}>\n          {value === i && render(i)}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({ button: {} }));\n\nexport default props => (\n  <Button className={useStyles().button} variant=\"contained\" color=\"primary\" {...props} />\n);\n","\n/**\n * MenuBar component\n *\n * <MenuBar active={0} setActive={...} />\n *  (active is index of current screen)\n *\n */\n\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Tabs, Tab } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport NotesIcon from '@material-ui/icons/Notes';\n\nexport default ({ active, setActive }) => {\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" style={{ top: 'auto', bottom: 0 }}>\n        <Toolbar style={{ minHeight: 0 }}>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => console.log(\"open menu\")}>\n            <MenuIcon />\n          </IconButton>\n          <Tabs\n            value={active} onChange={(e, val) => setActive(val)}\n            TabIndicatorProps={{ style: { backgroundColor: 'white' } }}\n          >\n            <Tab label={<div><DeveloperBoardIcon style={{verticalAlign: 'middle'}} /> Board</div>}  />\n            <Tab label={<div><NotesIcon style={{verticalAlign: 'middle'}} /> Notes</div>}  />\n          </Tabs>\n          <div style={{ flexGrow: 1 }} />\n          <IconButton edge=\"end\" color=\"inherit\">\n            <MoreIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","\n// Popover menu (web)\nimport * as React from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\n\n\nexport default ({ map, children }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => setAnchorEl(null);\n\n  return (\n    <React.Fragment>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}>\n        {Object.entries(map).map(([name, func]) => (\n          <MenuItem key={name}\n            onClick={() => { handleClose(); func() }}>\n            {name}\n          </MenuItem>\n        ))}\n      </Menu>\n      {React.cloneElement(children, {\n        onClick: e => setAnchorEl(e.currentTarget)\n      })}\n    </React.Fragment>\n  );\n}\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport { ActionCreators } from 'redux-undo'\n\nexport default () => {\n  const dispatch = useDispatch();\n  return (\n    <React.Fragment>\n      <IconButton onClick={() => dispatch(ActionCreators.undo())}>\n        <UndoIcon />\n      </IconButton>\n      <IconButton onClick={() => dispatch(ActionCreators.redo())}>\n        <RedoIcon />\n      </IconButton>\n    </React.Fragment>\n  );\n};\n","\nexport const generateID = () => Math.random().toString();\n\n// generate { cards, columns } where each column has colnum[i] cards\n// both of these are objects where the keys are unique IDs\n// cards are { id, content } structs\n// todo: make them arrays containing their IDs and write selectors instead\n// columns are { id, items: [ id ] } structs\n// Example: {\n//   cards: [{ id: \"a\", content: \"Item 1\" }],\n//   columns: [{ id: \"b\", items: [\"a\"] }],\n//   tabs: [{ name: \"Main\", columns: [\"b\"] }]\n// }\nexport const dummyCols = colnums => {\n  let numcards = colnums.reduce((a, b) => a + b, 0);\n  let cards = [];\n  for (let i = 0; i < numcards; i++) {\n    let id = (i+1).toString() + \"-\" + generateID();\n    cards.push({ id, content: `Item ${i+1}` });\n  }\n  let columns = [];\n  for (let i = 0, cnt = 0; i < colnums.length; i++) {\n    let items = cards.slice(cnt, cnt + colnums[i]).map(card => card.id);\n    let id = (i + 1).toString() + \"-\" + generateID();\n    columns.push({ id, items, name: `Column (${id})` });\n    cnt += colnums[i];\n  }\n  return { cards, columns };\n};\n\nexport const dummyState = () => {\n  let initial = {\n    tabs: [{ name: \"Main\", id: generateID() }, { name: \"Secondary\", id: generateID() }],\n    ...dummyCols([12,9,6,8,10])\n  };\n  const colIDs = initial.columns.map(col => col.id);\n  initial.tabs[0].columns = [colIDs[0], colIDs[1], colIDs[2]];\n  initial.tabs[1].columns = [colIDs[3], colIDs[4]];\n  return initial;\n}\n\n// load persisted state\nexport const loadState = () => {\n  try {\n    // web\n    if (localStorage.hasOwnProperty(\"kanban\"))\n      return JSON.parse(localStorage.getItem(\"kanban\"));\n    else\n      return dummyState();\n  } catch (e) {\n    // native\n    return dummyState();\n  }\n}\n\nexport const saveState = state => {\n  try {\n    if (localStorage) {\n      const serialised = JSON.stringify(state);\n      localStorage.setItem(\"kanban\", serialised);\n    }\n  } catch (e) {}\n}\n","\n/**\n * Kanban boards core Redux logic\n *\n * State is normalised as { tabs, columns, cards }\n *  where each tab has several columns which contain cards\n *  each has a unique ID as a key in the respective object\n */\n\nimport { createReducer, createAction, createSelector } from '@reduxjs/toolkit';\nimport undoable from 'redux-undo';\nimport { loadState, generateID } from '../common/utils';\n\n// Action creators\n\nexport const transferCard = createAction('kanban/TRANSFER_CARD');\nexport const reorderCard = createAction('kanban/REORDER_CARD');\nexport const addCard = createAction('kanban/ADD_CARD'); // takes { content, colID }\nexport const editCardContent = createAction('kanban/EDIT_CARD_CONTENT');//takes {content, cardID}\nexport const editCard = createAction('kanban/EDIT_CARD'); // takes a card object; allows editing all of a card's params\nexport const deleteCard = createAction('kanban/DELETE_CARD');//takes cardID\n\nexport const moveCard = (srcColID, dstColID, srcIndex, dstIndex) =>\n  srcColID === dstColID\n    ? reorderCard({ colID: srcColID, srcIndex, dstIndex })\n    : transferCard({ srcColID, dstColID, srcIndex, dstIndex });\n\nexport const addColumn = createAction('kanban/ADD_COLUMN'); // takes { name, tabID }\nexport const deleteColumn = createAction('kanban/DELETE_COLUMN'); // takes string column ID\nexport const renameColumn = createAction('kanban/RENAME_COLUMN'); // takes { colID, name }\n\n// Selectors\n\nconst _getColByID = state => id => state.columns.filter(col => col.id === id)[0];\nconst _getCardByID = state => id => state.cards.filter(card => card.id === id)[0];\n\nconst indexFromID = (list, id) => list.map(item => item.id === id).indexOf(true);\nconst deleteByID = list => id => list.splice(indexFromID(list, id), 1);\nconst deleteInList = (list, elem) => {\n  let index = list.indexOf(elem);\n  if (index !== -1) list.splice(index, 1); // undesired behaviour when splicing at (-1, 1)\n};\n\n// higher order function which creates a selector for a specific tab\n// it un-normalises the state for that tab, returning:\n// return :: List[column], column :: { id, items: List[card] }, card :: { id, content }\nexport const getColumnsInTab = tab => state =>\n  state.tabs[tab].columns.map(_getColByID(state))\n    .map(col => ({\n      ...col, items: col.items.map(_getCardByID(state))\n    }));\n\n// Reducers\n\nconst initialState = loadState();\n\nconst reducer = createReducer(initialState, {\n  [transferCard]: (s, a) => {\n    const srcColIdx = indexFromID(s.columns, a.payload.srcColID);\n    const dstColIdx = indexFromID(s.columns, a.payload.dstColID);\n\n    let srcCol = s.columns[srcColIdx].items;\n    let dstCol = s.columns[dstColIdx].items;\n    const [removed] = srcCol.splice(a.payload.srcIndex, 1);\n    dstCol.splice(a.payload.dstIndex, 0, removed);\n  },\n  [reorderCard]: (s, a) => {\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    let newitems = s.columns[colIdx].items;\n    const [removed] = newitems.splice(a.payload.srcIndex, 1);\n    newitems.splice(a.payload.dstIndex, 0, removed);\n    s.columns[colIdx].items = newitems;\n  },\n  [addCard]: (s, a) => {\n    const { content, colID } = a.payload;\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    const cardID = generateID();\n    s.cards.push({ id: cardID, content });   // add to cards list\n    s.columns[colIdx].items.unshift(cardID); // add to top of column\n  },\n  [deleteColumn]: (s, a) => {\n    const colIdx = indexFromID(s.columns, a.payload);\n    s.columns[colIdx].items.forEach(deleteByID(s.cards));\n    s.tabs.forEach(tab => deleteInList(tab.columns, a.payload));\n    deleteByID(s.columns)(a.payload);\n  },\n  [renameColumn]: (s, a) => {\n    s.columns[indexFromID(s.columns, a.payload.colID)].name = a.payload.name;\n  },\n  [editCardContent]: (s, a) => {\n    s.cards[indexFromID(s.cards, a.payload.cardID)].content = a.payload.content;\n  },\n  [deleteCard]: (s, a) => {\n    const cardIdx = indexFromID(s.cards, a.payload);\n    s.columns.forEach(col => deleteInList(col.items, a.payload));\n    deleteByID(s.cards)(a.payload);\n  },\n  [addColumn]: (s, a) => {\n    const id = generateID();\n    s.columns.push({ id, items: [], name: a.payload.name });\n    s.tabs[indexFromID(s.tabs, a.payload.tabID)].columns.push(id);\n  },\n  [editCard]: (s, a) => {\n    s.cards[indexFromID(s.cards, a.payload.card.id)] = a.payload.card;\n    s.columns.forEach(col => deleteInList(col.items, a.payload.card.id));\n    s.columns[indexFromID(s.columns, a.payload.colID)].items.unshift(a.payload.card.id);\n  },\n});\n\nexport default undoable(reducer);\n","\nimport * as React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n         TextField, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport * as duck from '../ducks/kanban';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { generateID } from '../common/utils';\n\n// TODO: can we have a promise API for generating dialogs on the fly and getting their results?\n// This method means the user has to manage 'open' state\nexport const ConfirmDialog = ({ open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"] }) => {\n  return (\n    <Dialog open={open} onClose={() => respond(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {subtitle}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => respond(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => respond(true)} color=\"primary\" variant=\"contained\" autoFocus>\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const PromptDialog = ({\n  open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"],\n  label, inputType = \"text\", placeholder = \"\", buttons = null\n}) => {\n  const [value, setValue] = React.useState(placeholder);\n  const done = x => { respond(x); setValue(placeholder) };\n  return (\n    <Dialog open={open} onClose={() => done(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        {typeof subtitle === \"string\" && (\n          <DialogContentText>\n            {subtitle}\n          </DialogContentText>\n        )}\n        <TextField autoFocus margin=\"dense\" fullWidth\n          label={label} type={inputType} value={value} onChange={e => setValue(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        {buttons}\n        <Button onClick={() => done(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => done(value)} color=\"primary\" variant=\"contained\">\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const CardEditDialog = ({ respond, card }) => {\n  const dispatch = useDispatch();\n\n  const [content, setContent] = React.useState(card.content);\n\n  const currentColID = useSelector(state =>\n    state.boards.present.columns\n      .filter(col => col.items.indexOf(card.id) !== -1)[0].id);\n  const [colID, setColID] = React.useState(currentColID);\n\n  //TODO: extract global boards selector so we can change state.boards.present to anything\n  // else we need as new requirements arise without causing serious problems\n  const columns = useSelector(state => state.boards.present.columns);\n\n  const done = () => (respond(), setContent(card.content));\n  const deleteCard = () => (dispatch(duck.deleteCard(card.id)), done());\n  const editCard = () => (dispatch(duck.editCard({card:{...card, content}, colID})), done());\n\n  const labelIDs = [generateID()];\n  return (\n    <Dialog open onClose={() => done(null)}>\n      <DialogTitle>Edit card</DialogTitle>\n      <DialogContent>\n        <InputLabel id={labelIDs[0]}>Column</InputLabel>\n        <Select labelId={labelIDs[0]} value={colID} onChange={e => setColID(e.target.value)}>\n          {columns.map(col => (\n            <MenuItem value={col.id} key={col.id}>{col.name}</MenuItem>\n          ))}\n        </Select>\n\n        <TextField autoFocus margin=\"dense\" fullWidth\n          label=\"Title\" type=\"text\" value={content} onChange={e => setContent(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={deleteCard}>Delete</Button>\n        <Button onClick={done} color=\"primary\">Cancel</Button>\n        <Button onClick={editCard} color=\"primary\" variant=\"contained\">OK</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","\n/**\n * BoardView component\n *\n * <BoardView\n *   tab={tabIndex}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\nimport { View, Text } from 'react-native';\nimport { makeStyles, Button, IconButton, ButtonGroup, TextField, Chip } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport classNames from 'classnames';\nimport { PopoverMenu, ConfirmDialog, PromptDialog, CardEditDialog } from '../components';\n\nconst grid = 8;\nconst cardWidth = 350;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    padding: grid,\n    \"& *\": {flexShrink: 0}\n  },\n  column: {\n    background: '#DFEEEE',\n    padding: grid,\n    paddingBottom: 24,\n    width: cardWidth,\n    border: '1px solid #CCDCDC',\n    borderRadius: 5,\n    margin: grid,\n\n    // TODO: install react-custom-scrollbars and use this instead with autohide\n    // there is a bug where moving cards to the tallest column leads to a scrollbar flashing up\n    // and we don't want the scrollbar to take up horizontal space and force the cards to reflow\n\n    maxHeight: 'calc(100vh - 160px)',\n    overflow: 'hidden'\n  },\n  draggingOverColumn: {\n    background: '#DAEBEB',\n    border: '1px solid #BBCBCB'\n  },\n  columnHeaderContainer: {\n    padding: \"8 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  columnHeaderText: {\n    marginBottom: 4,\n    fontFamily: 'sans-serif',\n    fontWeight: 500,\n    fontSize: '1.2em'\n  },\n  columnHeaderRule: {\n    overflow: \"hidden\",\n    border: \"none\",\n    color: \"#CCDCDC\",\n    backgroundColor: \"#CCDCDC\",\n    height: \"1px\",\n    width: cardWidth + grid * 2 + 1, //+1 is border\n    marginLeft: -(grid+1)\n  },\n  card: {\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    background: 'white',\n    borderRadius: 5,\n    overflow: 'hidden',\n    \"&:hover, &:focus\": {\n      boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n    },\n    \"&>p\": {\n      margin: 0\n    }\n  },\n  draggingCard: {\n    background: 'rgba(255, 255, 255, 0.6)',\n    boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n  }\n}));\n\nexport default ({ tabInfo }) => {\n  const tab = tabInfo.index;\n  const tabObj = tabInfo.tab;\n  const dispatch = useDispatch();\n  const styles = useStyles();\n\n  // TODO: is there a way to memoise these higher order selectors?\n  // TODO: how do we deal with .boards namespace being only needed part of the time\n  const columns = useSelector(state => duck.getColumnsInTab(tab)(state.boards.present));\n\n  // dispatch move card action\n  const onDragEnd = res => res.destination ? dispatch(duck.moveCard(\n    res.source.droppableId, res.destination.droppableId,\n    res.source.index, res.destination.index\n  )) : null;\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = name => setPromptOpen(false) ||\n    typeof name === \"string\" && name.length &&\n      dispatch(duck.addColumn({ tabID: tabObj.id, name }));\n\n  return (\n    <View style={{ width: '100vw', overflowX: 'auto', height: '100%' }}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div className={styles.root}>\n          {columns.map(col => <Column col={col} styles={styles} key={col.id} />)}\n          <AddColumn styles={styles} add={() => setPromptOpen(true)} />\n        </div>\n      </DragDropContext>\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title=\"Add column\" label=\"Name\" />\n      )}\n    </View>\n  );\n}\n\nconst Column = ({ styles, col }) => {\n  const { id, items, name } = col;\n\n  const [editingNew, setEditingNew] = React.useState(false);\n  const [editingValue, setEditingValue] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const addCard = () => {\n    if (editingValue.length)\n      dispatch(duck.addCard({\n        content: editingValue,\n        colID: id\n      }));\n    setEditingValue(\"\");\n    setEditingNew(false);\n  };\n  const addButton = () => {\n    if (editingNew)\n      setEditingValue(\"\");\n    setEditingNew(!editingNew);\n  };\n  const menuButton = () => {\n    console.log('pressed menu button');\n  };\n\n  return (\n    <Droppable droppableId={id} style={{ flexGrow: 1 }}>\n      {(provided, snapshot) => (\n        <div ref={provided.innerRef}\n          className={classNames(\n            styles.column,\n            {[styles.draggingOverColumn]: snapshot.isDraggingOver }\n          )}>\n          <ColumnHeader styles={styles} col={col} add={addButton} menu={menuButton} />\n          <div style={{ width: cardWidth, overflowY: 'auto', overflowX: 'hidden', height: \"100%\" }}>\n            {editingNew && (\n              <EditingCard value={editingValue} setValue={setEditingValue}\n                add={addCard} cancel={() => { setEditingValue(\"\"); setEditingNew(false) }} />\n            )}\n            <div style={{ width: cardWidth }}> {/* could -20 to avoid clipping cards */}\n              {items.map((card, index) => <Card card={card} styles={styles} index={index} key={card.id} />)}\n            </div>\n          </div>\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  );\n}\n\nconst EditingCard = ({ value, setValue, add, cancel }) => {\n  return (\n    <div>\n      <TextField\n        label=\"New Card\"\n        multiline\n        rowsMax={6}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        variant=\"filled\"\n        style={{ width: \"100%\" }} />\n      <ButtonGroup variant=\"contained\" size='small'\n        style={{marginBottom: 8, boxShadow: \"0px 4px 2px -2px rgba(0,0,0,0.15)\", width: \"100%\"}}>\n        <Button style={{flexGrow: 1}} variant='contained' onClick={add}>\n          Done\n        </Button>\n        <Button onClick={cancel}><DeleteIcon style={{color: '#555'}} /></Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\n// header name, add button, chips for each addon (WIP limit, EBS time estimate, etc), menu button\nconst ColumnHeader = ({ styles, col, add, menu }) => {\n  const dispatch = useDispatch();\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => setConfirmOpen(false) ||\n    res === true && dispatch(duck.deleteColumn(col.id));\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = res => setPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.renameColumn({ colID: col.id, name: res }));\n\n  return (\n    <div>\n      <div className={styles.columnHeaderContainer}>\n        <div className={styles.columnHeaderText}>\n          {col.name}\n        </div>\n        <div>\n          <Chip size='small' label=\"0/6\" />\n          <Chip size='small' label=\"3h\" />\n          <IconButton size='small' onClick={() => add()}>\n            <AddIcon />\n          </IconButton>\n          <PopoverMenu map={{\n            \"Rename\": () => setPromptOpen(true),\n            \"Delete\": () => setConfirmOpen(true),\n          }}>\n            <IconButton size='small'>\n              <MoreVertIcon />\n            </IconButton>\n          </PopoverMenu>\n        </div>\n      </div>\n      <hr className={styles.columnHeaderRule} />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this column?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title={`Rename column \"${col.name}\"`} subtitle=\"Don't worry, this action can be undone.\"\n          label=\"Name\" placeholder={col.name} />\n      )}\n    </div>\n  );\n};\n\nconst Card = ({ card, styles, index }) => {\n  const { id, content } = card;\n  const dispatch = useDispatch();\n  const [promptOpen, setPromptOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Draggable draggableId={id} index={index}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={classNames(styles.card, { [styles.draggingCard]: snapshot.isDragging })}\n            style={provided.draggableProps.style}\n            onClick={() => setPromptOpen(true)}>\n            {content.split('\\n').map((x,i)=><p key={i}>{x}</p>)}\n          </div>\n        )}\n      </Draggable>\n      {promptOpen && (\n        <CardEditDialog respond={() => setPromptOpen(false)} card={card} />\n      )}\n    </React.Fragment>\n  );\n}\n\nconst AddColumn = ({ styles, add }) => {\n  return (\n    <div className={styles.column} style={{\n        width: cardWidth, display: 'flex', justifyContent: 'center',\n        alignItems: 'center', height: '100px'\n      }}>\n      <IconButton onClick={add}>\n        <AddIcon />\n      </IconButton>\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { TabView, UndoRedo } from '../components';\nimport BoardView from './boardview';\n\nexport default () => {\n  // -> [{name, id, columns (ids)},...]\n  const tabs = useSelector(state => state.boards.present.tabs);\n  return (\n    <TabView\n      tabs={tabs.map(tab => tab.name)}\n      render={i => (<BoardView tabInfo={{ tab: tabs[i], index: i }} />)}\n      children={<UndoRedo />}/>\n  );\n}\n","\nimport { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport boards from './ducks/kanban';\nimport { saveState } from './common/utils';\n\nconst reducer = combineReducers({\n  boards,\n  // notes,\n});\n\nconst store = configureStore({ reducer });\n\n// Undo/redo keyboard shortcuts if supported\ntry {\n  document.addEventListener('keyup', e => {\n    if (e.ctrlKey && e.which === 90)\n      store.dispatch(UndoActionCreators.undo());\n    else if (e.ctrlKey && e.shiftKey && e.which === 90 || e.ctrlKey && e.which === 89)\n      store.dispatch(UndoActionCreators.redo());\n  });\n} catch (e) {}\n\n// Save board state (excluding history)\n// TODO: how can we include history? We cannot serialise all state easily with our combineReducers\n// approach unfortunately\nstore.subscribe(() => saveState(store.getState().boards.present));\n\nexport default store;\n","\n/**\n * app.js\n * Main JSX source file for the app\n * Details like screen size and renderer are abstracted away by index.[platform].js\n * and ../index.js\n */\n\nimport React from 'react';\nimport { StyleSheet, Text, View, Platform } from 'react-native';\nimport { Provider } from 'react-redux';\n\nimport { Button, MenuBar } from './components';\nimport Kanban from './kanban';\nimport store from './store';\n\nexport default () => {\n  const [active, setActive] = React.useState(0);\n  const style = Platform.OS === \"web\"\n    ? { height: \"calc(100% - 48px)\" }\n    : { flexGrow: 1 };\n\n  return (\n    <Provider store={store}>\n      <View style={{ top: 0, left: 0, height: \"100%\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n\n        <View style={style}>\n          { active === 0 && (\n            <Kanban />\n          )}\n        </View>\n\n        <MenuBar active={active} setActive={setActive} />\n\n      </View>\n    </Provider>\n  );\n}\n","\n/**\n * index.web.js\n * Simple Application wrapper that implements web-specific functionality\n */\n\nimport React from 'react';\nimport Application from './app';\n\n// Simple hack to customize the title because we cannot edit the HTML itself.\ntry {\n  document.title = \"Mirror App\";\n} catch (e) {}\n\nexport default props => (\n  <Application style={{ top: 0, left: 0, height: \"100%\", width: \"100%\" }} />\n);\n","\nimport { registerRootComponent } from 'expo';\n\nimport Application from './src/index';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(Application);\n"],"sourceRoot":""}