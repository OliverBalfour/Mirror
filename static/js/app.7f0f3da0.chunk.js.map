{"version":3,"sources":["web-build/register-service-worker.js","src/components/tabview.js","src/components/button.js","src/components/menubar.js","src/common/utils.js","src/ducks/kanban.js","src/kanban/boardview.js","src/kanban/index.js","src/store.js","src/app.js","src/index.web.js","index.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","TabPanel","show","children","hidden","tabs","render","React","value","setValue","style","flex","AppBar","position","backgroundColor","zIndex","Tabs","onChange","event","newValue","indicatorColor","textColor","map","tab","Tab","label","key","i","makeStyles","theme","button","active","setActive","Fragment","color","top","bottom","Toolbar","minHeight","IconButton","edge","onClick","log","e","val","TabIndicatorProps","verticalAlign","flexGrow","generateID","Math","random","toString","substring","transferCard","createAction","reorderCard","addCard","_getCardByID","state","id","cards","filter","card","indexFromID","list","item","indexOf","initialState","initial","name","colnums","numcards","reduce","a","b","push","content","columns","cnt","length","items","slice","dummyCols","colIDs","col","dummyState","reducer","createReducer","s","srcColIdx","payload","srcColID","dstColIdx","dstColID","srcCol","dstCol","splice","srcIndex","removed","dstIndex","colIdx","colID","newitems","cardID","unshift","useStyles","root","height","display","flexDirection","flexWrap","padding","column","background","paddingBottom","width","border","borderRadius","margin","maxHeight","overflow","draggingOverColumn","columnHeaderContainer","justifyContent","columnHeaderText","marginBottom","fontFamily","fontWeight","fontSize","columnHeaderRule","cardWidth","marginLeft","userSelect","grid","boxShadow","draggingCard","dispatch","useDispatch","styles","useSelector","_getColByID","duck","boards","View","onDragEnd","res","destination","source","droppableId","index","className","Column","editingNew","setEditingNew","editingValue","setEditingValue","addButton","provided","snapshot","ref","innerRef","classNames","isDraggingOver","add","overflowY","overflowX","placeholder","EditingCard","TextField","multiline","rowsMax","target","variant","Button","ColumnHeader","Chip","size","Card","draggableId","draggableProps","dragHandleProps","isDragging","split","x","combineReducers","configureStore","useState","Platform","OS","store","left","document","title","registerRootComponent","props"],"mappings":"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","file":"static/js/app.7f0f3da0.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/Mirror/expo-service-worker.js', { scope: '/Mirror/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","\n/**\n * TabView component\n *\n * <TabView\n *   tabs={[\"one\", \"two\", \"three\"]}\n *   render={i => (<SomeComponent index={i} />)}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { AppBar, Tabs, Tab, Typography, Box } from '@material-ui/core';\n\nconst TabPanel = ({ show, children }) => (\n  <div hidden={!show}>\n    {show && children}\n  </div>\n);\n\nexport default ({ tabs, render }) => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => setValue(newValue);\n\n  return (\n    <div style={{ flex: 1 }}>\n      <AppBar position=\"static\" style={{\n          backgroundColor: \"white\",\n          zIndex: 2, position: 'relative'\n        }}>\n        <Tabs value={value} onChange={handleChange}\n          indicatorColor=\"primary\" textColor=\"primary\">\n          {tabs.map(tab => (\n            <Tab label={tab} key={tab} />\n          ))}\n        </Tabs>\n      </AppBar>\n      {tabs.map((tab, i) => (\n        <TabPanel show={value === i} key={tab}>\n          {value === i && render(i)}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({ button: {} }));\n\nexport default props => (\n  <Button className={useStyles().button} variant=\"contained\" color=\"primary\" {...props} />\n);\n","\n/**\n * MenuBar component\n *\n * <MenuBar active={0} setActive={...} />\n *  (active is index of current screen)\n *\n */\n\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Tabs, Tab } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport NotesIcon from '@material-ui/icons/Notes';\n\nexport default ({ active, setActive }) => {\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" style={{ top: 'auto', bottom: 0 }}>\n        <Toolbar style={{ minHeight: 0 }}>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => console.log(\"open menu\")}>\n            <MenuIcon />\n          </IconButton>\n          <Tabs\n            value={active} onChange={(e, val) => setActive(val)}\n            TabIndicatorProps={{ style: { backgroundColor: 'white' } }}\n          >\n            <Tab label={<div><DeveloperBoardIcon style={{verticalAlign: 'middle'}} /> Board</div>}  />\n            <Tab label={<div><NotesIcon style={{verticalAlign: 'middle'}} /> Notes</div>}  />\n          </Tabs>\n          <div style={{ flexGrow: 1 }} />\n          <IconButton edge=\"end\" color=\"inherit\">\n            <MoreIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","\n// random ID: base64 encoded 8 char string of random number and current time\nexport const generateID = () => Math.random().toString().substring(15);\n\n// generate { cards, columns } where each column has colnum[i] cards\n// both of these are objects where the keys are unique IDs\n// cards are { id, content } structs\n// todo: make them arrays containing their IDs and write selectors instead\n// columns are { id, items: [ id ] } structs\n// Example: {\n//   cards: [{ id: \"a\", content: \"Item 1\" }],\n//   columns: [{ id: \"b\", items: [\"a\"] }],\n//   tabs: [{ name: \"Main\", columns: [\"b\"] }]\n// }\nexport const dummyCols = colnums => {\n  let numcards = colnums.reduce((a, b) => a + b, 0);\n  let cards = [];\n  for (let i = 0; i < numcards; i++) {\n    let id = (i+1).toString() + \"-\" + generateID();\n    cards.push({ id, content: `Item ${i+1}` });\n  }\n  let columns = [];\n  for (let i = 0, cnt = 0; i < colnums.length; i++) {\n    let items = cards.slice(cnt, cnt + colnums[i]).map(card => card.id);\n    let id = (i + 1).toString() + \"-\" + generateID();\n    columns.push({ id, items, name: `Column (${id})` });\n    cnt += colnums[i];\n  }\n  return { cards, columns };\n};\n\nexport const dummyState = () => {\n  let initial = {\n    tabs: [{ name: \"Main\" }, { name: \"Secondary\" }],\n    ...dummyCols([12,9,6,8,10])\n  };\n  const colIDs = initial.columns.map(col => col.id);\n  initial.tabs[0].columns = [colIDs[0], colIDs[1], colIDs[2]];\n  initial.tabs[1].columns = [colIDs[3], colIDs[4]];\n  return initial;\n}\n","\n/**\n * Kanban boards core Redux logic\n *\n * State is normalised as { tabs, columns, cards }\n *  where each tab has several columns which contain cards\n *  each has a unique ID as a key in the respective object\n */\n\nimport { createReducer, createAction, createSelector } from '@reduxjs/toolkit';\nimport { dummyState, generateID } from '../common/utils';\n\n// Action creators\n\nexport const transferCard = createAction('kanban/TRANSFER_CARD');\nexport const reorderCard = createAction('kanban/REORDER_CARD');\n\nexport const moveCard = (srcColID, dstColID, srcIndex, dstIndex) =>\n  srcColID === dstColID\n    ? reorderCard({ colID: srcColID, srcIndex, dstIndex })\n    : transferCard({ srcColID, dstColID, srcIndex, dstIndex });\n\nexport const addCard = createAction('kanban/ADD_CARD');\n\n// Selectors\n\nconst _getColByID = state => id => state.columns.filter(col => col.id === id)[0];\nconst _getCardByID = state => id => state.cards.filter(card => card.id === id)[0];\n\nconst indexFromID = (list, id) => list.map(item => item.id === id).indexOf(true);\n\n// higher order function which creates a selector for a specific tab\n// it un-normalises the state for that tab, returning:\n// return :: List[column], column :: { id, items: List[card] }, card :: { id, content }\nexport const getColumnsInTab = tab => state =>\n  state.tabs[tab].columns.map(_getColByID(state))\n    .map(col => ({\n      ...col, items: col.items.map(_getCardByID(state))\n    }));\n\n// Reducers\n\nconst initialState = dummyState();\n\nconst reducer = createReducer(initialState, {\n  [transferCard]: (s, a) => {\n    const srcColIdx = indexFromID(s.columns, a.payload.srcColID);\n    const dstColIdx = indexFromID(s.columns, a.payload.dstColID);\n\n    let srcCol = s.columns[srcColIdx].items;\n    let dstCol = s.columns[dstColIdx].items;\n    const [removed] = srcCol.splice(a.payload.srcIndex, 1);\n    dstCol.splice(a.payload.dstIndex, 0, removed);\n  },\n  [reorderCard]: (s, a) => {\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    let newitems = s.columns[colIdx].items;\n    const [removed] = newitems.splice(a.payload.srcIndex, 1);\n    newitems.splice(a.payload.dstIndex, 0, removed);\n    s.columns[colIdx].items = newitems;\n  },\n  [addCard]: (s, a) => {\n    const { content, colID } = a.payload;\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    const cardID = generateID();\n    s.cards.push({ id: cardID, content });   // add to cards list\n    s.columns[colIdx].items.unshift(cardID); // add to top of column\n  }\n});\n\nexport default reducer;\n","\n/**\n * BoardView component\n *\n * <BoardView\n *   tab={tabIndex}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\nimport { View, Text } from 'react-native';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport classNames from 'classnames';\nimport { IconButton, Chip, TextField, Button } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst grid = 8;\nconst cardWidth = 350;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    padding: grid\n  },\n  column: {\n    background: '#DFEEEE',\n    padding: grid,\n    paddingBottom: 24,\n    width: cardWidth,\n    border: '1px solid #CCDCDC',\n    borderRadius: 5,\n    margin: grid,\n\n    // TODO: install react-custom-scrollbars and use this instead with autohide\n    // there is a bug where moving cards to the tallest column leads to a scrollbar flashing up\n    // and we don't want the scrollbar to take up horizontal space and force the cards to reflow\n\n    maxHeight: 'calc(100vh - 160px)',\n    overflow: 'hidden'\n  },\n  draggingOverColumn: {\n    background: '#DAEBEB',\n    border: '1px solid #BBCBCB'\n  },\n  columnHeaderContainer: {\n    padding: \"8 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  columnHeaderText: {\n    marginBottom: 4,\n    fontFamily: 'sans-serif',\n    fontWeight: 500,\n    fontSize: '1.2em'\n  },\n  columnHeaderRule: {\n    overflow: \"hidden\",\n    border: \"none\",\n    color: \"#CCDCDC\",\n    backgroundColor: \"#CCDCDC\",\n    height: \"1px\",\n    width: cardWidth + grid * 2 + 1, //+1 is border\n    marginLeft: -(grid+1)\n  },\n  card: {\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    background: 'white',\n    borderRadius: 5,\n    overflow: 'hidden',\n    \"&:hover, &:focus\": {\n      boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n    },\n    \"&>p\": {\n      margin: 0\n    }\n  },\n  draggingCard: {\n    background: 'rgba(255, 255, 255, 0.6)',\n    boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n  }\n}));\n\nexport default ({ tab }) => {\n  const dispatch = useDispatch();\n  const styles = useStyles();\n\n  // TODO: is there a way to memoise these higher order selectors?\n  // TODO: how do we deal with .boards namespace being only needed part of the time\n  const columns = useSelector(state => duck.getColumnsInTab(tab)(state.boards));\n\n  // dispatch move card action\n  const onDragEnd = res => res.destination ? dispatch(duck.moveCard(\n    res.source.droppableId, res.destination.droppableId,\n    res.source.index, res.destination.index\n  )) : null;\n\n  return (\n    <View>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div className={styles.root}>\n          {columns.map(col => <Column col={col} styles={styles} key={col.id} />)}\n        </div>\n      </DragDropContext>\n    </View>\n  );\n}\n\nconst Column = ({ styles, col }) => {\n  const { id, items, name } = col;\n\n  const [editingNew, setEditingNew] = React.useState(false);\n  const [editingValue, setEditingValue] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const addCard = () => {\n    dispatch(duck.addCard({\n      content: editingValue,\n      colID: id\n    }));\n    setEditingValue(\"\");\n    setEditingNew(false);\n  };\n  const addButton = () => {\n    if (editingNew)\n      setEditingValue(\"\");\n    setEditingNew(!editingNew);\n  };\n\n  return (\n    <Droppable droppableId={id} style={{ flexGrow: 1 }}>\n      {(provided, snapshot) => (\n        <div ref={provided.innerRef}\n          className={classNames(\n            styles.column,\n            {[styles.draggingOverColumn]: snapshot.isDraggingOver }\n          )}>\n          <ColumnHeader styles={styles} name={name} add={addButton} />\n          <div style={{ width: cardWidth, overflowY: 'auto', overflowX: 'hidden', height: \"100%\" }}>\n            { editingNew && <EditingCard value={editingValue} setValue={setEditingValue} add={addCard} /> }\n            <div style={{ width: cardWidth }}> {/* could -20 to avoid clipping cards */}\n              {items.map((card, index) => <Card card={card} styles={styles} index={index} key={card.id} />)}\n            </div>\n          </div>\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  );\n}\n\nconst EditingCard = ({ value, setValue, add }) => {\n  return (\n    <div>\n      <TextField\n        label=\"New Card\"\n        multiline\n        rowsMax={6}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        variant=\"filled\"\n        style={{ width: \"100%\" }} />\n      <Button style={{ width: \"100%\", marginBottom: 8, boxShadow: \"0px 4px 2px -2px rgba(0,0,0,0.15)\" }} variant='contained' onClick={ add }>Done</Button>\n    </div>\n  );\n};\n\n// header name, add button, chips for each addon (WIP limit, EBS time estimate, etc), menu button\nconst ColumnHeader = ({ styles, name, add }) => (\n  <div>\n    <div className={styles.columnHeaderContainer}>\n      <div className={styles.columnHeaderText}>\n        {name}\n      </div>\n      <div>\n        <Chip size='small' label=\"0/6\" />\n        <Chip size='small' label=\"3h\" />\n        <IconButton size='small' onClick={() => add()}>\n          <AddIcon />\n        </IconButton>\n        <IconButton size='small'>\n          <MoreVertIcon />\n        </IconButton>\n      </div>\n    </div>\n    <hr className={styles.columnHeaderRule} />\n  </div>\n);\n\nconst Card = ({ card, styles, index }) => {\n  const { id, content } = card;\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided, snapshot) => (\n        <div ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className={classNames(styles.card, { [styles.draggingCard]: snapshot.isDragging })}\n          style={provided.draggableProps.style}>\n          {content.split('\\n').map(x=><p>{x}</p>)}\n        </div>\n      )}\n    </Draggable>\n  );\n}\n","\nimport React from 'react';\nimport { TabView } from '../components';\nimport BoardView from './boardview';\n\nexport default () => (\n  <TabView\n    tabs={[\"one\", \"two\"]}\n    render={i => (<BoardView tab={i} />)}\n  />\n);\n","\nimport { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport boards from './ducks/kanban';\n\nconst reducer = combineReducers({\n  boards,\n  // notes,\n});\n\nexport default configureStore({ reducer });\n","\n/**\n * app.js\n * Main JSX source file for the app\n * Details like screen size and renderer are abstracted away by index.[platform].js\n * and ../index.js\n */\n\nimport React from 'react';\nimport { StyleSheet, Text, View, Platform } from 'react-native';\nimport { Provider } from 'react-redux';\n\nimport { Button, MenuBar } from './components';\nimport Kanban from './kanban';\nimport store from './store';\n\nexport default () => {\n  const [active, setActive] = React.useState(0);\n  const style = Platform.OS === \"web\"\n    ? { maxHeight: \"calc(100% - 48px)\" }\n    : { flexGrow: 1 };\n\n  return (\n    <Provider store={store}>\n      <View style={{ top: 0, left: 0, height: \"100%\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n\n        <View style={style}>\n          { active === 0 && (\n            <Kanban />\n          )}\n        </View>\n\n        <MenuBar active={active} setActive={setActive} />\n\n      </View>\n    </Provider>\n  );\n}\n","\n/**\n * index.web.js\n * Simple Application wrapper that implements web-specific functionality\n */\n\nimport React from 'react';\nimport Application from './app';\n\n// Simple hack to customize the title because we cannot edit the HTML itself.\ntry {\n  document.title = \"Mirror App\";\n} catch (e) {}\n\nexport default props => (\n  <Application style={{ top: 0, left: 0, height: \"100%\", width: \"100%\" }} />\n);\n","\nimport { registerRootComponent } from 'expo';\n\nimport Application from './src/index';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(Application);\n"],"sourceRoot":""}