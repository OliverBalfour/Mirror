{"version":3,"sources":["web-build/register-service-worker.js","src/components/popovermenu.js","src/components/tabview.js","src/components/button.js","src/components/menubar.js","src/components/undoredo.js","src/common/utils.js","src/ducks/kanban.js","src/components/dialogs.js","src/kanban/boardview.js","src/kanban/index.js","src/store.js","src/app.js","index.js","src/index.web.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","map","children","React","anchorEl","setAnchorEl","handleClose","Menu","keepMounted","open","Boolean","onClose","Object","entries","name","func","MenuItem","key","onClick","e","currentTarget","TabPanel","show","hidden","style","height","tabs","render","index","setIndex","addTab","renameTab","deleteTab","flex","AppBar","position","backgroundColor","zIndex","Tabs","value","onChange","event","newValue","indicatorColor","textColor","tab","Tab","label","View","flexGrow","IconButton","i","makeStyles","theme","button","active","setActive","Fragment","color","top","bottom","Toolbar","minHeight","edge","log","val","TabIndicatorProps","verticalAlign","localStorage","clear","dispatch","useDispatch","ActionCreators","undo","redo","generateID","Math","random","toString","substring","dummyState","initial","id","colnums","colnames","numcards","reduce","a","b","cards","sampleCards","push","content","floor","length","columns","cnt","items","slice","card","dummyCols","colIDs","col","transferCard","createAction","reorderCard","addCard","editCardContent","editCard","deleteCard","addColumn","deleteColumn","renameColumn","_getCardByID","state","filter","indexFromID","list","item","indexOf","deleteByID","splice","deleteInList","elem","initialState","hasOwnProperty","JSON","parse","getItem","loadState","_deleteColumn","s","colIdx","forEach","reducer","createReducer","srcColIdx","payload","srcColID","dstColIdx","dstColID","srcCol","dstCol","srcIndex","removed","dstIndex","colID","newitems","cardID","unshift","tabID","undoable","limit","ConfirmDialog","respond","title","subtitle","labels","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","variant","autoFocus","PromptDialog","inputType","placeholder","buttons","setValue","done","x","TextField","margin","fullWidth","type","target","CardEditDialog","currentColID","useSelector","boards","present","newCard","setCard","setContent","labelIDs","maxWidth","InputLabel","Select","labelId","multiline","rowsMax","duck","useStyles","root","display","flexDirection","flexWrap","padding","fontSize","flexShrink","column","background","paddingBottom","width","border","borderRadius","transition","overflow","columnHeaderContainer","justifyContent","columnHeaderText","paddingLeft","columnHeaderRule","cardWidth","marginLeft","userSelect","boxShadow","draggingCard","opacity","tabInfo","tabObj","styles","_getColByID","promptOpen","setPromptOpen","overflowX","onDragEnd","res","destination","source","droppableId","className","add","Column","editingNew","setEditingNew","editingValue","setEditingValue","menu","provided","snapshot","overflowY","ref","innerRef","cancel","EditingCard","ButtonGroup","size","marginBottom","ColumnHeader","confirmOpen","setConfirmOpen","Chip","Card","draggableId","draggableProps","dragHandleProps","classNames","isDragging","split","AddColumn","alignItems","currentTab","setCurrentTab","addPromptOpen","setAddPromptOpen","renamePromptOpen","setRenamePromptOpen","alert","max","combineReducers","store","configureStore","document","ctrlKey","which","UndoActionCreators","shiftKey","localStorageSubscriber","serialised","stringify","setItem","saveState","getState","subscribe","useState","Platform","OS","left","registerRootComponent","props"],"mappings":"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","file":"static/js/app.2d6037ce.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/Mirror/expo-service-worker.js', { scope: '/Mirror/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","\n// Popover menu (web)\nimport * as React from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\n\n\nexport default ({ map, children }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => setAnchorEl(null);\n\n  return (\n    <React.Fragment>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}>\n        {Object.entries(map).map(([name, func]) => (\n          <MenuItem key={name}\n            onClick={() => { handleClose(); func() }}>\n            {name}\n          </MenuItem>\n        ))}\n      </Menu>\n      {React.cloneElement(children, {\n        onClick: e => setAnchorEl(e.currentTarget)\n      })}\n    </React.Fragment>\n  );\n}\n","\n/**\n * TabView component\n *\n * <TabView\n *   tabs={[\"one\", \"two\", \"three\"]}\n *   render={i => (<SomeComponent index={i} />)}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { AppBar, Tabs, Tab, IconButton } from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport PopoverMenu from './popovermenu';\n\nconst TabPanel = ({ show, children }) => (\n  <div hidden={!show} style={{ height: 'calc(100% - 48px)' }}>\n    {show && children}\n  </div>\n);\n\nexport default ({ tabs, render, children, index, setIndex, addTab, renameTab, deleteTab }) => {\n  const handleChange = (event, newValue) => setIndex(newValue);\n\n  return (\n    <div style={{ flex: 1 }}>\n      <AppBar position=\"static\" style={{\n          backgroundColor: \"white\",\n          zIndex: 2, position: 'relative'\n        }}>\n        <Tabs value={index} onChange={handleChange}\n          indicatorColor=\"primary\" textColor=\"primary\">\n          {tabs.map(tab => (\n            <Tab label={tab} key={tab} />\n          ))}\n          <View style={{flexGrow: 1}}></View>\n          <PopoverMenu map={{\n            \"Add tab\": () => addTab(),\n            \"Rename tab\": () => renameTab(index),\n            \"Delete tab\": () => deleteTab(index),\n          }}>\n            <IconButton>\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n          {children}\n        </Tabs>\n      </AppBar>\n      {tabs.map((tab, i) => (\n        <TabPanel show={index === i} key={tab}>\n          {index === i && render(i)}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({ button: {} }));\n\nexport default props => (\n  <Button className={useStyles().button} variant=\"contained\" color=\"primary\" {...props} />\n);\n","\n/**\n * MenuBar component\n *\n * <MenuBar active={0} setActive={...} />\n *  (active is index of current screen)\n *\n */\n\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Tabs, Tab } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport PopoverMenu from './popovermenu';\n\nexport default ({ active, setActive }) => {\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" style={{ top: 'auto', bottom: 0 }}>\n        <Toolbar style={{ minHeight: 0 }}>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => console.log(\"open menu\")}>\n            <MenuIcon />\n          </IconButton>\n          <Tabs\n            value={active} onChange={(e, val) => setActive(val)}\n            TabIndicatorProps={{ style: { backgroundColor: 'white' } }}\n          >\n            <Tab label={<div><DeveloperBoardIcon style={{verticalAlign: 'middle'}} /> Board</div>}  />\n            <Tab label={<div><NotesIcon style={{verticalAlign: 'middle'}} /> Notes</div>}  />\n          </Tabs>\n          <div style={{ flexGrow: 1 }} />\n          <PopoverMenu map={{\n            \"Clear saved state\": () => localStorage.clear(), // need lambda because of binding\n          }}>\n            <IconButton edge=\"end\" color=\"inherit\">\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport { ActionCreators } from 'redux-undo'\n\nexport default () => {\n  const dispatch = useDispatch();\n  return (\n    <React.Fragment>\n      <IconButton onClick={() => dispatch(ActionCreators.undo())}>\n        <UndoIcon />\n      </IconButton>\n      <IconButton onClick={() => dispatch(ActionCreators.redo())}>\n        <RedoIcon />\n      </IconButton>\n    </React.Fragment>\n  );\n};\n","\nexport const generateID = () => Math.random().toString().substring(2);\n\n// generate { cards, columns } where each column has colnum[i] cards\n// both of these are objects where the keys are unique IDs\n// cards are { id, content } structs\n// todo: make them arrays containing their IDs and write selectors instead\n// columns are { id, items: [ id ] } structs\n// Example: {\n//   cards: [{ id: \"a\", content: \"Item 1\" }],\n//   columns: [{ id: \"b\", items: [\"a\"] }],\n//   tabs: [{ name: \"Main\", columns: [\"b\"] }]\n// }\nexport const dummyCols = (colnums, colnames) => {\n  let numcards = colnums.reduce((a, b) => a + b, 0);\n  let cards = [];\n  let sampleCards = [\n    \"Wash the dishes\",\n    \"Make cool app\",\n    \"Run out of ideas for sample tasks for the app you're making\",\n    \"Cook pizza for dinner\",\n    \"Finish your chemistry homework\",\n    \"Write a tutorial explaining how monads are isomorphic to burritos in the category of food\",\n    \"Forget to wrap a line at 300 characters\",\n    \"Learn Common Lisp\",\n    \"Do normal human things\",\n    \"Prove P=NP for N=1\",\n    \"Eat some chocolate\",\n    \"Stop eating so much chocolate\",\n    \"Write witty comment\",\n    \"🙂\"];\n  for (let i = 0; i < numcards; i++) {\n    let id = (i+1).toString() + \"-\" + generateID();\n    cards.push({ id, content: sampleCards[Math.floor(Math.random()*sampleCards.length)] });\n  }\n  let columns = [];\n  for (let i = 0, cnt = 0; i < colnums.length; i++) {\n    let items = cards.slice(cnt, cnt + colnums[i]).map(card => card.id);\n    let id = (i + 1).toString() + \"-\" + generateID();\n    columns.push({ id, items, name: colnames[i] });\n    cnt += colnums[i];\n  }\n  return { cards, columns };\n};\n\n// generate initial dummy state\nexport const dummyState = () => {\n  let initial = {\n    tabs: [{ name: \"Main\", id: generateID() }, { name: \"Secondary\", id: generateID() }],\n    ...dummyCols([9,2,6,5,4], [\"To Do\",\"Doing\",\"Done\",\"Misc 1\",\"Misc 2\"])\n  };\n  const colIDs = initial.columns.map(col => col.id);\n  initial.tabs[0].columns = [colIDs[0], colIDs[1], colIDs[2]];\n  initial.tabs[1].columns = [colIDs[3], colIDs[4]];\n  return initial;\n}\n\n// load persisted state\nexport const loadState = () => {\n  try {\n    // web\n    if (localStorage.hasOwnProperty(\"kanban\"))\n      return JSON.parse(localStorage.getItem(\"kanban\"));\n    else\n      return dummyState();\n  } catch (e) {\n    // native\n    return dummyState();\n  }\n}\n\nexport const saveState = state => {\n  try {\n    if (localStorage) {\n      const serialised = JSON.stringify(state);\n      localStorage.setItem(\"kanban\", serialised);\n    }\n  } catch (e) {}\n}\n","\n/**\n * Kanban boards core Redux logic\n *\n * State is normalised as { tabs, columns, cards }\n *  where each tab has several columns which contain cards\n *  each has a unique ID as a key in the respective object\n */\n\nimport { createReducer, createAction, createSelector } from '@reduxjs/toolkit';\nimport undoable from 'redux-undo';\nimport { loadState, generateID } from '../common/utils';\n\n// Action creators\n\nexport const transferCard = createAction('kanban/TRANSFER_CARD');\nexport const reorderCard = createAction('kanban/REORDER_CARD');\nexport const addCard = createAction('kanban/ADD_CARD'); // takes { content, colID }\nexport const editCardContent = createAction('kanban/EDIT_CARD_CONTENT');//takes {content, cardID}\nexport const editCard = createAction('kanban/EDIT_CARD'); // takes a card object; allows editing all of a card's params\nexport const deleteCard = createAction('kanban/DELETE_CARD');//takes cardID\n\nexport const moveCard = (srcColID, dstColID, srcIndex, dstIndex) =>\n  srcColID === dstColID\n    ? reorderCard({ colID: srcColID, srcIndex, dstIndex })\n    : transferCard({ srcColID, dstColID, srcIndex, dstIndex });\n\nexport const addColumn = createAction('kanban/ADD_COLUMN'); // takes { name, tabID }\nexport const deleteColumn = createAction('kanban/DELETE_COLUMN'); // takes string column ID\nexport const renameColumn = createAction('kanban/RENAME_COLUMN'); // takes { colID, name }\n\nexport const addTab = createAction('kanban/ADD_TAB'); // takes name\nexport const deleteTab = createAction('kanban/DELETE_TAB'); // takes tabIdx\nexport const renameTab = createAction('kanban/RENAME_TAB'); // takes { tabID, name }\n\n// Helpers\n\nconst _getColByID = state => id => state.columns.filter(col => col.id === id)[0];\nconst _getCardByID = state => id => state.cards.filter(card => card.id === id)[0];\n\nconst indexFromID = (list, id) => list.map(item => item.id === id).indexOf(true);\nconst deleteByID = list => id => list.splice(indexFromID(list, id), 1);\nconst deleteInList = (list, elem) => {\n  let index = list.indexOf(elem);\n  if (index !== -1) list.splice(index, 1); // undesired behaviour when splicing at (-1, 1)\n};\n\n// Selectors\n\n// higher order function which creates a selector for a specific tab\n// it un-normalises the state for that tab, returning:\n// return :: List[column], column :: { id, items: List[card] }, card :: { id, content }\nexport const getColumnsInTab = tab => state =>\n  state.tabs[tab].columns.map(_getColByID(state))\n    .map(col => ({\n      ...col, items: col.items.map(_getCardByID(state))\n    }));\n\n// Reducers\n\nconst initialState = loadState();\n\nconst _deleteColumn = (s, id) => {\n  const colIdx = indexFromID(s.columns, id);\n  s.columns[colIdx].items.forEach(deleteByID(s.cards));\n  s.tabs.forEach(tab => deleteInList(tab.columns, id));\n  deleteByID(s.columns)(id);\n};\n\nconst reducer = createReducer(initialState, {\n  [transferCard]: (s, a) => {\n    const srcColIdx = indexFromID(s.columns, a.payload.srcColID);\n    const dstColIdx = indexFromID(s.columns, a.payload.dstColID);\n\n    let srcCol = s.columns[srcColIdx].items;\n    let dstCol = s.columns[dstColIdx].items;\n    const [removed] = srcCol.splice(a.payload.srcIndex, 1);\n    dstCol.splice(a.payload.dstIndex, 0, removed);\n  },\n  [reorderCard]: (s, a) => {\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    let newitems = s.columns[colIdx].items;\n    const [removed] = newitems.splice(a.payload.srcIndex, 1);\n    newitems.splice(a.payload.dstIndex, 0, removed);\n    s.columns[colIdx].items = newitems;\n  },\n  [addCard]: (s, a) => {\n    const { content, colID } = a.payload;\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    const cardID = generateID();\n    s.cards.push({ id: cardID, content });   // add to cards list\n    s.columns[colIdx].items.unshift(cardID); // add to top of column\n  },\n  [deleteColumn]: (s, a) => {\n    _deleteColumn(s, a.payload);\n  },\n  [renameColumn]: (s, a) => {\n    s.columns[indexFromID(s.columns, a.payload.colID)].name = a.payload.name;\n  },\n  [editCardContent]: (s, a) => {\n    s.cards[indexFromID(s.cards, a.payload.cardID)].content = a.payload.content;\n  },\n  [deleteCard]: (s, a) => {\n    const cardIdx = indexFromID(s.cards, a.payload);\n    s.columns.forEach(col => deleteInList(col.items, a.payload));\n    deleteByID(s.cards)(a.payload);\n  },\n  [addColumn]: (s, a) => {\n    const id = generateID();\n    s.columns.push({ id, items: [], name: a.payload.name });\n    s.tabs[indexFromID(s.tabs, a.payload.tabID)].columns.push(id);\n  },\n  [editCard]: (s, a) => {\n    s.cards[indexFromID(s.cards, a.payload.card.id)] = a.payload.card;\n    const srcColIdx = s.columns.map(col => col.items.indexOf(a.payload.card.id) !== -1).indexOf(true);\n    const dstColIdx = indexFromID(s.columns, a.payload.colID);\n    if (srcColIdx !== dstColIdx) {\n      deleteInList(s.columns[srcColIdx].items, a.payload.card.id);\n      s.columns[dstColIdx].items.unshift(a.payload.card.id);\n    }\n  },\n  [deleteTab]: (s, a) => {\n    while (s.tabs[a.payload].columns.length)\n      _deleteColumn(s, s.tabs[a.payload].columns[0]);\n    s.tabs.splice(a.payload, 1);\n  },\n  [addTab]: (s, a) => {\n    s.tabs.push({ name: a.payload, id: generateID(), columns: [] });\n  },\n  [renameTab]: (s, a) => {\n    s.tabs[indexFromID(s.tabs, a.payload.tabID)].name = a.payload.name;\n  }\n});\n\nexport default undoable(reducer, {limit:10});\n","\nimport * as React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n         TextField, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport * as duck from '../ducks/kanban';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { generateID } from '../common/utils';\n\n// TODO: can we have a promise API for generating dialogs on the fly and getting their results?\n// This method means the user has to manage 'open' state\nexport const ConfirmDialog = ({ open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"] }) => {\n  return (\n    <Dialog open={open} onClose={() => respond(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {subtitle}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => respond(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => respond(true)} color=\"primary\" variant=\"contained\" autoFocus>\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const PromptDialog = ({\n  open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"],\n  label, inputType = \"text\", placeholder = \"\", buttons = null\n}) => {\n  const [value, setValue] = React.useState(placeholder);\n  const done = x => { respond(x); setValue(placeholder) };\n  return (\n    <Dialog open={open} onClose={() => done(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        {typeof subtitle === \"string\" && (\n          <DialogContentText>\n            {subtitle}\n          </DialogContentText>\n        )}\n        <TextField autoFocus margin=\"dense\" fullWidth\n          label={label} type={inputType} value={value} onChange={e => setValue(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        {buttons}\n        <Button onClick={() => done(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => done(value)} color=\"primary\" variant=\"contained\">\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const CardEditDialog = ({ respond, card }) => {\n  const dispatch = useDispatch();\n\n  const currentColID = useSelector(state =>\n    state.boards.present.columns\n      .filter(col => col.items.indexOf(card.id) !== -1)[0].id);\n\n  const [newCard, setCard] = React.useState({ card: {...card}, colID: currentColID });\n  const setColID = colID => setCard({ ...newCard, colID });\n  const setContent = content => setCard({ ...newCard, card: {...newCard.card, content} });\n\n  //TODO: extract global boards selector so we can change state.boards.present to anything\n  // else we need as new requirements arise without causing serious problems\n  const columns = useSelector(state => state.boards.present.columns);\n\n  const done = () => (respond(), setContent(card.content));\n  const deleteCard = () => (dispatch(duck.deleteCard(card.id)), done());\n  const editCard = () => (dispatch(duck.editCard(newCard)), done());\n\n  const labelIDs = [generateID()];\n  return (\n    <Dialog open onClose={() => done(null)} fullWidth maxWidth='md'>\n      <DialogTitle>Edit card</DialogTitle>\n      <DialogContent>\n        <InputLabel id={labelIDs[0]}>Column</InputLabel>\n        <Select labelId={labelIDs[0]} value={newCard.colID} onChange={e => setColID(e.target.value)}>\n          {columns.map(col => (\n            <MenuItem value={col.id} key={col.id}>{col.name}</MenuItem>\n          ))}\n        </Select>\n\n        <TextField label=\"Title\" margin=\"dense\" autoFocus fullWidth variant=\"filled\"\n          multiline rowsMax={6} value={newCard.card.content} onChange={e => setContent(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={deleteCard}>Delete</Button>\n        <Button onClick={done} color=\"primary\">Cancel</Button>\n        <Button onClick={editCard} color=\"primary\" variant=\"contained\">OK</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","\n/**\n * BoardView component\n *\n * <BoardView\n *   tab={tabIndex}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\nimport { View, Text } from 'react-native';\nimport { makeStyles, Button, IconButton, ButtonGroup, TextField, Chip } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport classNames from 'classnames';\nimport { PopoverMenu, ConfirmDialog, PromptDialog, CardEditDialog } from '../components';\n\nconst grid = 8;\nconst cardWidth = 300;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    padding: grid,\n    fontSize: \"14px\",\n    \"& *\": {flexShrink: 0}\n  },\n  column: {\n    background: '#DFEEEE',\n    padding: grid,\n    paddingBottom: 24,\n    width: cardWidth,\n    border: '1px solid #CCDCDC',\n    borderRadius: 5,\n    margin: grid,\n    transition: \"border 0.2s\",\n\n    // TODO: install react-custom-scrollbars and use this instead with autohide\n    // there is a bug where moving cards to the tallest column leads to a scrollbar flashing up\n    // and we don't want the scrollbar to take up horizontal space and force the cards to reflow\n\n    height: 'calc(100vh - 160px)',\n    overflow: 'hidden'\n  },\n  columnHeaderContainer: {\n    padding: \"8 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  columnHeaderText: {\n    paddingLeft: 8,\n    paddingBottom: 0,\n    fontSize: '1.4em'\n  },\n  columnHeaderRule: {\n    overflow: \"hidden\",\n    border: \"none\",\n    color: \"#CCDCDC\",\n    backgroundColor: \"#CCDCDC\",\n    height: \"1px\",\n    width: cardWidth + grid * 2 + 1, //+1 is border\n    marginLeft: -(grid+1)\n  },\n  card: {\n    userSelect: 'none',\n    padding: \"10px 13px\",\n    margin: `0 0 ${grid}px 0`,\n    background: 'white',\n    borderRadius: 5,\n    transition: \"opacity 0.3s\",\n    overflow: 'hidden',\n    \"&:hover, &:focus\": {\n      boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n    },\n    \"&>p\": {\n      margin: 0\n    }\n  },\n  draggingCard: {\n    opacity: 0.7,\n    boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n  }\n}));\n\nexport default ({ tabInfo }) => {\n  const tab = tabInfo.index;\n  const tabObj = tabInfo.tab;\n  const dispatch = useDispatch();\n  const styles = useStyles();\n\n  // TODO: is there a way to memoise these higher order selectors?\n  // TODO: how do we deal with .boards namespace being only needed part of the time\n  const columns = useSelector(state => duck.getColumnsInTab(tab)(state.boards.present));\n\n  // dispatch move card action\n  const onDragEnd = res => res.destination ? dispatch(duck.moveCard(\n    res.source.droppableId, res.destination.droppableId,\n    res.source.index, res.destination.index\n  )) : null;\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = name => setPromptOpen(false) ||\n    typeof name === \"string\" && name.length &&\n      dispatch(duck.addColumn({ tabID: tabObj.id, name }));\n\n  return (\n    <View style={{ width: '100vw', overflowX: 'auto', height: '100%' }}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div className={styles.root}>\n          {columns.map(col => <Column col={col} styles={styles} key={col.id} />)}\n          <AddColumn styles={styles} add={() => setPromptOpen(true)} />\n        </div>\n      </DragDropContext>\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title=\"Add column\" label=\"Name\" />\n      )}\n    </View>\n  );\n}\n\nconst Column = ({ styles, col }) => {\n  const { id, items, name } = col;\n\n  const [editingNew, setEditingNew] = React.useState(false);\n  const [editingValue, setEditingValue] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const addCard = () => {\n    if (editingValue.length)\n      dispatch(duck.addCard({\n        content: editingValue,\n        colID: id\n      }));\n    setEditingValue(\"\");\n    setEditingNew(false);\n  };\n  const addButton = () => {\n    if (editingNew)\n      setEditingValue(\"\");\n    setEditingNew(!editingNew);\n  };\n  const menuButton = () => {\n    console.log('pressed menu button');\n  };\n\n  return (\n    <div className={styles.column}>\n      <ColumnHeader styles={styles} col={col} add={addButton} menu={menuButton} />\n      <Droppable droppableId={id} style={{ flexGrow: 1, height: \"100%\" }}>\n        {(provided, snapshot) => (\n          <React.Fragment>\n            <div style={{\n                width: cardWidth, overflowY: 'auto', overflowX: 'hidden', height: \"100%\"\n              }} ref={provided.innerRef}>\n              {editingNew && (\n                <EditingCard value={editingValue} setValue={setEditingValue}\n                  add={addCard} cancel={() => { setEditingValue(\"\"); setEditingNew(false) }} />\n              )}\n              {items.map((card, index) => <Card card={card} styles={styles} index={index} key={card.id} />)}\n            </div>\n            {provided.placeholder}\n          </React.Fragment>\n        )}\n      </Droppable>\n    </div>\n  );\n}\n\nconst EditingCard = ({ value, setValue, add, cancel }) => {\n  return (\n    <div>\n      <TextField\n        label=\"New Card\"\n        multiline\n        rowsMax={6}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        variant=\"filled\"\n        style={{ width: \"100%\" }} />\n      <ButtonGroup variant=\"contained\" size='small'\n        style={{marginBottom: 8, boxShadow: \"0px 4px 2px -2px rgba(0,0,0,0.15)\", width: \"100%\"}}>\n        <Button style={{flexGrow: 1}} variant='contained' onClick={add}>\n          Done\n        </Button>\n        <Button onClick={cancel}><DeleteIcon style={{color: '#555'}} /></Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\n// header name, add button, chips for each addon (WIP limit, EBS time estimate, etc), menu button\nconst ColumnHeader = ({ styles, col, add, menu }) => {\n  const dispatch = useDispatch();\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => setConfirmOpen(false) ||\n    res && dispatch(duck.deleteColumn(col.id));\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = res => setPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.renameColumn({ colID: col.id, name: res }));\n\n  return (\n    <div>\n      <div className={styles.columnHeaderContainer}>\n        <div className={styles.columnHeaderText}>\n          {col.name}\n        </div>\n        <div>\n          <Chip size='small' label=\"0/6\" />\n          <Chip size='small' label=\"3h\" />\n          <IconButton size='small' onClick={() => add()}>\n            <AddIcon />\n          </IconButton>\n          <PopoverMenu map={{\n            \"Rename\": () => setPromptOpen(true),\n            \"Delete\": () => setConfirmOpen(true),\n          }}>\n            <IconButton size='small'>\n              <MoreVertIcon />\n            </IconButton>\n          </PopoverMenu>\n        </div>\n      </div>\n      <hr className={styles.columnHeaderRule} />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this column?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title={`Rename column \"${col.name}\"`} subtitle=\"Don't worry, this action can be undone.\"\n          label=\"Name\" placeholder={col.name} />\n      )}\n    </div>\n  );\n};\n\nconst Card = ({ card, styles, index }) => {\n  const { id, content } = card;\n  const dispatch = useDispatch();\n  const [promptOpen, setPromptOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Draggable draggableId={id} index={index}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={classNames(styles.card, { [styles.draggingCard]: snapshot.isDragging })}\n            style={provided.draggableProps.style}\n            onClick={() => setPromptOpen(true)}>\n            {content.split('\\n').map((x,i)=><p key={i}>{x}</p>)}\n          </div>\n        )}\n      </Draggable>\n      {promptOpen && (\n        <CardEditDialog respond={() => setPromptOpen(false)} card={card} />\n      )}\n    </React.Fragment>\n  );\n}\n\nconst AddColumn = ({ styles, add }) => {\n  return (\n    <div className={styles.column} style={{\n        width: cardWidth, display: 'flex', justifyContent: 'center',\n        alignItems: 'center', height: '100px'\n      }}>\n      <IconButton onClick={add}>\n        <AddIcon />\n      </IconButton>\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TabView, UndoRedo } from '../components';\nimport BoardView from './boardview';\nimport * as duck from '../ducks/kanban';\nimport { PopoverMenu, ConfirmDialog, PromptDialog } from '../components';\n\n// TODO: tabview should not handle tab no state\n\nexport default () => {\n  const dispatch = useDispatch();\n  const [currentTab, setCurrentTab] = React.useState(0);\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => setConfirmOpen(false) ||\n    res && (dispatch(duck.deleteTab(currentTab)), setCurrentTab(Math.max(0,currentTab-1)));\n\n  const [addPromptOpen, setAddPromptOpen] = React.useState(false);\n  const addPromptRespond = res => setAddPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.addTab(res));\n\n  const [renamePromptOpen, setRenamePromptOpen] = React.useState(false);\n  const renamePromptRespond = res => setRenamePromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.renameTab({ tabID: tabs[currentTab].id, name: res }));\n\n  // [{name, id, columns (ids)},...]\n  const tabs = useSelector(state => state.boards.present.tabs);\n  return (\n    <React.Fragment>\n      <TabView\n        tabs={tabs.map(tab => tab.name)}\n        render={i => <BoardView tabInfo={{ tab: tabs[i], index: i }} />}\n        addTab={() => setAddPromptOpen(true)}\n        renameTab={() => setRenamePromptOpen(true)}\n        deleteTab={() => tabs.length > 1 ? setConfirmOpen(true) : alert(\"Cannot delete only tab\")}\n        children={<UndoRedo />}\n        index={currentTab} setIndex={setCurrentTab}\n      />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this tab?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {addPromptOpen && (\n        <PromptDialog open respond={addPromptRespond} title=\"Add tab\" label=\"Name\" />\n      )}\n      {renamePromptOpen && (\n        <PromptDialog open respond={renamePromptRespond}\n          title={`Rename tab ${tabs[currentTab].name}`} label=\"Name\" />\n      )}\n    </React.Fragment>\n  );\n}\n","\nimport { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport boards from './ducks/kanban';\nimport { saveState } from './common/utils';\n\nconst reducer = combineReducers({\n  boards,\n  // notes,\n});\n\nconst store = configureStore({ reducer });\n\n// Undo/redo keyboard shortcuts if supported\ntry {\n  document.addEventListener('keyup', e => {\n    if (e.ctrlKey && e.which === 90)\n      store.dispatch(UndoActionCreators.undo());\n    else if (e.ctrlKey && e.shiftKey && e.which === 90 || e.ctrlKey && e.which === 89)\n      store.dispatch(UndoActionCreators.redo());\n  });\n} catch (e) {}\n\n// Save board state (excluding history)\n// TODO: how can we include history? We cannot serialise all state easily with our combineReducers\n// approach unfortunately\nconst localStorageSubscriber = () => saveState(store.getState().boards.present);\nstore.subscribe(localStorageSubscriber);\nlocalStorageSubscriber(); // save data generated on first run\n\nexport default store;\n","\n/**\n * app.js\n * Main JSX source file for the app\n * Details like screen size and renderer are abstracted away by index.[platform].js\n * and ../index.js\n */\n\nimport React from 'react';\nimport { StyleSheet, Text, View, Platform } from 'react-native';\nimport { Provider } from 'react-redux';\n\nimport { Button, MenuBar } from './components';\nimport Kanban from './kanban';\nimport store from './store';\n\nexport default () => {\n  const [active, setActive] = React.useState(0);\n  const style = Platform.OS === \"web\"\n    ? { height: \"calc(100% - 48px)\" }\n    : { flexGrow: 1 };\n\n  return (\n    <Provider store={store}>\n      <View style={{ top: 0, left: 0, height: \"100%\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n\n        <View style={style}>\n          { active === 0 && (\n            <Kanban />\n          )}\n        </View>\n\n        <MenuBar active={active} setActive={setActive} />\n\n      </View>\n    </Provider>\n  );\n}\n","\nimport { registerRootComponent } from 'expo';\n\nimport Application from './src/index';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(Application);\n","\n/**\n * index.web.js\n * Simple Application wrapper that implements web-specific functionality\n */\n\nimport React from 'react';\nimport Application from './app';\n\nexport default props => (\n  <Application style={{ top: 0, left: 0, height: \"100%\", width: \"100%\" }} />\n);\n"],"sourceRoot":""}