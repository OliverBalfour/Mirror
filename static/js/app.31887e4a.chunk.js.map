{"version":3,"sources":["web-build/register-service-worker.js","src/components/popovermenu.js","src/components/tabview.js","src/components/button.js","src/components/menubar.js","src/components/undoredo.js","src/common/utils.js","src/ducks/kanban.js","src/store.js","src/components/dialogs.js","src/kanban/boardview.js","src/kanban/index.js","src/app.js","index.js","src/index.web.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","map","children","React","anchorEl","setAnchorEl","handleClose","Menu","keepMounted","open","Boolean","onClose","Object","entries","name","func","MenuItem","key","onClick","e","currentTarget","TabPanel","show","hidden","style","height","tabs","render","index","setIndex","addTab","renameTab","deleteTab","moveTab","handleChange","event","newValue","length","flex","AppBar","position","backgroundColor","zIndex","Tabs","value","onChange","indicatorColor","textColor","tab","Tab","label","View","flexGrow","IconButton","i","makeStyles","theme","button","active","setActive","Fragment","color","top","bottom","Toolbar","minHeight","edge","log","val","TabIndicatorProps","verticalAlign","localStorage","clear","dispatch","useDispatch","ActionCreators","undo","redo","generateID","Math","random","toString","substring","dummyState","initial","id","colnums","colnames","numcards","reduce","a","b","cards","sampleCards","push","content","floor","columns","cnt","items","slice","card","dummyCols","colIDs","col","transferCard","createAction","reorderCard","addCard","editCardContent","editCard","deleteCard","addColumn","deleteColumn","renameColumn","moveColumn","indexFromID","list","item","indexOf","deleteByID","splice","deleteInList","elem","selectors","getColumnsInTabs","state","_","initialState","hasOwnProperty","JSON","parse","getItem","loadState","_deleteColumn","s","colIdx","forEach","cardID","reducer","createReducer","srcColIdx","payload","srcColID","dstColIdx","dstColID","srcCol","dstCol","srcIndex","removed","dstIndex","colID","newitems","unshift","tabID","srcIdx","dstIdx","tabIdx","undoable","limit","combineReducers","boards","store","configureStore","document","ctrlKey","which","UndoActionCreators","shiftKey","localStorageSubscriber","serialised","stringify","setItem","saveState","getState","present","subscribe","object","mapFn","globalSelectors","boardSelectors","localSelector","keys","result","ConfirmDialog","respond","title","subtitle","labels","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","variant","autoFocus","PromptDialog","inputType","placeholder","buttons","setValue","done","x","TextField","margin","fullWidth","type","target","CardEditDialog","currentColID","useSelector","sel","filter","newCard","setCard","setContent","editingDescription","setEditingDescription","labelIDs","maxWidth","InputLabel","Select","labelId","multiline","rowsMax","ClickAwayListener","onClickAway","rows","description","undefined","marginTop","source","duck","useStyles","root","display","flexDirection","flexWrap","padding","fontSize","flexShrink","column","background","paddingBottom","width","border","borderRadius","transition","overflow","columnHeaderContainer","justifyContent","columnHeaderText","paddingLeft","columnHeaderRule","cardWidth","marginLeft","userSelect","boxShadow","draggingCard","opacity","columnContainer","draggingColumn","tabInfo","tabObj","styles","promptOpen","setPromptOpen","overflowX","onDragEnd","res","destination","droppableId","direction","provided","snapshot","className","ref","innerRef","add","hide","isDraggingOver","draggingFromThisWith","Column","editingNew","setEditingNew","editingValue","setEditingValue","addButton","menuButton","internals","overflowY","cancel","draggableId","draggableProps","isDragging","dragHandleProps","menu","EditingCard","ButtonGroup","size","marginBottom","ColumnHeader","confirmOpen","setConfirmOpen","Chip","Card","icons","NotesIcon","Icon","icon","AddColumn","alignItems","currentTab","setCurrentTab","addPromptOpen","setAddPromptOpen","renamePromptOpen","setRenamePromptOpen","alert","data","max","useState","Platform","OS","left","registerRootComponent","props"],"mappings":"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","file":"static/js/app.31887e4a.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/Mirror/expo-service-worker.js', { scope: '/Mirror/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","\n// Popover menu (web)\nimport * as React from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\n\n\nexport default ({ map, children }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => setAnchorEl(null);\n\n  return (\n    <React.Fragment>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}>\n        {Object.entries(map).map(([name, func]) => (\n          <MenuItem key={name}\n            onClick={() => { handleClose(); func() }}>\n            {name}\n          </MenuItem>\n        ))}\n      </Menu>\n      {React.cloneElement(children, {\n        onClick: e => setAnchorEl(e.currentTarget)\n      })}\n    </React.Fragment>\n  );\n}\n","\n/**\n * TabView component\n *\n * <TabView\n *   tabs={[\"one\", \"two\", \"three\"]}\n *   render={i => (<SomeComponent index={i} />)}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { AppBar, Tabs, Tab, IconButton } from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport PopoverMenu from './popovermenu';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst TabPanel = ({ show, children }) => (\n  <div hidden={!show} style={{ height: 'calc(100% - 48px)' }}>\n    {show && children}\n  </div>\n);\n\nexport default ({\n  tabs, render, children, index, setIndex,\n  addTab, renameTab, deleteTab, moveTab\n}) => {\n  const handleChange = (event, newValue) => newValue >= 0 && newValue < tabs.length && setIndex(newValue);\n\n  return (\n    <div style={{ flex: 1 }}>\n      <AppBar position=\"static\" style={{\n          backgroundColor: \"white\",\n          zIndex: 2, position: 'relative'\n        }}>\n        <Tabs value={index} onChange={handleChange}\n          indicatorColor=\"primary\" textColor=\"primary\">\n          {tabs.map(tab => (\n            <Tab label={tab} key={tab} />\n          ))}\n          <View style={{flexGrow: 1}}></View>\n          <PopoverMenu map={{\n            \"Add tab\": () => addTab(),\n            \"Rename tab\": () => renameTab(index),\n            \"Delete tab\": () => deleteTab(index),\n            \"Move tab left\": () => (moveTab([index, index-1]), handleChange(null, index-1)),\n            \"Move tab right\": () => (moveTab([index, index+1]), handleChange(null, index+1)),\n          }}>\n            <IconButton>\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n          {children}\n        </Tabs>\n      </AppBar>\n      {tabs.map((tab, i) => (\n        <TabPanel show={index === i} key={tab}>\n          {index === i && render(i)}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({ button: {} }));\n\nexport default props => (\n  <Button className={useStyles().button} variant=\"contained\" color=\"primary\" {...props} />\n);\n","\n/**\n * MenuBar component\n *\n * <MenuBar active={0} setActive={...} />\n *  (active is index of current screen)\n *\n */\n\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Tabs, Tab } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport PopoverMenu from './popovermenu';\n\nexport default ({ active, setActive }) => {\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" style={{ top: 'auto', bottom: 0 }}>\n        <Toolbar style={{ minHeight: 0 }}>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => console.log(\"open menu\")}>\n            <MenuIcon />\n          </IconButton>\n          <Tabs\n            value={active} onChange={(e, val) => setActive(val)}\n            TabIndicatorProps={{ style: { backgroundColor: 'white' } }}\n          >\n            <Tab label={<div><DeveloperBoardIcon style={{verticalAlign: 'middle'}} /> Board</div>}  />\n            <Tab label={<div><NotesIcon style={{verticalAlign: 'middle'}} /> Notes</div>}  />\n          </Tabs>\n          <div style={{ flexGrow: 1 }} />\n          <PopoverMenu map={{\n            \"Clear saved state\": () => localStorage.clear(), // need lambda because of binding\n          }}>\n            <IconButton edge=\"end\" color=\"inherit\">\n              <MoreIcon />\n            </IconButton>\n          </PopoverMenu>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport { ActionCreators } from 'redux-undo'\n\nexport default () => {\n  const dispatch = useDispatch();\n  return (\n    <React.Fragment>\n      <IconButton onClick={() => dispatch(ActionCreators.undo())}>\n        <UndoIcon />\n      </IconButton>\n      <IconButton onClick={() => dispatch(ActionCreators.redo())}>\n        <RedoIcon />\n      </IconButton>\n    </React.Fragment>\n  );\n};\n","\nexport const generateID = () => Math.random().toString().substring(2);\n\n// generate { cards, columns } where each column has colnum[i] cards\n// both of these are objects where the keys are unique IDs\n// cards are { id, content } structs\n// todo: make them arrays containing their IDs and write selectors instead\n// columns are { id, items: [ id ] } structs\n// Example: {\n//   cards: [{ id: \"a\", content: \"Item 1\" }],\n//   columns: [{ id: \"b\", items: [\"a\"] }],\n//   tabs: [{ name: \"Main\", columns: [\"b\"] }]\n// }\nexport const dummyCols = (colnums, colnames) => {\n  let numcards = colnums.reduce((a, b) => a + b, 0);\n  let cards = [];\n  let sampleCards = [\n    \"Wash the dishes\",\n    \"Make cool app\",\n    \"Run out of ideas for sample tasks for the app you're making\",\n    \"Cook pizza for dinner\",\n    \"Finish your chemistry homework\",\n    \"Write a tutorial explaining how monads are isomorphic to burritos in the category of food\",\n    \"Forget to wrap a line at 300 characters\",\n    \"Learn Common Lisp\",\n    \"Do normal human things\",\n    \"Prove P=NP for N=1\",\n    \"Eat some chocolate\",\n    \"Stop eating so much chocolate\",\n    \"Write witty comment\",\n    \"🙂\"];\n  for (let i = 0; i < numcards; i++) {\n    let id = (i+1).toString() + \"-\" + generateID();\n    cards.push({ id, content: sampleCards[Math.floor(Math.random()*sampleCards.length)] });\n  }\n  let columns = [];\n  for (let i = 0, cnt = 0; i < colnums.length; i++) {\n    let items = cards.slice(cnt, cnt + colnums[i]).map(card => card.id);\n    let id = (i + 1).toString() + \"-\" + generateID();\n    columns.push({ id, items, name: colnames[i] });\n    cnt += colnums[i];\n  }\n  return { cards, columns };\n};\n\n// generate initial dummy state\nexport const dummyState = () => {\n  let initial = {\n    tabs: [{ name: \"Main\", id: generateID() }, { name: \"Secondary\", id: generateID() }],\n    ...dummyCols([9,2,6,5,4], [\"To Do\",\"Doing\",\"Done\",\"Misc 1\",\"Misc 2\"])\n  };\n  const colIDs = initial.columns.map(col => col.id);\n  initial.tabs[0].columns = [colIDs[0], colIDs[1], colIDs[2]];\n  initial.tabs[1].columns = [colIDs[3], colIDs[4]];\n  return initial;\n}\n\n// load persisted state\nexport const loadState = () => {\n  try {\n    // web\n    if (localStorage.hasOwnProperty(\"kanban\"))\n      return JSON.parse(localStorage.getItem(\"kanban\"));\n    else\n      return dummyState();\n  } catch (e) {\n    // native\n    return dummyState();\n  }\n}\n\nexport const saveState = state => {\n  try {\n    if (localStorage) {\n      const serialised = JSON.stringify(state);\n      localStorage.setItem(\"kanban\", serialised);\n    }\n  } catch (e) {}\n}\n\n// Source: https://stackoverflow.com/a/14810722/4642943\n// returns a new object with the values at each key mapped using mapFn(value)\nexport const objectMap = (object, mapFn) =>\n  Object.keys(object).reduce(function(result, key) {\n    result[key] = mapFn(object[key])\n    return result\n  }, {});\n","\n/**\n * Kanban boards core Redux logic\n *\n * State is normalised as { tabs, columns, cards }\n *  where each tab has several columns which contain cards\n *  each has a unique ID as a key in the respective object\n */\n\nimport { createReducer, createAction, createSelector } from '@reduxjs/toolkit';\nimport undoable from 'redux-undo';\nimport { loadState, generateID } from '../common/utils';\n\n// Action creators\n\nexport const transferCard = createAction('kanban/TRANSFER_CARD');\nexport const reorderCard = createAction('kanban/REORDER_CARD');\nexport const addCard = createAction('kanban/ADD_CARD'); // takes { content, colID }\nexport const editCardContent = createAction('kanban/EDIT_CARD_CONTENT');//takes {content, cardID}\nexport const editCard = createAction('kanban/EDIT_CARD'); // takes a card object; allows editing all of a card's params\nexport const deleteCard = createAction('kanban/DELETE_CARD');//takes cardID\n\nexport const moveCard = ([srcColID, dstColID, srcIndex, dstIndex]) =>\n  srcColID === dstColID\n    ? reorderCard({ colID: srcColID, srcIndex, dstIndex })\n    : transferCard({ srcColID, dstColID, srcIndex, dstIndex });\n\nexport const addColumn = createAction('kanban/ADD_COLUMN'); // takes { name, tabID }\nexport const deleteColumn = createAction('kanban/DELETE_COLUMN'); // takes string column ID\nexport const renameColumn = createAction('kanban/RENAME_COLUMN'); // takes { colID, name }\nexport const moveColumn = createAction('kanban/MOVE_COLUMN'); // takes [srcIdx, dstIdx, tabIdx]\n\nexport const addTab = createAction('kanban/ADD_TAB'); // takes name\nexport const deleteTab = createAction('kanban/DELETE_TAB'); // takes tabIdx\nexport const renameTab = createAction('kanban/RENAME_TAB'); // takes { tabID, name }\nexport const moveTab = createAction('kanban/MOVE_TAB'); // takes [srcIdx, dstIdx]\n\n// Helpers\n\nconst indexFromID = (list, id) => list.map(item => item.id === id).indexOf(true);\nconst deleteByID = (list, id) => list.splice(indexFromID(list, id), 1);\nconst deleteInList = (list, elem) => {\n  let index = list.indexOf(elem);\n  if (index !== -1) list.splice(index, 1); // undesired behaviour when splicing at (-1, 1)\n};\n\n// Selectors\n\nexport const selectors = {\n  // higher order function which creates a selector for a specific tab\n  // it un-normalises the state for that tab, returning:\n  // return :: List[column], column :: { id, items: List[card] }, card :: { id, content }\n  getColumnsInTabs: state =>\n    state.tabs.map((_, tab) => state.tabs[tab].columns.map(col => state.columns[indexFromID(state.columns, col)])\n      .map(col => ({\n        ...col, items: col.items.map(card => state.cards[indexFromID(state.cards, card)])\n      }))),\n  columns: state => state.columns,\n  tabs: state => state.tabs,\n  cards: state => state.cards,\n};\n\n// Reducers\n\nconst initialState = loadState();\n\nconst _deleteColumn = (s, id) => {\n  const colIdx = indexFromID(s.columns, id);\n  s.columns[colIdx].items.forEach(cardID => deleteByID(s.cards, cardID));\n  s.tabs.forEach(tab => deleteInList(tab.columns, id));\n  deleteByID(s.columns, id);\n};\n\nconst reducer = createReducer(initialState, {\n  [transferCard]: (s, a) => {\n    const srcColIdx = indexFromID(s.columns, a.payload.srcColID);\n    const dstColIdx = indexFromID(s.columns, a.payload.dstColID);\n\n    let srcCol = s.columns[srcColIdx].items;\n    let dstCol = s.columns[dstColIdx].items;\n    const [removed] = srcCol.splice(a.payload.srcIndex, 1);\n    dstCol.splice(a.payload.dstIndex, 0, removed);\n  },\n  [reorderCard]: (s, a) => {\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    let newitems = s.columns[colIdx].items;\n    const [removed] = newitems.splice(a.payload.srcIndex, 1);\n    newitems.splice(a.payload.dstIndex, 0, removed);\n    s.columns[colIdx].items = newitems;\n  },\n  [addCard]: (s, a) => {\n    const { content, colID } = a.payload;\n    const colIdx = indexFromID(s.columns, a.payload.colID);\n    const cardID = generateID();\n    s.cards.push({ id: cardID, content });   // add to cards list\n    s.columns[colIdx].items.unshift(cardID); // add to top of column\n  },\n  [deleteColumn]: (s, a) => {\n    _deleteColumn(s, a.payload);\n  },\n  [renameColumn]: (s, a) => {\n    s.columns[indexFromID(s.columns, a.payload.colID)].name = a.payload.name;\n  },\n  [editCardContent]: (s, a) => {\n    s.cards[indexFromID(s.cards, a.payload.cardID)].content = a.payload.content;\n  },\n  [deleteCard]: (s, a) => {\n    const cardIdx = indexFromID(s.cards, a.payload);\n    s.columns.forEach(col => deleteInList(col.items, a.payload));\n    deleteByID(s.cards, a.payload);\n  },\n  [addColumn]: (s, a) => {\n    const id = generateID();\n    s.columns.push({ id, items: [], name: a.payload.name });\n    s.tabs[indexFromID(s.tabs, a.payload.tabID)].columns.push(id);\n  },\n  [editCard]: (s, a) => {\n    s.cards[indexFromID(s.cards, a.payload.card.id)] = a.payload.card;\n    const srcColIdx = s.columns.map(col => col.items.indexOf(a.payload.card.id) !== -1).indexOf(true);\n    const dstColIdx = indexFromID(s.columns, a.payload.colID);\n    if (srcColIdx !== dstColIdx) {\n      deleteInList(s.columns[srcColIdx].items, a.payload.card.id);\n      s.columns[dstColIdx].items.unshift(a.payload.card.id);\n    }\n  },\n  [deleteTab]: (s, a) => {\n    while (s.tabs[a.payload].columns.length)\n      _deleteColumn(s, s.tabs[a.payload].columns[0]);\n    s.tabs.splice(a.payload, 1);\n  },\n  [addTab]: (s, a) => {\n    s.tabs.push({ name: a.payload, id: generateID(), columns: [] });\n  },\n  [renameTab]: (s, a) => {\n    s.tabs[indexFromID(s.tabs, a.payload.tabID)].name = a.payload.name;\n  },\n  [moveColumn]: (s, a) => {\n    const [srcIdx, dstIdx, tabIdx] = a.payload;\n    let newitems = s.tabs[tabIdx].columns;\n    const [removed] = newitems.splice(srcIdx, 1);\n    newitems.splice(dstIdx, 0, removed);\n    s.tabs[tabIdx].columns = newitems;\n  },\n  [moveTab]: (s, a) => {\n    const [srcIdx, dstIdx] = a.payload;\n    if (dstIdx < 0 || dstIdx >= s.tabs.length) return;\n    let newitems = s.tabs;\n    const [removed] = newitems.splice(srcIdx, 1);\n    newitems.splice(dstIdx, 0, removed);\n    s.tabs = newitems;\n  },\n});\n\nexport default undoable(reducer, {limit:10});\n","\nimport { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport boards, { selectors as boardSelectors } from './ducks/kanban';\nimport { saveState, objectMap } from './common/utils';\n\nconst reducer = combineReducers({\n  boards,\n  // notes,\n});\n\nconst store = configureStore({ reducer });\n\n// Undo/redo keyboard shortcuts if supported\ntry {\n  document.addEventListener('keyup', e => {\n    if (e.ctrlKey && e.which === 90)\n      store.dispatch(UndoActionCreators.undo());\n    else if (e.ctrlKey && e.shiftKey && e.which === 90 || e.ctrlKey && e.which === 89)\n      store.dispatch(UndoActionCreators.redo());\n  });\n} catch (e) {}\n\n// Save board state (excluding history)\n// TODO: how can we include history? We cannot serialise all state easily with our combineReducers\n// approach unfortunately\nconst localStorageSubscriber = () => saveState(store.getState().boards.present);\nstore.subscribe(localStorageSubscriber);\nlocalStorageSubscriber(); // save data generated on first run\n\nexport default store;\n\n// produce global selectors\nexport const globalSelectors = {\n  boards: state => state.boards.present\n}\nexport const selectors = {\n  boards: objectMap(boardSelectors, localSelector => state => localSelector(globalSelectors.boards(state)))\n};\n","\nimport * as React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n         TextField, InputLabel, Select, MenuItem, ClickAwayListener } from '@material-ui/core';\nimport * as duck from '../ducks/kanban';\nimport { globalSelectors as sel, selectors } from '../store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { generateID } from '../common/utils';\nimport ReactMarkdown from 'react-markdown';\n\n// TODO: can we have a promise API for generating dialogs on the fly and getting their results?\n// This method means the user has to manage 'open' state\nexport const ConfirmDialog = ({ open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"] }) => {\n  return (\n    <Dialog open={open} onClose={() => respond(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {subtitle}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => respond(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => respond(true)} color=\"primary\" variant=\"contained\" autoFocus>\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const PromptDialog = ({\n  open, respond, title, subtitle, labels = [\"Cancel\", \"OK\"],\n  label, inputType = \"text\", placeholder = \"\", buttons = null\n}) => {\n  const [value, setValue] = React.useState(placeholder);\n  const done = x => { respond(x); setValue(placeholder) };\n  return (\n    <Dialog open={open} onClose={() => done(null)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        {typeof subtitle === \"string\" && (\n          <DialogContentText>\n            {subtitle}\n          </DialogContentText>\n        )}\n        <TextField autoFocus margin=\"dense\" fullWidth\n          label={label} type={inputType} value={value} onChange={e => setValue(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        {buttons}\n        <Button onClick={() => done(false)} color=\"primary\">\n          {labels[0]}\n        </Button>\n        <Button onClick={() => done(value)} color=\"primary\" variant=\"contained\">\n          {labels[1]}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport const CardEditDialog = ({ respond, card }) => {\n  const dispatch = useDispatch();\n\n  const currentColID = useSelector(state => sel.boards(state).columns\n      .filter(col => col.items.indexOf(card.id) !== -1)[0].id);\n\n  const [newCard, setCard] = React.useState({ card: {...card}, colID: currentColID });\n  const setColID = colID => setCard({ ...newCard, colID });\n  const setContent = content => setCard({ ...newCard, card: {...newCard.card, content} });\n  const setDescription = description => setCard({ ...newCard, card: {...newCard.card, description: description.length ? description : undefined} });\n  const [editingDescription, setEditingDescription] = React.useState(false);\n\n  //TODO: extract global boards selector so we can change state.boards.present to anything\n  // else we need as new requirements arise without causing serious problems\n  const columns = useSelector(selectors.boards.columns);\n  const tabs = useSelector(selectors.boards.tabs);\n  const getTabByColID = colID => tabs[tabs.map(tab => tab.columns.indexOf(colID) !== -1).indexOf(true)];\n\n  const done = () => (respond(), setContent(card.content));\n  const deleteCard = () => (dispatch(duck.deleteCard(card.id)), done());\n  const editCard = () => (dispatch(duck.editCard(newCard)), done());\n\n  const labelIDs = [generateID()];\n  return (\n    <Dialog open onClose={() => done(null)} fullWidth maxWidth='md'>\n      <DialogTitle>Edit card</DialogTitle>\n      <DialogContent>\n        <InputLabel id={labelIDs[0]}>Column</InputLabel>\n        <Select labelId={labelIDs[0]} value={newCard.colID} onChange={e => setColID(e.target.value)}>\n          {columns.map(col => (\n            <MenuItem value={col.id} key={col.id}>{getTabByColID(col.id).name}: {col.name}</MenuItem>\n          ))}\n        </Select>\n\n        <TextField label=\"Title\" margin=\"dense\" autoFocus fullWidth variant=\"filled\"\n          multiline rowsMax={3} value={newCard.card.content} onChange={e => setContent(e.target.value)} />\n        {!editingDescription ? (\n          <div onClick={() => setEditingDescription(true)} style={{marginTop: 8}}>\n            <span style={{color: 'grey'}}>Description</span>\n            <ReactMarkdown source={newCard.card.description} />\n          </div>\n        ) : (\n          <ClickAwayListener onClickAway={() => setEditingDescription(false)}>\n            <TextField label=\"Description\" margin=\"dense\" autoFocus fullWidth variant=\"outlined\"\n              multiline rows={6} rowsMax={16} value={newCard.card.description} onChange={e => setDescription(e.target.value)} />\n          </ClickAwayListener>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={deleteCard}>Delete</Button>\n        <Button onClick={done} color=\"primary\">Cancel</Button>\n        <Button onClick={editCard} color=\"primary\" variant=\"contained\">OK</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","\n/**\n * BoardView component\n *\n * <BoardView\n *   tab={tabIndex}\n * />\n *\n */\n\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as duck from '../ducks/kanban';\nimport { selectors } from '../store';\nimport { View, Text } from 'react-native';\nimport { makeStyles, Button, IconButton, ButtonGroup, TextField, Chip } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { PopoverMenu, ConfirmDialog, PromptDialog, CardEditDialog } from '../components';\nimport ReactMarkdown from 'react-markdown';\n\nconst grid = 8;\nconst cardWidth = 300;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    padding: grid,\n    fontSize: \"14px\",\n    \"& *\": {flexShrink: 0}\n  },\n  column: {\n    background: '#DFEEEE',\n    padding: grid,\n    paddingBottom: 24,\n    width: cardWidth,\n    border: '1px solid #CCDCDC',\n    borderRadius: 5,\n    margin: grid,\n    transition: \"border 0.2s\",\n\n    // TODO: install react-custom-scrollbars and use this instead with autohide\n    // there is a bug where moving cards to the tallest column leads to a scrollbar flashing up\n    // and we don't want the scrollbar to take up horizontal space and force the cards to reflow\n\n    height: 'calc(100vh - 160px)',\n    overflow: 'hidden'\n  },\n  columnHeaderContainer: {\n    padding: \"8 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  columnHeaderText: {\n    paddingLeft: 8,\n    paddingBottom: 0,\n    fontSize: '1.4em'\n  },\n  columnHeaderRule: {\n    overflow: \"hidden\",\n    border: \"none\",\n    color: \"#CCDCDC\",\n    backgroundColor: \"#CCDCDC\",\n    height: \"1px\",\n    width: cardWidth + grid * 2 + 1, //+1 is border\n    marginLeft: -(grid+1)\n  },\n  card: {\n    userSelect: 'none',\n    padding: \"10px 13px\",\n    margin: `0 0 ${grid}px 0`,\n    background: 'white',\n    borderRadius: 5,\n    transition: \"opacity 0.3s\",\n    overflow: 'hidden',\n    \"&:hover, &:focus\": {\n      boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n    },\n    \"&>p\": {\n      margin: 0\n    }\n  },\n  draggingCard: {\n    opacity: 0.7,\n    boxShadow: '0 1px 3px rgba(100, 100, 100, 0.3)'\n  },\n  columnContainer: {\n    transition: \"opacity 0.6s\",\n  },\n  draggingColumn: {\n    opacity: 0.7,\n  },\n}));\n\nexport default ({ tabInfo }) => {\n  const tab = tabInfo.index;\n  const tabObj = tabInfo.tab;\n  const dispatch = useDispatch();\n  const styles = useStyles();\n\n  const columns = useSelector(selectors.boards.getColumnsInTabs)[tab];\n\n  // dispatch move card action\n  const onDragEnd = res => {\n    if (!res.destination) return;\n    if (res.type === \"card\") {\n      dispatch(duck.moveCard([\n        res.source.droppableId, res.destination.droppableId,\n        res.source.index, res.destination.index\n      ]));\n    } else if (res.type === \"column\") {\n      dispatch(duck.moveColumn([\n        res.source.index, res.destination.index, tab\n      ]));\n    }\n  };\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = name => setPromptOpen(false) ||\n    typeof name === \"string\" && name.length &&\n      dispatch(duck.addColumn({ tabID: tabObj.id, name }));\n\n  return (\n    <View style={{ width: '100vw', overflowX: 'auto', height: '100%' }}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"default\" style={{ flexGrow: 1, height: \"100%\" }} direction=\"horizontal\" type=\"column\">\n          {(provided, snapshot) => (\n            <React.Fragment>\n              <div className={styles.root} ref={provided.innerRef}>\n                {columns.map((col, i) => <Column col={col} styles={styles} key={col.id} index={i} />)}\n                <AddColumn styles={styles} add={() => setPromptOpen(true)} hide={snapshot.isDraggingOver || snapshot.draggingFromThisWith} />\n              </div>\n              {provided.placeholder}\n            </React.Fragment>\n          )}\n        </Droppable>\n      </DragDropContext>\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title=\"Add column\" label=\"Name\" />\n      )}\n    </View>\n  );\n}\n\nconst Column = ({ styles, col, index }) => {\n  const { id, items, name } = col;\n\n  const [editingNew, setEditingNew] = React.useState(false);\n  const [editingValue, setEditingValue] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const addCard = () => {\n    if (editingValue.length)\n      dispatch(duck.addCard({\n        content: editingValue,\n        colID: id\n      }));\n    setEditingValue(\"\");\n    setEditingNew(false);\n  };\n  const addButton = () => {\n    if (editingNew)\n      setEditingValue(\"\");\n    setEditingNew(!editingNew);\n  };\n  const menuButton = () => {\n    console.log('pressed menu button');\n  };\n\n  const internals = (\n    <Droppable droppableId={id} style={{ flexGrow: 1, height: \"100%\" }} type=\"card\">\n      {(provided, snapshot) => (\n        <React.Fragment>\n          <div style={{\n              width: cardWidth, overflowY: 'auto', overflowX: 'hidden', height: \"100%\"\n            }} ref={provided.innerRef}>\n            {editingNew && (\n              <EditingCard value={editingValue} setValue={setEditingValue}\n                add={addCard} cancel={() => { setEditingValue(\"\"); setEditingNew(false) }} />\n            )}\n            {items.map((card, index) => <Card card={card} styles={styles} index={index} key={card.id} />)}\n          </div>\n          {provided.placeholder}\n        </React.Fragment>\n      )}\n    </Droppable>\n  );\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided, snapshot) => (\n        <div ref={provided.innerRef}\n          {...provided.draggableProps}\n          className={styles.columnContainer + (snapshot.isDragging ? \" \"+styles.draggingColumn : \"\")}\n          style={provided.draggableProps.style}>\n          <div className={styles.column}>\n            <div {...provided.dragHandleProps}>\n              <ColumnHeader styles={styles} col={col} add={addButton} menu={menuButton} />\n            </div>\n            {internals}\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n}\n\nconst EditingCard = ({ value, setValue, add, cancel }) => {\n  return (\n    <div>\n      <TextField\n        label=\"New Card\"\n        multiline\n        rowsMax={6}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        variant=\"filled\"\n        style={{ width: \"100%\" }} />\n      <ButtonGroup variant=\"contained\" size='small'\n        style={{marginBottom: 8, boxShadow: \"0px 4px 2px -2px rgba(0,0,0,0.15)\", width: \"100%\"}}>\n        <Button style={{flexGrow: 1}} variant='contained' onClick={add}>\n          Done\n        </Button>\n        <Button onClick={cancel}><DeleteIcon style={{color: '#555'}} /></Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\n// header name, add button, chips for each addon (WIP limit, EBS time estimate, etc), menu button\nconst ColumnHeader = ({ styles, col, add, menu }) => {\n  const dispatch = useDispatch();\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => setConfirmOpen(false) ||\n    res && dispatch(duck.deleteColumn(col.id));\n\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const promptRespond = res => setPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.renameColumn({ colID: col.id, name: res }));\n\n  return (\n    <div>\n      <div className={styles.columnHeaderContainer}>\n        <div className={styles.columnHeaderText}>\n          {col.name}\n        </div>\n        <div>\n          <Chip size='small' label=\"0/6\" />\n          <Chip size='small' label=\"3h\" />\n          <IconButton size='small' onClick={() => add()}>\n            <AddIcon />\n          </IconButton>\n          <PopoverMenu map={{\n            \"Rename\": () => setPromptOpen(true),\n            \"Delete\": () => setConfirmOpen(true),\n          }}>\n            <IconButton size='small'>\n              <MoreVertIcon />\n            </IconButton>\n          </PopoverMenu>\n        </div>\n      </div>\n      <hr className={styles.columnHeaderRule} />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this column?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {promptOpen && (\n        <PromptDialog open respond={promptRespond}\n          title={`Rename column \"${col.name}\"`} subtitle=\"Don't worry, this action can be undone.\"\n          label=\"Name\" placeholder={col.name} />\n      )}\n    </div>\n  );\n};\n\nconst Card = ({ card, styles, index }) => {\n  const { id, content } = card;\n  const dispatch = useDispatch();\n  const [promptOpen, setPromptOpen] = React.useState(false);\n  const icons = {\n    description: NotesIcon\n  }\n\n  return (\n    <React.Fragment>\n      <Draggable draggableId={id} index={index}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={styles.card + (snapshot.isDragging ? \" \"+styles.draggingCard : \"\")}\n            style={provided.draggableProps.style}\n            onClick={() => setPromptOpen(true)}>\n            <ReactMarkdown source={content} />\n            {card.description && (() => {\n              const Icon = icons.description;\n              return <Chip size='small' icon={Icon ? <Icon/> : null} label={icons.description.label}\n                style={{ borderRadius: 3, background: 'white' }} title=\"Description\" variant=\"outlined\" />\n            })()}\n          </div>\n        )}\n      </Draggable>\n      {promptOpen && (\n        <CardEditDialog respond={() => setPromptOpen(false)} card={card} />\n      )}\n    </React.Fragment>\n  );\n}\n\nconst AddColumn = ({ styles, add, hide }) => {\n  return (\n    <div className={styles.column} style={{\n        width: cardWidth, display: 'flex', justifyContent: 'center',\n        alignItems: 'center', height: '100px',\n        marginLeft: hide ? cardWidth + 5*grid + 2 : grid\n      }}>\n      <IconButton onClick={add}>\n        <AddIcon />\n      </IconButton>\n    </div>\n  );\n}\n","\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TabView, UndoRedo } from '../components';\nimport BoardView from './boardview';\nimport * as duck from '../ducks/kanban';\nimport { selectors } from '../store';\nimport { PopoverMenu, ConfirmDialog, PromptDialog } from '../components';\n\n// TODO: tabview should not handle tab no state\n\nexport default () => {\n  const dispatch = useDispatch();\n  const [currentTab, setCurrentTab] = React.useState(0);\n\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const confirmRespond = res => setConfirmOpen(false) ||\n    res && (dispatch(duck.deleteTab(currentTab)), setCurrentTab(Math.max(0,currentTab-1)));\n\n  const [addPromptOpen, setAddPromptOpen] = React.useState(false);\n  const addPromptRespond = res => setAddPromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.addTab(res));\n\n  const [renamePromptOpen, setRenamePromptOpen] = React.useState(false);\n  const renamePromptRespond = res => setRenamePromptOpen(false) ||\n    typeof res === \"string\" && res.length &&\n      dispatch(duck.renameTab({ tabID: tabs[currentTab].id, name: res }));\n\n  // [{name, id, columns (ids)},...]\n  const tabs = useSelector(selectors.boards.tabs);\n  return (\n    <React.Fragment>\n      <TabView\n        tabs={tabs.map(tab => tab.name)}\n        render={i => <BoardView tabInfo={{ tab: tabs[i], index: i }} />}\n        addTab={() => setAddPromptOpen(true)}\n        renameTab={() => setRenamePromptOpen(true)}\n        deleteTab={() => tabs.length > 1 ? setConfirmOpen(true) : alert(\"Cannot delete only tab\")}\n        moveTab={data => dispatch(duck.moveTab(data))}\n        children={<UndoRedo />}\n        index={currentTab} setIndex={setCurrentTab}\n      />\n      {confirmOpen && (\n        <ConfirmDialog open respond={confirmRespond}\n          title=\"Delete this tab?\" subtitle=\"Don't worry, this action can be undone.\" />\n      )}\n      {addPromptOpen && (\n        <PromptDialog open respond={addPromptRespond} title=\"Add tab\" label=\"Name\" />\n      )}\n      {renamePromptOpen && (\n        <PromptDialog open respond={renamePromptRespond}\n          title={`Rename tab ${tabs[currentTab].name}`} label=\"Name\" />\n      )}\n    </React.Fragment>\n  );\n}\n","\n/**\n * app.js\n * Main JSX source file for the app\n * Details like screen size and renderer are abstracted away by index.[platform].js\n * and ../index.js\n */\n\nimport React from 'react';\nimport { StyleSheet, Text, View, Platform } from 'react-native';\nimport { Provider } from 'react-redux';\n\nimport { Button, MenuBar } from './components';\nimport Kanban from './kanban';\nimport store from './store';\n\nexport default () => {\n  const [active, setActive] = React.useState(0);\n  const style = Platform.OS === \"web\"\n    ? { height: \"calc(100% - 48px)\" }\n    : { flexGrow: 1 };\n\n  return (\n    <Provider store={store}>\n      <View style={{ top: 0, left: 0, height: \"100%\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n\n        <View style={style}>\n          { active === 0 && (\n            <Kanban />\n          )}\n        </View>\n\n        <MenuBar active={active} setActive={setActive} />\n\n      </View>\n    </Provider>\n  );\n}\n","\nimport { registerRootComponent } from 'expo';\n\nimport Application from './src/index';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(Application);\n","\n/**\n * index.web.js\n * Simple Application wrapper that implements web-specific functionality\n */\n\nimport React from 'react';\nimport Application from './app';\n\nexport default props => (\n  <Application style={{ top: 0, left: 0, height: \"100%\", width: \"100%\" }} />\n);\n"],"sourceRoot":""}